{"version":3,"sources":["customVisuals/sampleDataViews/DotPlotData.ts"],"names":["powerbitests","powerbitests.customVisuals","powerbitests.customVisuals.sampleDataViews","powerbitests.customVisuals.sampleDataViews.DotPlotData","powerbitests.customVisuals.sampleDataViews.DotPlotData.constructor","powerbitests.customVisuals.sampleDataViews.DotPlotData.getDataView"],"mappings":"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","file":"customVisuals/sampleDataViews/DotPlotData.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests.customVisuals.sampleDataViews {\r\n    import SQExprBuilder = powerbi.data.SQExprBuilder;\r\n    import DataView = powerbi.DataView;\r\n    import DataViewMetadata = powerbi.DataViewMetadata;\r\n    import ValueType = powerbi.ValueType;\r\n    import DataViewTransform = powerbi.data.DataViewTransform;\r\n    import DataViewValueColumns = powerbi.DataViewValueColumns;\r\n    import DataViewValueColumn = powerbi.DataViewValueColumn;\r\n\r\n    export class DotPlotData {\r\n\r\n        public getDataView(): DataView {\r\n            let dataViewMetadata: DataViewMetadata = {\r\n                    columns: [{\r\n                        displayName: 'Name',\r\n                        queryName: 'Name',\r\n                        type: ValueType.fromDescriptor({ text: true }),\r\n                        roles: { Category: true }\r\n                    },\r\n                    {\r\n                        displayName: 'Count',\r\n                        queryName: 'Count',\r\n                        type: ValueType.fromDescriptor({ integer: true }),\r\n                        roles: { Series: true }\r\n                    }]\r\n                };\r\n\r\n            let columns: DataViewValueColumn[] = [{\r\n                    source: dataViewMetadata.columns[1],\r\n                    values: [4, 4, 2, 3, 5, 2, 2]\r\n                }];\r\n            let categoryValues = ['Betty', 'Mey', 'Nancy', 'Anna', 'Ben', 'David', 'Tim'];\r\n\r\n            let dataValues: DataViewValueColumns = DataViewTransform.createValueColumns(columns);\r\n            let fieldExpr = SQExprBuilder.fieldExpr({ column: { schema: 's', entity: \"table1\", name: \"names\" } });\r\n            let categoryIdentities = categoryValues.map((value) =>\r\n                powerbi.data.createDataViewScopeIdentity(SQExprBuilder.equal(fieldExpr, SQExprBuilder.text(value))));\r\n\r\n            return {\r\n                   metadata: dataViewMetadata,\r\n                   categorical: {\r\n                       categories: [{\r\n                            source: dataViewMetadata.columns[0],\r\n                            values: categoryValues,\r\n                            identity: categoryIdentities\r\n                        }],\r\n                        values: dataValues\r\n                    }\r\n               };\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}