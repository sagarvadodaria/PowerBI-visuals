{"version":3,"sources":["visuals/tooltipTests.ts"],"names":["powerbitests","powerbitests.getMockTooltipEvent","powerbitests.getMockTooltipData","powerbitests.emulateShowTooltip","powerbitests.emulateTouchClick","powerbitests.getTooltipVisibility","powerbitests.hideTooltip","powerbitests.createDomElement","powerbitests.getLineChartMockTooltipData","powerbitests.createLineChartDomElement"],"mappings":"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","file":"visuals/tooltipTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import TooltipBuilder = powerbi.visuals.TooltipBuilder;\r\n    import TooltipManager = powerbi.visuals.TooltipManager;\r\n    import TooltipEvent = powerbi.visuals.TooltipEvent;\r\n    import ValueType = powerbi.ValueType;\r\n    import SVGUtil = powerbi.visuals.SVGUtil;\r\n\r\n    powerbitests.mocks.setLocale();\r\n\r\n    describe(\"Tooltip\", () => {\r\n\r\n        it('Tooltip instance created', () => {\r\n            expect(TooltipManager.ToolTipInstance).toBeDefined();\r\n        });\r\n\r\n        it('Tooltip has localization options defined', () => {\r\n            expect(powerbi.visuals.ToolTipComponent.localizationOptions).toBeDefined();\r\n        });\r\n    });\r\n\r\n    describe(\"Tooltip DOM tests\",() => {\r\n        let element: JQuery;\r\n        let d3Element: D3.Selection;\r\n        let tooltipInfo: powerbi.visuals.TooltipDataItem[];\r\n\r\n        beforeEach(() => {\r\n            createDomElement();\r\n        });\r\n\r\n        afterEach(function () {\r\n        });\r\n\r\n        it('DOM container exists',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipContainer = $('.tooltip-container');\r\n            expect(tooltipContainer.length).toBe(1);\r\n        });\r\n\r\n        it('Has single instance of DOM container',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            // Hide\r\n            hideTooltip();\r\n\r\n            // Show\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            // Hide\r\n            hideTooltip();\r\n\r\n            // Show\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            // Show\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipContainer = $('.tooltip-container');\r\n            expect(tooltipContainer.length).toBe(1);\r\n        });\r\n\r\n        it('DOM two rows exist',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipRow = $('.tooltip-row');\r\n\r\n            expect(tooltipRow.length).toBe(2);\r\n        });\r\n\r\n        it('DOM two title cells exist',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipTitle = $('.tooltip-title-cell');\r\n\r\n            expect(tooltipTitle.length).toBe(2);\r\n        });\r\n\r\n        it('DOM two value cells exist',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipValue = $('.tooltip-value-cell');\r\n\r\n            expect(tooltipValue.length).toBe(2);\r\n        });\r\n\r\n        it('DOM content container exists',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipContentContainer = $('.tooltip-content-container');\r\n            expect(tooltipContentContainer.length).toBe(1);\r\n        });\r\n\r\n        it('DOM container visible',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipContainer = $('.tooltip-container');\r\n            expect(tooltipContainer).toBeVisible();\r\n        });\r\n\r\n        it('DOM container is visible - Show ToolTip',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipContainerVisibility = $('.tooltip-container');\r\n            expect(tooltipContainerVisibility).toBeVisible();\r\n        });\r\n\r\n        it('DOM container style Opacity is 1 - Show ToolTip',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            powerbi.visuals.SVGUtil.flushAllD3Transitions();\r\n\r\n            let tooltipContainerOpacity = $('.tooltip-container').css('opacity');\r\n            expect(tooltipContainerOpacity).toBeCloseTo(1, 2);\r\n        });\r\n\r\n        it('DOM container hiden - Hide ToolTip',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n            \r\n            // Hide\r\n            hideTooltip();\r\n\r\n            let tooltipContainer = $('.tooltip-container');\r\n            let visibility = tooltipContainer.css(\"visibility\");\r\n            expect(\"hidden\").toBe(visibility);\r\n        });\r\n\r\n        it('DOM container style Opacity is 1 - Hide ToolTip',() => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n            \r\n            // Hide\r\n            hideTooltip();\r\n\r\n            let tooltipContainerOpacity = $('.tooltip-container').css('opacity');\r\n            expect(tooltipContainerOpacity).toBe('0');\r\n        });\r\n\r\n        it('DOM arrow exists', () => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipContainer = $('.tooltip-container');\r\n            let arrow = tooltipContainer.find('.arrow');\r\n            expect(arrow.length).toBe(1);\r\n        });\r\n\r\n        it('DOM arrow position test', () => {\r\n            let clickedArea: powerbi.visuals.controls.TouchUtils.Rectangle;\r\n\r\n            // Set test screen size\r\n            TooltipManager.ToolTipInstance.setTestScreenSize(1000, 700);\r\n\r\n            // Show tooltip at top left of the screen\r\n            clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let arrowClass: string;\r\n            let tooltipContainer = $('.tooltip-container');\r\n            let arrow = tooltipContainer.find('.arrow');\r\n            \r\n            arrowClass = arrow.attr('class');\r\n            expect(arrowClass).toBe('arrow top left');\r\n\r\n            // Hide\r\n            hideTooltip();\r\n\r\n            // Show tooltip at top right of the screen\r\n            clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(600, 100, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            arrowClass = arrow.attr('class');\r\n            expect(arrowClass).toBe('arrow top right');\r\n\r\n            // Hide\r\n            hideTooltip();\r\n\r\n            // Show tooltip at bottom left of the screen\r\n            clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(300, 500, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            arrowClass = arrow.attr('class');\r\n            expect(arrowClass).toBe('arrow bottom left');\r\n\r\n            // Hide\r\n            hideTooltip();\r\n\r\n            // Show tooltip at bottom right of the screen\r\n            clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(700, 800, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            arrowClass = arrow.attr('class');\r\n            expect(arrowClass).toBe('arrow bottom right');\r\n\r\n            // Hide\r\n            hideTooltip();\r\n\r\n            // Reset test screen size\r\n            TooltipManager.ToolTipInstance.setTestScreenSize(null, null);\r\n        });\r\n\r\n        it(\"Should invoke mouseover event.\", function () {\r\n            let spyEvent = spyOnEvent('#item', 'mouseover');\r\n            hideTooltip();\r\n            emulateShowTooltip();\r\n\r\n            expect('mouseover').toHaveBeenTriggeredOn('#item');\r\n            expect(spyEvent).toHaveBeenTriggered();\r\n        });\r\n\r\n        it(\"Touch click should ignore immediate mouseover event.\", (done) => {\r\n            hideTooltip();\r\n            emulateTouchClick();\r\n            emulateShowTooltip();\r\n\r\n            setTimeout(() => {\r\n                let visibility = getTooltipVisibility();\r\n                expect(visibility).toEqual('hidden');\r\n                done();\r\n            }, 513);\r\n        });\r\n\r\n        it('tooltip is visible after 200ms',(done) => {\r\n            hideTooltip();\r\n\r\n            let tooltipEvent = getMockTooltipEvent();\r\n            TooltipManager.showDelayedTooltip(tooltipEvent, getMockTooltipData, 500);\r\n\r\n            setTimeout(() => {\r\n                let visibility = getTooltipVisibility();\r\n                expect(visibility).toEqual('hidden');\r\n                done();\r\n            }, 200);\r\n        });\r\n\r\n        it('tooltip is visible after 500ms',(done) => {\r\n            hideTooltip();\r\n\r\n            let tooltipEvent = getMockTooltipEvent();\r\n            TooltipManager.showDelayedTooltip(tooltipEvent, getMockTooltipData, 500);\r\n\r\n            setTimeout(() => {\r\n                let visibility = getTooltipVisibility();\r\n                expect(visibility).toEqual('visible');\r\n                done();\r\n            }, 513);\r\n        });\r\n        \r\n        function getMockTooltipEvent(): TooltipEvent {\r\n            return {\r\n                data: null,\r\n                index: 0,\r\n                coordinates: [10, 10],\r\n                elementCoordinates: [2, 2],\r\n                context: this,\r\n                isTouchEvent: false\r\n            };\r\n        }\r\n\r\n        function getMockTooltipData(tooltipEvent: TooltipEvent): powerbi.visuals.TooltipDataItem[] {\r\n            return [\r\n                { displayName: \"test 1\", value: \"111\" },\r\n                { displayName: \"test 2\", value: \"222\" }\r\n            ];\r\n        }\r\n\r\n        function emulateShowTooltip() {\r\n            // Fire mouseover event\r\n            let evt: any = document.createEvent(\"MouseEvents\");\r\n            evt.initMouseEvent(\"mouseover\", true, true, window, 1, 2, 2, 2, 2, false, false, false, false, 0, null);\r\n            d3Element.node().dispatchEvent(evt);\r\n        }\r\n\r\n        function emulateTouchClick() {\r\n            // Simulate a touch event using 'touchstart' and 'touchend'\r\n            let evt: any = document.createEvent(\"TouchEvent\");\r\n            evt.initEvent(\"touchstart\", true, true);\r\n            evt.eventName = \"touchstart\";\r\n            d3Element.node().dispatchEvent(evt);\r\n\r\n            let evt2: any = document.createEvent(\"TouchEvent\");\r\n            evt2.initEvent(\"touchend\", true, true);\r\n            evt2.eventName = \"touchend\";\r\n            d3Element.node().dispatchEvent(evt2);\r\n        }\r\n\r\n        function getTooltipVisibility() {\r\n            let tooltipContainer = $('.tooltip-container');\r\n            return tooltipContainer.length > 0 ? tooltipContainer.css(\"visibility\") : \"hidden\";\r\n        }\r\n\r\n        function hideTooltip() {\r\n            TooltipManager.ToolTipInstance.hide();\r\n            SVGUtil.flushAllD3Transitions();\r\n        }\r\n\r\n        function createDomElement() {\r\n            if (element) {\r\n                // remove existing one\r\n                element.remove();\r\n            }\r\n\r\n            element = powerbitests.helpers.testDom('500', '500');\r\n            d3Element = d3.select(\"#\" + element.attr(\"id\"));\r\n\r\n            tooltipInfo = [\r\n                { displayName: \"test 1\", value: \"111\" },\r\n                { displayName: \"test 2\", value: \"222\" }\r\n            ];\r\n\r\n            TooltipManager.addTooltip(d3Element, getMockTooltipData);\r\n        }\r\n    });\r\n\r\n    describe(\"Linechart tooltip\", () => {\r\n        let element: JQuery;\r\n        let d3Element: D3.Selection;\r\n        let tooltipInfo: powerbi.visuals.TooltipDataItem[];\r\n\r\n        beforeEach(() => {\r\n            createLineChartDomElement();\r\n        });\r\n\r\n        afterEach(() => {\r\n            hideTooltip();\r\n        });\r\n\r\n        it('should have header', () => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipHeader = $('.tooltip-header');\r\n\r\n            expect(tooltipHeader.length).toBe(1);\r\n            expect(tooltipHeader.html()).toBe(\"Jan\");\r\n        });\r\n\r\n        it('should have dots with color', () => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipColor = $('.tooltip-color-cell');\r\n\r\n            expect(tooltipColor.length).toBe(2);\r\n        });\r\n\r\n        it('should have the right content', () => {\r\n            // Show tooltip\r\n            let clickedArea = new powerbi.visuals.controls.TouchUtils.Rectangle(200, 200, 0, 0);\r\n            TooltipManager.ToolTipInstance.show(tooltipInfo, clickedArea);\r\n\r\n            let tooltipRow = $('.tooltip-row');\r\n            let firstRow = $(tooltipRow[0]);\r\n            let children = firstRow.children();\r\n            \r\n            let color = $(children[0]).find('circle')[0].style[\"fill\"];\r\n            let name = $(children[1]).html();\r\n            let value = $(children[2]).html();\r\n\r\n            expect(color).toBe(\"#bbbbaa\");\r\n            expect(name).toBe(\"test 1\");\r\n            expect(value).toBe(\"111\");\r\n        });\r\n\r\n        function getLineChartMockTooltipData(tooltipEvent: TooltipEvent): powerbi.visuals.TooltipDataItem[] {\r\n            return [\r\n                { header: \"Jan\", color: \"#bbbbaa\", displayName: \"test 1\", value: \"111\" },\r\n                { header: \"Jan\", color: \"#bbaaee\", displayName: \"test 2\", value: \"222\" }\r\n            ];\r\n        }\r\n\r\n        function hideTooltip() {\r\n            TooltipManager.ToolTipInstance.hide();\r\n            SVGUtil.flushAllD3Transitions();\r\n        }\r\n\r\n        function createLineChartDomElement() {\r\n            if (element) {\r\n                element.remove();\r\n            }\r\n\r\n            element = powerbitests.helpers.testDom('500', '500');\r\n            d3Element = d3.select(\"#\" + element.attr(\"id\"));\r\n\r\n            tooltipInfo = [\r\n                { header: \"Jan\", color: \"#bbbbaa\", displayName: \"test 1\", value: \"111\" },\r\n                { header: \"Jan\", color: \"#bbaaee\", displayName: \"test 2\", value: \"222\" }\r\n            ];\r\n\r\n            TooltipManager.addTooltip(d3Element, getLineChartMockTooltipData);\r\n        }\r\n    });\r\n\r\n    describe(\"Tooltip Builder tests\",() => {\r\n\r\n        it('createTooltipInfo: category & measure',() => {\r\n            let columns: powerbi.DataViewMetadataColumn[] = [\r\n                {\r\n                    displayName: 'cat',\r\n                    type: ValueType.fromDescriptor({ text: true })\r\n                }, {\r\n                    displayName: 'val',\r\n                    isMeasure: true,\r\n                    type: ValueType.fromDescriptor({ numeric: true })\r\n                },\r\n            ];\r\n            let categoryIdentities = [\r\n                mocks.dataViewScopeIdentity(\"abc\"),\r\n                mocks.dataViewScopeIdentity(\"def\"),\r\n                mocks.dataViewScopeIdentity(\"ghi\")];\r\n            let dataView: powerbi.DataView = {\r\n                metadata: { columns: columns },\r\n                categorical: {\r\n                    categories: [{\r\n                        source: columns[0],\r\n                        values: ['abc', 'def', 'ghi'],\r\n                        identity: categoryIdentities,\r\n                        identityFields: [],\r\n                    }],\r\n                    values: powerbi.data.DataViewTransform.createValueColumns([\r\n                        {\r\n                            source: columns[1],\r\n                            values: [123.321, 234.789, 456.001],\r\n                        }])\r\n                }\r\n            };\r\n\r\n            let tooltipInfo = TooltipBuilder.createTooltipInfo(\r\n                null,\r\n                dataView.categorical,\r\n                'abc',\r\n                123.321);\r\n\r\n            expect(tooltipInfo).toEqual([\r\n                { displayName: 'cat', value: 'abc' },\r\n                { displayName: 'val', value: '123.321' }]);\r\n        });\r\n\r\n        it('createTooltipInfo: category, series & measure',() => {\r\n            let columns: powerbi.DataViewMetadataColumn[] = [\r\n                {\r\n                    displayName: 'cat',\r\n                    type: ValueType.fromDescriptor({ text: true })\r\n                }, {\r\n                    displayName: 'ser',\r\n                    type: ValueType.fromDescriptor({ text: true }),\r\n                }, {\r\n                    displayName: 'val',\r\n                    isMeasure: true,\r\n                    type: ValueType.fromDescriptor({ numeric: true }),\r\n                    groupName: 'ser1',\r\n                },\r\n            ];\r\n            let dataView: powerbi.DataView = {\r\n                metadata: { columns: columns },\r\n                categorical: {\r\n                    categories: [{\r\n                        source: columns[0],\r\n                        values: ['abc', 'def'],\r\n                        identity: [mocks.dataViewScopeIdentity(\"abc\"), mocks.dataViewScopeIdentity(\"def\")],\r\n                    }],\r\n                    values: powerbi.data.DataViewTransform.createValueColumns([\r\n                        {\r\n                            source: columns[2],\r\n                            values: [123, 234],\r\n                            identity: mocks.dataViewScopeIdentity(\"ABC\"),\r\n                        }, {\r\n                            source: columns[2],\r\n                            values: [345, 456],\r\n                            identity: mocks.dataViewScopeIdentity(\"DEF\"),\r\n                        }],\r\n                        undefined,\r\n                        columns[1])\r\n                }\r\n            };\r\n\r\n            let tooltipInfo = TooltipBuilder.createTooltipInfo(\r\n                null,\r\n                dataView.categorical,\r\n                'abc',\r\n                123.321);\r\n\r\n            expect(tooltipInfo).toEqual([\r\n                { displayName: 'cat', value: 'abc' },\r\n                { displayName: 'ser', value: 'ser1' },\r\n                { displayName: 'val', value: '123.321' }]);\r\n        });\r\n\r\n        it('createTooltipInfo: self cross-joined category & measure',() => {\r\n            let columns: powerbi.DataViewMetadataColumn[] = [\r\n                {\r\n                    displayName: 'cat',\r\n                    type: ValueType.fromDescriptor({ text: true })\r\n                }, {\r\n                    displayName: 'val',\r\n                    isMeasure: true,\r\n                    type: ValueType.fromDescriptor({ numeric: true })\r\n                },\r\n            ];\r\n            let categoryIdentities = [\r\n                mocks.dataViewScopeIdentity(\"abc\"),\r\n                mocks.dataViewScopeIdentity(\"def\"),\r\n                mocks.dataViewScopeIdentity(\"ghi\")];\r\n            let dataView = powerbi.data.DataViewSelfCrossJoin.apply({\r\n                metadata: { columns: columns },\r\n                categorical: {\r\n                    categories: [{\r\n                        source: columns[0],\r\n                        values: ['abc', 'def', 'ghi'],\r\n                        identity: categoryIdentities,\r\n                        identityFields: [],\r\n                    }],\r\n                    values: powerbi.data.DataViewTransform.createValueColumns([\r\n                        {\r\n                            source: columns[1],\r\n                            values: [123.321, 234.789, 456.001],\r\n                        }])\r\n                }\r\n            });\r\n\r\n            let tooltipInfo = TooltipBuilder.createTooltipInfo(\r\n                null,\r\n                dataView.categorical,\r\n                'abc',\r\n                123.321);\r\n\r\n            expect(tooltipInfo).toEqual([\r\n                { displayName: 'cat', value: 'abc' },\r\n                { displayName: 'val', value: '123.321' }]);\r\n        });\r\n    });\r\n}"],"sourceRoot":"/source/"}