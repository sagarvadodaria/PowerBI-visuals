{"version":3,"sources":["visuals/slicerTests.ts"],"names":["powerbitests","powerbitests.validateSelection","powerbitests.validateFormattingPaneProperties","powerbitests.validateLoadMoreData","powerbitests.validateNullEmptyData","powerbitests.validateOnClearSelectionWithDefaultValue","powerbitests.getSelectAllItem","powerbitests.getSlicerContainer","powerbitests.getPartiallySelectedContainer","powerbitests.getSelectedContainer","powerbitests.parseAndRoundFontSize","powerbitests.reconfigureSlicer","powerbitests.loadMoreData"],"mappings":"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ACZA,QAAQA,CAACA,KAAKA,EAAGA,CAACA,OAAOA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAEtCA,sBAAsBA,CAACA,WAAWA,EAAEA,EAAEA,CAACA,CAACA;gBACxCA,MAAMA,CAACA,OAAOA,CAACA,YAAYA,CAACA,QAAQA,CAACA,CAACA,oBAAoBA,CAACA,EAAEA,IAAIA,EAAEA,EAAEA,EAAEA,CAACA,CAACA;YAC7EA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,4BAA4BA,EAAEA;gBAC7BA,OAAOA,CAACA,KAAKA,EAAEA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAClBA,OAAOA,CAACA,UAAUA,CAACA,EAAEA,CAACA,CAACA,CAAEA,CAACA,OAAOA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBAC9CA,sBAAsBA,CAACA,WAAWA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAEzCA,MAAMA,CAACA,OAAOA,CAACA,YAAYA,CAACA,QAAQA,CAACA,CAACA,oBAAoBA,CAACA;oBACvDA,IAAIA,EACJA;wBACIA;4BACIA,IAAIA,EAAEA;gCACFA,OAAOA,CAACA,0BAA0BA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,WAAWA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;6BACxFA;yBACJA;qBACJA;iBACJA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,gCAAgCA,EAAEA;gBACjCA,IAAIA,UAAUA,GAAGA,OAAOA,CAACA,UAAUA,CAACA;gBAC9BA,UAAUA,CAACA,EAAEA,CAACA,CAACA,CAAEA,CAACA,OAAOA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBACtCA,sBAAsBA,CAACA,WAAWA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAEnCA,UAAUA,CAACA,IAAIA,EAAGA,CAACA,OAAOA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBACvCA,sBAAsBA,CAACA,WAAW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","file":"visuals/slicerTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\n// TODO: We should not be validating specific styles (e.g. RGB codes) in unit tests.\r\n\r\nmodule powerbitests {\r\n    import data = powerbi.data;\r\n    import DataViewMetadata = powerbi.DataViewMetadata;\r\n    import FilterAnalyzerOptions = powerbi.FilterAnalyzerOptions;\r\n    import SemanticFilter = powerbi.data.SemanticFilter;\r\n    import SlicerOrientation = powerbi.visuals.slicerOrientation.Orientation;\r\n    import VisualDataChangedOptions = powerbi.VisualDataChangedOptions;  \r\n    import visuals = powerbi.visuals;\r\n\r\n    powerbitests.mocks.setLocale();\r\n\r\n    describe(\"Slicer\", () => {\r\n        it(\"Slicer_registered_capabilities\", () => {\r\n            expect(visuals.visualPluginFactory.create().getPlugin(\"slicer\").capabilities).toBe(visuals.slicerCapabilities);\r\n        });\r\n\r\n        it(\"Capabilities should include dataViewMapping\", () => {\r\n            expect(visuals.slicerCapabilities.dataViewMappings).toBeDefined();\r\n            expect(visuals.slicerCapabilities.dataViewMappings.length).toBe(1);\r\n        });\r\n\r\n        it(\"Capabilities should have condition\", () => {\r\n            expect(visuals.slicerCapabilities.dataViewMappings[0].conditions.length).toBe(1);\r\n            expect(visuals.slicerCapabilities.dataViewMappings[0].conditions[0][powerbi.visuals.slicerCapabilities.dataRoles[0].name].max).toBe(1);\r\n        });\r\n\r\n        it(\"Capabilities should include dataRoles\", () => {\r\n            expect(visuals.slicerCapabilities.dataRoles).toBeDefined();\r\n            expect(visuals.slicerCapabilities.dataRoles.length).toBe(1);\r\n        });\r\n\r\n        it(\"Capabilities should suppressDefaultTitle\", () => {\r\n            expect(visuals.slicerCapabilities.suppressDefaultTitle).toBe(true);\r\n        });\r\n\r\n        it(\"Filter property should match calculated\", () => {\r\n            expect(data.DataViewObjectDescriptors.findFilterOutput(visuals.slicerCapabilities.objects)).toEqual(visuals.slicerProps.filterPropertyIdentifier);\r\n        });\r\n\r\n        it(\"Sort should be default so the sort UI shows\", () => {\r\n            expect(visuals.slicerCapabilities.sorting.custom).not.toBeDefined();\r\n            expect(visuals.slicerCapabilities.sorting.default).toBeDefined();\r\n        });\r\n    });\r\n\r\n    describe(\"CommonSlicer Tests\", () => {\r\n        function validateSelection(orientation: SlicerOrientation): void {\r\n            let builder: slicerHelper.TestBuilder;\r\n            beforeEach(() => builder = new slicerHelper.TestBuilder(orientation, 200, 600));\r\n\r\n            afterEach(() => builder.destroy());\r\n\r\n            let validateSelectionState = (orientation: SlicerOrientation, expectedSelected: number[]) => slicerHelper.validateSelectionState(orientation, expectedSelected, builder);\r\n\r\n            it(\"SelectAll\", () => {\r\n                validateSelectionState(orientation, []);\r\n\r\n                let selectAllItem: any = getSelectAllItem().eq(0);\r\n                selectAllItem.d3Click(0, 0);\r\n\r\n                validateSelectionState(orientation, [0, 1, 2, 3, 4, 5]);\r\n\r\n                (<any>builder.slicerText.eq(1)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [2, 3, 4, 5]);\r\n                let partialSelect = getPartiallySelectedContainer();\r\n                expect(partialSelect.length).toBe(1);\r\n            });\r\n\r\n            it(\"Partial select\", () => {\r\n                validateSelectionState(orientation, []);\r\n\r\n                let selectAllItem: any = getSelectAllItem().eq(0);\r\n                selectAllItem.d3Click(0, 0);\r\n\r\n                validateSelectionState(orientation, [0, 1, 2, 3, 4, 5]);\r\n                let partialSelect = getPartiallySelectedContainer();\r\n                expect(partialSelect.length).toBe(0);\r\n\r\n                let slicerText = builder.slicerText;\r\n                (<any>slicerText.eq(1)).d3Click(0, 0);\r\n                partialSelect = getPartiallySelectedContainer();\r\n                expect(partialSelect.length).toBe(1);\r\n                validateSelectionState(orientation, [2, 3, 4, 5]);\r\n\r\n                selectAllItem.d3Click(0, 0);\r\n                validateSelectionState(orientation, []);\r\n                partialSelect = getPartiallySelectedContainer();\r\n                expect(partialSelect.length).toBe(0);\r\n\r\n                (<any>slicerText.eq(1)).d3Click(0, 0);\r\n                partialSelect = getPartiallySelectedContainer();\r\n                expect(partialSelect.length).toBe(1);\r\n                validateSelectionState(orientation, [1]);\r\n            });\r\n\r\n            it(\"Partial selection works even when multi-select is disabled\", () => {\r\n                reconfigureSlicer(builder.interactiveDataViewOptions,\r\n                    () => (<any>(builder.dataView.metadata.objects)).selection.singleSelect = true,\r\n                    builder\r\n                    );\r\n\r\n                // Check the 'Select All' item\r\n                let selectAllItem: any = getSelectAllItem().eq(0);\r\n                selectAllItem.d3Click(0, 0);\r\n                validateSelectionState(orientation, [0, 1, 2, 3, 4, 5]);\r\n\r\n                // Unselect a single checkbox. This should work even though multi-selection is disabled.\r\n                (<any>builder.slicerText.eq(1)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [2, 3, 4, 5]);\r\n                let partialSelect = getPartiallySelectedContainer();\r\n                expect(partialSelect.length).toBe(1);\r\n            });\r\n\r\n            it(\"Clear\", () => {\r\n                let clearBtn = $(\".clear\");\r\n                let slicerText = builder.slicerText;\r\n\r\n                // Slicer click\r\n                (<any>slicerText.eq(1)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1]);\r\n\r\n                (<any>slicerText.eq(2)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1, 2]);\r\n\r\n                /* Slicer clear */\r\n                (<any>clearBtn.first()).d3Click(0, 0);\r\n\r\n                validateSelectionState(orientation, []);\r\n                expect(builder.hostServices.onSelect).toHaveBeenCalledWith({ data: [] });\r\n            });\r\n\r\n            it(\"Slicer item select by text\", () => {\r\n                jasmine.clock().tick(0);\r\n                (<any>builder.slicerText.eq(1)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1]);\r\n\r\n                expect(builder.hostServices.onSelect).toHaveBeenCalledWith({\r\n                    data:\r\n                    [\r\n                        {\r\n                            data: [\r\n                                builder.interactiveDataViewOptions.dataViews[0].categorical.categories[0].identity[0]\r\n                            ]\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n\r\n            it(\"Slicer item repeated selection\", () => {\r\n                let slicerText = builder.slicerText;\r\n                (<any>slicerText.eq(1)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1]);\r\n\r\n                (<any>slicerText.last()).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1, 5]);\r\n\r\n                (<any>slicerText.last()).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1]);\r\n            });\r\n\r\n            it(\"Single-select mode\", () => {\r\n                // Switch to single-select\r\n                let dataView = builder.dataView;\r\n                (<any>dataView.metadata.objects).selection.singleSelect = true;\r\n                helpers.fireOnDataChanged(builder.visual, { dataViews: [dataView] });\r\n\r\n                builder.initializeHelperElements();\r\n\r\n                let slicerText = builder.slicerText;\r\n                (<any>slicerText.eq(1)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1]);\r\n\r\n                // Select another checkbox. The previously selected one should be cleared.\r\n                (<any>slicerText.eq(2)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [2]);\r\n\r\n                // validate the style for select\r\n                expect(getSlicerContainer(orientation).hasClass('isMultiSelectEnabled')).toBe(false);\r\n            });\r\n\r\n            it(\"Multi-select mode\", () => {\r\n                let slicerText = builder.slicerText;\r\n                (<any>slicerText.eq(1)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1]);\r\n\r\n                // Select another item. The previously selected one shouldn't be cleared.\r\n                (<any>slicerText.eq(2)).d3Click(0, 0);\r\n                validateSelectionState(orientation, [1, 2]);\r\n\r\n                // validate the style for multi select\r\n                expect(getSlicerContainer(orientation).hasClass('isMultiSelectEnabled')).toBe(true);\r\n            });\r\n\r\n            it('Show the Select All item', () => {\r\n                let dataView = builder.dataView;\r\n                let visual = builder.visual;\r\n                dataView.metadata.objects[\"selection\"] = { selectAllCheckboxEnabled: false };\r\n\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n                expect(getSelectAllItem().length).toBe(0);\r\n\r\n                dataView.metadata.objects[\"selection\"] = { selectAllCheckboxEnabled: true };\r\n\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n                expect(getSelectAllItem().length).toBe(1);\r\n            });\r\n\r\n            it('Hide the Select All item', () => {\r\n                let dataView = builder.dataView;\r\n                let visual = builder.visual;\r\n                dataView.metadata.objects[\"selection\"] = { selectAllCheckboxEnabled: true };\r\n\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n                expect(getSelectAllItem().length).toBe(1);\r\n\r\n                dataView.metadata.objects[\"selection\"] = { selectAllCheckboxEnabled: false };\r\n\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n                expect(getSelectAllItem().length).toBe(0);\r\n            });\r\n        }\r\n\r\n        describe(\"VerticalSlicer selection validation\", () => validateSelection(SlicerOrientation.Vertical));\r\n        describe(\"HorizontalSlicer selection validation\", () => validateSelection(SlicerOrientation.Horizontal));\r\n\r\n        function validateFormattingPaneProperties(orientation: SlicerOrientation): void {\r\n            let builder: slicerHelper.TestBuilder;\r\n            beforeEach(() => builder = new slicerHelper.TestBuilder(orientation));\r\n\r\n            afterEach(() => builder.destroy());\r\n\r\n            it('Show hide header test', () => {\r\n                expect($(\".slicerHeader\").css('display')).toBe('block');\r\n\r\n                let dataView = builder.dataView;\r\n                dataView.metadata.objects[\"header\"] = { show: false };\r\n                helpers.fireOnDataChanged(builder.visual, { dataViews: [dataView] });\r\n\r\n                expect($(\".slicerHeader\").css('display')).toBe('none');\r\n            });\r\n\r\n            it('Header outline color test', () => {\r\n                expect($(\".headerText\").css('border-color')).toBe('rgb(128, 128, 128)');\r\n            });\r\n\r\n            it('Background and font slicer text test', () => {\r\n                expect($(\".slicerText\").css('color')).toBe('rgb(102, 102, 102)');\r\n\r\n                let dataView = builder.dataView;\r\n                dataView.metadata.objects[\"items\"] = {\r\n                    fontColor: { solid: { color: '#f5f5f5' } },\r\n                    background: { solid: { color: '#f6f6f6' } },\r\n                };\r\n                helpers.fireOnDataChanged(builder.visual, { dataViews: [dataView] });\r\n\r\n                expect($(\".slicerText\").css('color')).toBe('rgb(245, 245, 245)');\r\n                expect($(\".slicerText\").css('background-color')).toBe('rgb(246, 246, 246)');\r\n            });\r\n\r\n            it('Background and font header test', () => {\r\n                expect($(\".slicerHeader .headerText\").css('color')).toBe('rgb(0, 0, 0)');\r\n\r\n                let dataView = builder.dataView;\r\n                dataView.metadata.objects[\"header\"] = {\r\n                    show: true,\r\n                    fontColor: { solid: { color: '#f5f5f5' } },\r\n                    background: { solid: { color: '#f6f6f6' } },\r\n                };\r\n                helpers.fireOnDataChanged(builder.visual, { dataViews: [dataView] });\r\n\r\n                expect($(\".slicerHeader .headerText\").css('color')).toBe('rgb(245, 245, 245)');\r\n                expect($(\".slicerHeader .headerText\").css('background-color')).toBe('rgb(246, 246, 246)');\r\n            });\r\n\r\n            it('Test header border outline', () => {\r\n                expect($(\".headerText\").css('border-width')).toBe('0px 0px 1px');\r\n\r\n                let dataView = builder.dataView;\r\n                let visual = builder.visual;\r\n\r\n                dataView.metadata.objects = {\r\n                    general: { orientation: orientation },\r\n                    header: { outline: visuals.outline.none }\r\n                };\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n\r\n                expect($(\".headerText\").css('border-width')).toBe('0px');\r\n\r\n                dataView.metadata.objects[\"header\"] = { outline: visuals.outline.topOnly };\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n\r\n                expect($(\".headerText\").css('border-width')).toBe('1px 0px 0px');\r\n\r\n                dataView.metadata.objects[\"header\"] = { outline: visuals.outline.topBottom };\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n\r\n                expect($(\".headerText\").css('border-width')).toBe('1px 0px');\r\n\r\n                dataView.metadata.objects[\"header\"] = { outline: visuals.outline.leftRight };\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n\r\n                expect($(\".headerText\").css('border-width')).toBe('0px 1px');\r\n\r\n                dataView.metadata.objects[\"header\"] = { outline: visuals.outline.frame };\r\n                helpers.fireOnDataChanged(visual, { dataViews: [dataView] });\r\n\r\n                expect($(\".headerText\").css('border-width')).toBe('1px');\r\n            });\r\n\r\n            it('Row text size', () => {\r\n                let slicerText = builder.slicerText;\r\n                let dataView = builder.dataView;\r\n\r\n                let actualFontSize = parseFloat(slicerText.css('font-size'));\r\n                expect(parseAndRoundFontSize(slicerText)).toBe(13);\r\n\r\n                dataView.metadata.objects[\"items\"] = { textSize: 14 };\r\n                helpers.fireOnDataChanged(builder.visual, { dataViews: [dataView] });\r\n\r\n                slicerText = $(\".slicerText\");\r\n                actualFontSize = parseFloat(slicerText.css('font-size'));\r\n                expect(parseAndRoundFontSize(slicerText)).toBe(19);\r\n            });\r\n\r\n            it('Header text size', () => {\r\n                expect(parseAndRoundFontSize($(\".slicerHeader .headerText\"))).toBe(13);\r\n\r\n                let dataView = builder.dataView;\r\n                dataView.metadata.objects[\"header\"] = {\r\n                    show: true,\r\n                    textSize: 14,\r\n                };\r\n                helpers.fireOnDataChanged(builder.visual, { dataViews: [dataView] });\r\n\r\n                expect(parseAndRoundFontSize($(\".slicerHeader .headerText\"))).toBe(19);\r\n            });\r\n        }\r\n\r\n        describe(\"VerticalSlicer formatting pane properties validation\", () => validateFormattingPaneProperties(SlicerOrientation.Vertical));\r\n        describe(\"HorizontalSlicer formatting pane properties validation\", () => validateFormattingPaneProperties(SlicerOrientation.Horizontal));\r\n\r\n        function validateLoadMoreData(orientation: SlicerOrientation): void {\r\n            let builder: slicerHelper.TestBuilder;\r\n            beforeEach(() => builder = new slicerHelper.TestBuilder(orientation));\r\n\r\n            afterEach(() => builder.destroy());\r\n\r\n            it(\"slicer loadMoreData noSegment\", () => {\r\n                let loadMoreSpy = spyOn(builder.hostServices, \"loadMoreData\");\r\n                loadMoreData(builder);\r\n                expect(loadMoreSpy).not.toHaveBeenCalled();\r\n            });\r\n\r\n            it(\"slicer loadMoreData\", () => {\r\n                let metadata: DataViewMetadata = {\r\n                    columns: builder.dataViewMetadata.columns,\r\n                    segment: {},\r\n                };\r\n\r\n                let dataView = { metadata: metadata, categorical: builder.dataViewCategorical };\r\n                dataView.metadata.objects = slicerHelper.buildDefaultDataViewObjects(orientation);\r\n\r\n                let interactiveDataViewOptions: VisualDataChangedOptions = {\r\n                    dataViews: [dataView]\r\n                };\r\n                helpers.fireOnDataChanged(builder.visual, interactiveDataViewOptions);\r\n\r\n                let loadMoreSpy = spyOn(builder.hostServices, \"loadMoreData\");\r\n                loadMoreData(builder);\r\n                expect(loadMoreSpy).toHaveBeenCalled();\r\n            });\r\n\r\n            it(\"slicer loadMoreData already called\", () => {\r\n                let metadata: DataViewMetadata = {\r\n                    columns: builder.dataViewMetadata.columns,\r\n                    segment: {},\r\n                };\r\n\r\n                let dataView = { metadata: metadata, categorical: builder.dataViewCategorical };\r\n                dataView.metadata.objects = slicerHelper.buildDefaultDataViewObjects(orientation);\r\n\r\n                let interactiveDataViewOptions: VisualDataChangedOptions = {\r\n                    dataViews: [dataView]\r\n                };\r\n                helpers.fireOnDataChanged(builder.visual, interactiveDataViewOptions);\r\n\r\n                let loadMoreSpy = spyOn(builder.hostServices, \"loadMoreData\");\r\n                loadMoreData(builder);\r\n                loadMoreData(builder);\r\n                expect(loadMoreSpy.calls.all().length).toBe(1);\r\n            });\r\n        }\r\n\r\n        describe(\"VerticalSlicer LoadMoreData validation\", () => validateLoadMoreData(SlicerOrientation.Vertical));\r\n        describe(\"HorizontalSlicer LoadMoreData validation\", () => validateLoadMoreData(SlicerOrientation.Horizontal));\r\n\r\n        function validateNullEmptyData(orientation) {\r\n            let builder: slicerHelper.TestBuilder;\r\n            beforeEach(() => builder = new slicerHelper.TestBuilder(orientation, 200, 600));\r\n\r\n            afterEach(() => builder.destroy());\r\n\r\n            it(\"Null dataView test\", () => {\r\n                expect($(\".slicerText\").length).toBe(6);\r\n\r\n                helpers.fireOnDataChanged(builder.visual, { dataViews: [] });\r\n                expect($(\".slicerText\").length).toBe(6);\r\n            });\r\n            \r\n            it(\"Empty dataView test\", () => {\r\n                expect($(\".slicerText\").length).toBe(6);\r\n\r\n                let dataView = slicerHelper.buildEmptyDataView();\r\n                let interactiveDataViewOptions: VisualDataChangedOptions = {\r\n                    dataViews: [dataView]\r\n                };\r\n                helpers.fireOnDataChanged(builder.visual, interactiveDataViewOptions);\r\n                expect($(\".slicerText\").length).toBe(0);\r\n            });\r\n        }\r\n\r\n        describe(\"VerticalSlicer Null and Empty data validation\", () => validateNullEmptyData(SlicerOrientation.Vertical));\r\n        describe(\"HorizontalSlicer Null and Empty data validation\", () => validateNullEmptyData(SlicerOrientation.Horizontal));\r\n\r\n        function validateOnClearSelectionWithDefaultValue(orientation: SlicerOrientation): void {\r\n            let builder: slicerHelper.TestBuilder;\r\n            let filterAnalyzed: boolean;\r\n            beforeEach(() => {\r\n                filterAnalyzed = false;\r\n                builder = new slicerHelper.TestBuilder(orientation);\r\n                builder.hostServices.analyzeFilter = (options: FilterAnalyzerOptions) => {\r\n                    filterAnalyzed = true;\r\n                    let defaultValueScopeIdentity = data.createDataViewScopeIdentity(data.SQExprUtils.getDataViewScopeIdentityComparisonExpr([builder.field], [data.SQExprBuilder.text('Banana')]));\r\n                    return new mocks.FilterAnalyzerMock(SemanticFilter.getDefaultValueFilter(builder.field), [builder.field], undefined, [defaultValueScopeIdentity]);\r\n                };\r\n            });\r\n\r\n            afterEach(() => builder.destroy());\r\n\r\n            // DEFECT 6875986 - test is failing\r\n            xit(\"On Clear should reset the default value\", (done) => {\r\n                jasmine.clock().uninstall();\r\n                (<visuals.Slicer>builder.visual).onClearSelection();\r\n                expect(filterAnalyzed).toBe(true);\r\n                setTimeout(() => {\r\n                    let selectedContainer = getSelectedContainer();\r\n                    expect(selectedContainer.length).toBe(1);\r\n                    expect(selectedContainer.text()).toBe('Banana');\r\n                    done();\r\n                }, 32);\r\n            });\r\n        }\r\n\r\n        describe(\"VerticalSlicer on clear selection\", () => validateOnClearSelectionWithDefaultValue(SlicerOrientation.Vertical));\r\n        describe(\"HorizontalSlicer on clear selection\", () => validateOnClearSelectionWithDefaultValue(SlicerOrientation.Horizontal));\r\n    });\r\n\r\n    function getSelectAllItem(): JQuery {\r\n        return $('.slicerText:contains(\"' + slicerHelper.SelectAllTextKey + '\")');\r\n    }\r\n\r\n    function getSlicerContainer(orientation: SlicerOrientation): JQuery {\r\n        let slicerContainer: JQuery;\r\n\r\n        if (slicerHelper.isVerticalOrientation(orientation))\r\n            slicerContainer = $('.slicerContainer');\r\n        else\r\n            slicerContainer = $('.horizontalSlicerContainer');\r\n\r\n        return slicerContainer;\r\n    }\r\n\r\n    function getPartiallySelectedContainer(): JQuery {\r\n        return $(\".partiallySelected\");\r\n    }\r\n\r\n    function getSelectedContainer(): JQuery {\r\n        return $(\".selected\");\r\n    }\r\n\r\n    function parseAndRoundFontSize(element: JQuery): number {\r\n        let fontSize = parseFloat(element.css('font-size'));\r\n        return Math.round(fontSize);\r\n    }\r\n\r\n    function reconfigureSlicer(options: VisualDataChangedOptions, changeConfigCallback: () => void, builder: slicerHelper.TestBuilder): void {\r\n        // Executes a callback that changes the slicer's configuration options,\r\n        // and then sets the necessary test infrastructure back up.\r\n        changeConfigCallback();\r\n\r\n        helpers.fireOnDataChanged(builder.visual, options);\r\n        builder.initializeHelperElements();\r\n    }\r\n\r\n    function loadMoreData(builder: slicerHelper.TestBuilder): void {\r\n        (<visuals.Slicer>builder.visual).loadMoreData();\r\n    }\r\n}"],"sourceRoot":"/source/"}