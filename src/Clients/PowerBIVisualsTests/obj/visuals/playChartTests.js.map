{"version":3,"sources":["visuals/playChartTests.ts"],"names":["powerbitests"],"mappings":"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","file":"visuals/playChartTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\nmodule powerbitests {\r\n\r\n    import ValueType = powerbi.ValueType;\r\n    import PrimitiveType = powerbi.PrimitiveType;\r\n    import DataViewMetadataColumn = powerbi.DataViewMetadataColumn;\r\n    import DataViewMatrix = powerbi.DataViewMatrix;\r\n    import PlayChart = powerbi.visuals.PlayChart;\r\n\r\n    powerbitests.mocks.setLocale();\r\n\r\n    ///////////////////\r\n    // Matrix DataViews\r\n    ///////////////////\r\n\r\n    // data types\r\n    let dataTypeNumber = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.Double);\r\n    let dataTypeString = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.Text);\r\n\r\n    // DataViewMetadataColumns\r\n    let playSource: DataViewMetadataColumn = { displayName: \"Month\", queryName: \"Month1\", type: dataTypeString, index: 0 };\r\n    let categorySource: DataViewMetadataColumn = { displayName: \"RowGroup2\", queryName: \"RowGroup2\", type: dataTypeString, index: 1 };\r\n    let seriesSource: DataViewMetadataColumn = { displayName: \"ColGroup1\", queryName: \"ColGroup1\", type: dataTypeString, index: 2 };\r\n    let measureSource1: DataViewMetadataColumn = { displayName: \"Measure1\", queryName: \"Measure1\", type: dataTypeNumber, isMeasure: true, index: 3 };\r\n    let measureSource2: DataViewMetadataColumn = { displayName: \"Measure2\", queryName: \"Measure2\", type: dataTypeNumber, isMeasure: true, index: 4 };\r\n    let measureSource3: DataViewMetadataColumn = { displayName: \"Measure3\", queryName: \"Measure3\", type: dataTypeNumber, isMeasure: true, index: 5 };\r\n\r\n    //          | MeasureX | MeasureY | MeasureZ + MeasureX | MeasureY | MeasureZ |\r\n    // |+++++++ +--------------------------------+--------------------------------+\r\n    // | Jan    |      100 |      200 |      300 +      50 |     75   |     100   |\r\n    // |------- |--------------------------------+--------------------------------|\r\n    // | Feb    |      400 |      500 |      600 +     125 |     150  |    175    |\r\n    // |------- |--------------------------------+--------------------------------|\r\n    let matrixPlay: DataViewMatrix = {\r\n        rows: {\r\n            root: {\r\n                children: [{\r\n                    level: 0,\r\n                    values: {\r\n                        0: { value: 100 },\r\n                        1: { value: 200, valueSourceIndex: 1 },\r\n                        2: { value: 300, valueSourceIndex: 2 },\r\n                        3: { value: 50 },\r\n                        4: { value: 75, valueSourceIndex: 1 },\r\n                        5: { value: 100, valueSourceIndex: 2 },\r\n                    },\r\n                    value: 'Jan',\r\n                }, {\r\n                        level: 0,\r\n                        values: {\r\n                            0: { value: 400 },\r\n                            1: { value: 500, valueSourceIndex: 1 },\r\n                            2: { value: 600, valueSourceIndex: 2 },\r\n                            3: { value: 125 },\r\n                            4: { value: 150, valueSourceIndex: 1 },\r\n                            5: { value: 175, valueSourceIndex: 2 },\r\n                        },\r\n                        value: 'Feb',\r\n                    }]\r\n            },\r\n            levels: [{ sources: [playSource] }]\r\n        },\r\n        columns: {\r\n            root: {\r\n                children: [\r\n                    {\r\n                        level: 0,\r\n                    }, {\r\n                        level: 0,\r\n                        levelSourceIndex: 1\r\n                    }, {\r\n                        level: 0,\r\n                        levelSourceIndex: 2\r\n                    }\r\n                ]\r\n            },\r\n            levels: [\r\n                {\r\n                    sources: [measureSource1, measureSource2, measureSource3]\r\n                }\r\n            ]\r\n        },\r\n        valueSources: [measureSource1, measureSource2, measureSource3]\r\n    };\r\n    //let matrixPlayDataView: powerbi.DataView = {\r\n    //    metadata: { columns: [playSource, measureSource1, measureSource2, measureSource3] },\r\n    //    matrix: matrixPlay\r\n    //};\r\n\r\n    //          | -----------------------------------------------------------------\r\n    //          |             Series1            |             Series2            |\r\n    //          |--------------------------------|--------------------------------|\r\n    //          | MeasureX | MeasureY | MeasureZ | MeasureX | MeasureY | MeasureZ |\r\n    // |+++++++ +--------------------------------+--------------------------------+\r\n    // | Jan    |      100 |      200 |      300 |      50 |     75   |     100   |\r\n    // |------- |--------------------------------+--------------------------------|\r\n    // | Feb    |      400 |      500 |      600 |     125 |     150  |    175    |\r\n    // |------- |--------------------------------+--------------------------------|\r\n    let matrixSeriesAndPlay: DataViewMatrix = {\r\n        rows: {\r\n            root: {\r\n                children: [{\r\n                            value: 'Jan',\r\n                            level: 0,\r\n                            values: {\r\n                                0: { value: 100 },\r\n                                1: { value: 200, valueSourceIndex: 1 },\r\n                                2: { value: 300, valueSourceIndex: 2 },\r\n                                3: { value: 50 },\r\n                                4: { value: 75, valueSourceIndex: 1 },\r\n                                5: { value: 100, valueSourceIndex: 2 },\r\n                            },\r\n                        }, {\r\n                            value: 'Feb',\r\n                            level: 0,\r\n                            values: {\r\n                                0: { value: 400 },\r\n                                1: { value: 500, valueSourceIndex: 1 },\r\n                                2: { value: 600, valueSourceIndex: 2 },\r\n                                3: { value: 125 },\r\n                                4: { value: 150, valueSourceIndex: 1 },\r\n                                5: { value: 175, valueSourceIndex: 2 },\r\n                            },\r\n                        }]\r\n            },\r\n            levels: [{ sources: [playSource] }]\r\n        },\r\n        columns: {\r\n            root: {\r\n                children: [\r\n                    {\r\n                        level: 0,\r\n                        value: \"Series1\",\r\n                        children: [\r\n                            { level: 1 },\r\n                            { level: 1, levelSourceIndex: 1 },\r\n                            { level: 1, levelSourceIndex: 2 }\r\n                        ]\r\n                    },\r\n                    {\r\n                        level: 0,\r\n                        value: \"Series2\",\r\n                        children: [\r\n                            { level: 1 },\r\n                            { level: 1, levelSourceIndex: 1 },\r\n                            { level: 1, levelSourceIndex: 2 }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            levels: [\r\n                { sources: [seriesSource] },\r\n                { sources: [measureSource1, measureSource2, measureSource3] }\r\n            ]\r\n        },\r\n        valueSources: [measureSource1, measureSource2, measureSource3]\r\n    };\r\n    //let matrixSeriesAndPlayDataView: powerbi.DataView = {\r\n    //    metadata: { columns: [seriesSource, playSource, measureSource1, measureSource2, measureSource3] },\r\n    //    matrix: matrixSeriesAndPlay\r\n    //};\r\n\r\n    //                   | MeasureX | MeasureY | MeasureZ |\r\n    // |+++++++|++++++++++---------------------------------\r\n    // | Jan   | XBOX    |      100 |      200 |      300 |\r\n    // |       | Azure   |      550 |      155 |      51  |\r\n    // |       | Office  |      330 |      133 |      31  |\r\n    // |-------|---------+---------------------------------\r\n    // | Feb   | XBOX    |       40 |       50 |       60 |\r\n    // |       | Azure   |      770 |      177 |       71 |\r\n    // |       | Office  |      440 |      144 |       41 |\r\n    // |--------------------------------------------------|\r\n    let matrixCategoryAndPlay: DataViewMatrix = {\r\n        rows: {\r\n            root: {\r\n                children: [{\r\n                    level: 0,\r\n                    value: 'Jan',\r\n                    children: [\r\n                        {\r\n                            level: 1,\r\n                            values: {\r\n                                0: { value: 100 },\r\n                                1: { value: 200, valueSourceIndex: 1 },\r\n                                2: { value: 300, valueSourceIndex: 2 },\r\n                            },\r\n                            value: 'XBOX'\r\n                        }, {\r\n                            level: 1,\r\n                            values: {\r\n                                0: { value: 550 },\r\n                                1: { value: 155, valueSourceIndex: 1 },\r\n                                2: { value: 51, valueSourceIndex: 2 },\r\n                            },\r\n                            value: 'Azure'\r\n                        }, {\r\n                            level: 1,\r\n                            values: {\r\n                                0: { value: 330 },\r\n                                1: { value: 133, valueSourceIndex: 1 },\r\n                                2: { value: 31, valueSourceIndex: 2 },\r\n                            },\r\n                            value: 'Office'\r\n                        }]\r\n                },\r\n                    {\r\n                        level: 0,\r\n                        value: 'Feb',\r\n                        children: [\r\n                            {\r\n                                level: 1,\r\n                                values: {\r\n                                    0: { value: 40 },\r\n                                    1: { value: 50, valueSourceIndex: 1 },\r\n                                    2: { value: 60, valueSourceIndex: 2 },\r\n                                },\r\n                                value: 'XBOX'\r\n                            }, {\r\n                                level: 1,\r\n                                values: {\r\n                                    0: { value: 770 },\r\n                                    1: { value: 177, valueSourceIndex: 1 },\r\n                                    2: { value: 71, valueSourceIndex: 2 },\r\n                                },\r\n                                value: 'Azure'\r\n                            }, {\r\n                                level: 1,\r\n                                values: {\r\n                                    0: { value: 440 },\r\n                                    1: { value: 144, valueSourceIndex: 1 },\r\n                                    2: { value: 41, valueSourceIndex: 2 },\r\n                                },\r\n                                value: 'Office'\r\n                            }]\r\n                    }]\r\n            },\r\n            levels: [{ sources: [playSource] }, { sources: [categorySource] }]\r\n        },\r\n        columns: {\r\n            root: {\r\n                children: [\r\n                    { level: 0 },\r\n                    { level: 0, levelSourceIndex: 1 },\r\n                    { level: 0, levelSourceIndex: 2 }\r\n                ]\r\n            },\r\n            levels: [\r\n                {\r\n                    sources: [measureSource1, measureSource2, measureSource3]\r\n                }\r\n            ]\r\n        },\r\n        valueSources: [measureSource1, measureSource2, measureSource3]\r\n    };\r\n    //let matrixCategoryAndPlayDataView: powerbi.DataView = {\r\n    //    metadata: { columns: [categorySource, playSource, measureSource1, measureSource2, measureSource3] },\r\n    //    matrix: matrixCategoryAndPlay\r\n    //};\r\n\r\n\r\n    //                   | -----------------------------------------------------------------\r\n    //                   |             Series1            |             Series2            |\r\n    //                   |--------------------------------|--------------------------------|\r\n    //                   | MeasureX | MeasureY | MeasureZ | MeasureX | MeasureY | MeasureZ |\r\n    // |+++++++|++++++++++------------------------------------------------------------------\r\n    // | Jan   | XBOX    |      100 |      200 |      300 |      105 |      205 |      305 |\r\n    // |       | Azure   |      440 |      144 |       41 |      555 |      155 |       55 |\r\n    // |       | Office  |      330 |      133 |       31 |      335 |      135 |       35 |\r\n    // |-------|---------+------------------------------------------------------------------\r\n    // | Feb   | XBOX    |       40 |       50 |       60 |       45 |       55 |       65 |\r\n    // |       | Azure   |      770 |      177 |       71 |      775 |      175 |       75 |\r\n    // |       | Office  |      440 |      144 |       41 |      445 |      145 |       45 |\r\n    // |--------------------------------------------------|--------------------------------|\r\n    let matrixSeriesAndCategoryAndPlay: DataViewMatrix = {\r\n        rows: {\r\n            root: {\r\n                children: [{\r\n                    level: 0,\r\n                    value: 'Jan',\r\n                    children: [\r\n                        {\r\n                            level: 1,\r\n                            values: {\r\n                                0: { value: 100 },\r\n                                1: { value: 200, valueSourceIndex: 1 },\r\n                                2: { value: 300, valueSourceIndex: 2 },\r\n                                3: { value: 105 },\r\n                                4: { value: 205, valueSourceIndex: 1 },\r\n                                5: { value: 305, valueSourceIndex: 2 },\r\n                            },\r\n                            value: 'XBOX'\r\n                        }, {\r\n                            level: 1,\r\n                            values: {\r\n                                0: { value: 440 },\r\n                                1: { value: 144, valueSourceIndex: 1 },\r\n                                2: { value: 41, valueSourceIndex: 2 },\r\n                                3: { value: 555 },\r\n                                4: { value: 155, valueSourceIndex: 1 },\r\n                                5: { value: 55, valueSourceIndex: 2 },\r\n                            },\r\n                            value: 'Azure'\r\n                        }, {\r\n                            level: 1,\r\n                            values: {\r\n                                0: { value: 330 },\r\n                                1: { value: 133, valueSourceIndex: 1 },\r\n                                2: { value: 31, valueSourceIndex: 2 },\r\n                                3: { value: 335 },\r\n                                4: { value: 135, valueSourceIndex: 1 },\r\n                                5: { value: 35, valueSourceIndex: 2 },\r\n                            },\r\n                            value: 'Office'\r\n                        }]\r\n                },\r\n                    {\r\n                        level: 0,\r\n                        value: 'Feb',\r\n                        children: [\r\n                            {\r\n                                level: 1,\r\n                                values: {\r\n                                    0: { value: 40 },\r\n                                    1: { value: 50, valueSourceIndex: 1 },\r\n                                    2: { value: 60, valueSourceIndex: 2 },\r\n                                    3: { value: 45 },\r\n                                    4: { value: 55, valueSourceIndex: 1 },\r\n                                    5: { value: 65, valueSourceIndex: 2 },\r\n                                },\r\n                                value: 'XBOX'\r\n                            }, {\r\n                                level: 1,\r\n                                values: {\r\n                                    0: { value: 770 },\r\n                                    1: { value: 177, valueSourceIndex: 1 },\r\n                                    2: { value: 71, valueSourceIndex: 2 },\r\n                                    3: { value: 775 },\r\n                                    4: { value: 175, valueSourceIndex: 1 },\r\n                                    5: { value: 75, valueSourceIndex: 2 },\r\n                                },\r\n                                value: 'Azure'\r\n                            }, {\r\n                                level: 1,\r\n                                values: {\r\n                                    0: { value: 440 },\r\n                                    1: { value: 144, valueSourceIndex: 1 },\r\n                                    2: { value: 41, valueSourceIndex: 2 },\r\n                                    3: { value: 445 },\r\n                                    4: { value: 145, valueSourceIndex: 1 },\r\n                                    5: { value: 45, valueSourceIndex: 2 },\r\n                                },\r\n                                value: 'Office'\r\n                            }]\r\n                    }]\r\n            },\r\n            levels: [{ sources: [playSource] }, { sources: [categorySource] }]\r\n        },\r\n        columns: {\r\n            root: {\r\n                children: [\r\n                    {\r\n                        level: 0,\r\n                        value: \"Series1\",\r\n                        children: [\r\n                            { level: 1 },\r\n                            { level: 1, levelSourceIndex: 1 },\r\n                            { level: 1, levelSourceIndex: 2 }\r\n                        ]\r\n                    },\r\n                    {\r\n                        level: 0,\r\n                        value: \"Series2\",\r\n                        children: [\r\n                            { level: 1 },\r\n                            { level: 1, levelSourceIndex: 1 },\r\n                            { level: 1, levelSourceIndex: 2 }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            levels: [\r\n                { sources: [seriesSource] },\r\n                { sources: [measureSource1, measureSource2, measureSource3] }\r\n            ]\r\n        },\r\n        valueSources: [measureSource1, measureSource2, measureSource3]\r\n    };\r\n    //let matrixSeriesAndCategoryAndPlayDataView: powerbi.DataView = {\r\n    //    metadata: { columns: [categorySource, seriesSource, playSource, measureSource1, measureSource2, measureSource3] },\r\n    //    matrix: matrixSeriesAndCategoryAndPlay\r\n    //};\r\n\r\n    describe(\"PlayChart\", () => {\r\n        it(\"convertMatrixToCategorical - Play\", () => {\r\n            let categoricalA = PlayChart.convertMatrixToCategorical(matrixPlay, 0);\r\n            let categoricalB = PlayChart.convertMatrixToCategorical(matrixPlay, 1);\r\n\r\n            expect(categoricalA.categories.length).toBe(0);\r\n            expect(categoricalB.categories.length).toBe(0);\r\n            expect(categoricalA.values.length).toBe(0);\r\n            expect(categoricalB.values.length).toBe(0);\r\n        });\r\n\r\n        it(\"convertMatrixToCategorical - Series and Play\", () => {\r\n            let categoricalA = PlayChart.convertMatrixToCategorical(matrixSeriesAndPlay, 0);\r\n            let categoricalB = PlayChart.convertMatrixToCategorical(matrixSeriesAndPlay, 1);\r\n\r\n            expect(categoricalA.categories).toBeUndefined();\r\n            expect(categoricalB.categories).toBeUndefined();\r\n            expect(categoricalA.values.length).toBe(6);\r\n            expect(categoricalB.values.length).toBe(6);\r\n            for (let values of categoricalA.values) {\r\n                expect(values.values.length).toBe(1);\r\n            }\r\n            for (let values of categoricalB.values) {\r\n                expect(values.values.length).toBe(1);\r\n            }\r\n        });\r\n\r\n        it(\"convertMatrixToCategorical - Category and Play\", () => {\r\n            let categoricalA = PlayChart.convertMatrixToCategorical(matrixCategoryAndPlay, 0);\r\n            let categoricalB = PlayChart.convertMatrixToCategorical(matrixCategoryAndPlay, 1);\r\n\r\n            expect(categoricalA.categories.length).toBe(1);\r\n            expect(categoricalB.categories.length).toBe(1);\r\n            expect(categoricalA.categories[0].values.length).toBe(3);\r\n            expect(categoricalB.categories[0].values.length).toBe(3);\r\n            expect(categoricalA.values.length).toBe(3);\r\n            expect(categoricalB.values.length).toBe(3);\r\n            for (let values of categoricalA.values) {\r\n                expect(values.values.length).toBe(3);\r\n            }\r\n            for (let values of categoricalB.values) {\r\n                expect(values.values.length).toBe(3);\r\n            }\r\n        });\r\n\r\n        it(\"convertMatrixToCategorical - Series and Category and Play\", () => {\r\n            let categoricalA = PlayChart.convertMatrixToCategorical(matrixSeriesAndCategoryAndPlay, 0);\r\n            let categoricalB = PlayChart.convertMatrixToCategorical(matrixSeriesAndCategoryAndPlay, 1);\r\n\r\n            expect(categoricalA.categories.length).toBe(1);\r\n            expect(categoricalB.categories.length).toBe(1);\r\n            expect(categoricalA.categories[0].values.length).toBe(3);\r\n            expect(categoricalB.categories[0].values.length).toBe(3);\r\n            expect(categoricalA.values.length).toBe(6);\r\n            expect(categoricalB.values.length).toBe(6);\r\n            for (let values of categoricalA.values) {\r\n                expect(values.values.length).toBe(3);\r\n            }\r\n            for (let values of categoricalB.values) {\r\n                expect(values.values.length).toBe(3);\r\n            }\r\n        });\r\n\r\n        // TODO: Two measures (X/Y no size, others... encouncentered while building the visual)\r\n        // TODO: One measure (X or Y or size)\r\n        // TODO: Zero measures, can still play through the frame names\r\n    });\r\n}"],"sourceRoot":"/source/"}