{"version":3,"sources":["visuals/gaugeTests.ts"],"names":["powerbitests","powerbitests.GaugeDataBuilder","powerbitests.GaugeDataBuilder.constructor","powerbitests.GaugeDataBuilder.dataViewMetadata","powerbitests.GaugeDataBuilder.visual","powerbitests.GaugeDataBuilder.element","powerbitests.GaugeDataBuilder.height","powerbitests.GaugeDataBuilder.width","powerbitests.GaugeDataBuilder.pluginName","powerbitests.GaugeDataBuilder.hostServices","powerbitests.GaugeDataBuilder.style","powerbitests.GaugeDataBuilder.singleValue","powerbitests.GaugeDataBuilder.categoricalValues","powerbitests.GaugeDataBuilder.values","powerbitests.GaugeDataBuilder.isMobile","powerbitests.GaugeDataBuilder.dataView","powerbitests.GaugeDataBuilder.init","powerbitests.GaugeDataBuilder.buildVisual","powerbitests.GaugeDataBuilder.buildCategorialValues","powerbitests.GaugeDataBuilder.visualInit","powerbitests.GaugeDataBuilder.buildDataView","powerbitests.GaugeDataBuilder.onDataChanged","powerbitests.GaugeVisualDataBuilder","powerbitests.GaugeVisualDataBuilder.constructor","powerbitests.GaugeVisualDataBuilder.gauge","powerbitests.GaugeVisualDataBuilder.warningSpy","powerbitests.GaugeVisualDataBuilder.initGaugeSpy","powerbitests.GaugeVisualDataBuilder.onDataChanged","powerbitests.GaugeVisualDataBuilder.onResizing"],"mappings":"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BAAgBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;YAE/CA,gBAAgBA,CAACA,aAAaA,EAAEA,CAACA;YAEjCA,UAAUA,CAACA;gBACPA,CAACA,CAACA,QAAQA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,GAAGA,CAACA,UAACA,CAASA,EAAEA,OAAgBA,IAAKA,OAAAA,oBAAOA,CAACA,wBAAwBA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,EAA5CA,CAA4CA,CAACA,CAACA;gBAC5GA,oBAAOA,CAACA,wBAAwBA,CAACA,CAACA,CAACA,kBAAkBA,CAACA,CAACA,CAACA;gBACxDA,oBAAOA,CAACA,wBAAwBA,CAACA,CAACA,CAACA,aAAaA,CAACA,CAACA,CAACA;gBAEnDA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,kCAAkCA,EAAEA,UAACA,IAAIA;YACxCA,gBAAgBA,CAACA,WAAWA,GAAGA,EAAEA,CAACA;YAClCA,gBAAgBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;YAElDA,gBAAgBA,CAACA,aAAaA,EAAEA,CAACA;YAEjCA,UAAUA,CAACA;gBACPA,IAAIA,UAAUA,GAAGA,CAACA,CAACA,aAAaA,CAACA,CAACA;gBAClCA,IAAIA,QAAQA,GAAGA,CAACA,CAACA,CAACA,CAACA,YAAYA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACrCA,MAAMA,CAACA,UAAUA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAElCA,IAAIA,QAAQA,GAAGA,EAAEA,CAACA,EAAEA,UAAUA,CAACA,IAAIA,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A,CAACA,CAACA,WAAWA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACtCA,MAAMA,CAACA,CAACA,CAACA,WAAWA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;gBAE7CA,IAAIA,eAAeA,GAAGA,CAACA,CAACA,iBAAiBA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;gBAC7DA,IAAIA,EAAEA,GAAGA,OAAOA,CAACA,uBAAuBA,CAACA,eAAeA,CAACA,CAACA;gBAC1DA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,eAAeA,CAACA,GAAGA,CAACA,CAACA;gBAClCA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,eAAeA,CAACA,GAAGA,CAACA,CAACA;gBAElCA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,0FAA0FA,EAAEA,UAACA,IAAIA;YAChGA,gBAAgBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAElCA,gBAAgBA,CAACA,aAAaA,EAAEA,CAACA;YAEjCA,UAAUA,CAACA;gBACPA,IAAIA,aAAaA,GAAGA,CAACA,CAACA,gBAAgBA,CAACA,CAACA;gBACxCA,IAAIA,aAAaA,GAAGA,CAACA,CAACA,gBAAgBA,CAACA,CAACA;gBAExCA,MAAMA,CAACA,aAAaA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACrCA,MAAMA,CAACA,aAAaA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,WAAWA,EAAEA,CAACA;gBAE9CA,MAAMA,CAACA,aAAaA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACrCA,MAAMA,CAACA,aAAaA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,WAA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CAACA,CAACA;oBAChEA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,KAAKA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,CAACA;oBAC9FA,IAAIA,EAAEA,CAACA;gBAEXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,6CAA6CA,EAAEA,UAACA,IAAIA;gBACnDA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,MAAMA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAC/EA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;gBAEvCA,UAAUA,CAACA;oBACPA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBAC7DA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,KAAKA,CAACA,KAAKA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChEA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,KAAKA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,IAAIA,CAACA,4BAA4BA,CAACA,CAACA;oBACzGA,IAAIA,EAAEA,CAACA;gBAEXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,6CAA6CA,EAAEA,UAACA,IAAIA;gBACnDA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,MAAMA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAC/EA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;gBAEvCA,UAAUA,CAACA;oBACPA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBAC7DA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,KAAKA,CAACA,KAAKA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChEA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,KAAKA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,IAAIA,CAACA,4BAA4BA,CAACA,CAACA;oBACzGA,IAAIA,EAAEA,CAACA;gBAEXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,8CAA8CA,EAAEA,UAACA,IAAIA;gBACpDA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAC5DA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;gBAEvCA,UAAUA,CAACA;oBACPA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBAC7DA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,KAAKA,CAACA,KAAKA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChEA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,KAAKA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA,IAAIA,CAACA,kBAAkBA,CAACA,CAACA;oBAC/FA,IAAIA,EAAEA,CAACA;gBAEXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,0CAA0CA,EAAEA,UAACA,IAAIA;gBAChDA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBACzDA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;gBAEvCA,UAAUA,CAACA;oBACPA,MAAMA,CAACA,sBAAsBA,CAACA,UAAUA,CAACA,CAACA,oBAAoBA,CAACA,EAAEA,CAACA,CAACA;oBACnEA,IAAIA,EAAEA,CAACA;gBACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,qCAAqCA,EAAEA,UAACA,IAAIA;gBAC3CA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAC1DA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;gBAEvCA,UAAUA,CAACA;oBACPA,MAAMA,CAACA,sBAAsBA,CAACA,KAAKA,CAACA,YAAYA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBAErEA,oFAAoFA;oBACpFA,MAAMA,CAACA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBACjFA,MAAMA,CAACA,sBAAsBA,CAACA,KAAKA,CAACA,2BAA2BA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBACpFA,IAAIA,EAAEA,CAACA;gBAEXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,mCAAmCA,EAAEA,UAACA,IAAIA;gBACzCA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAC1DA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;gBACvCA,sBAAsBA,CAACA,UAAUA,CAACA,GAAGA,EAAEA,GAAGA,CAACA,CAACA;gBAE5CA,UAAUA,CAACA;oBACPA,MAAMA,CAACA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBACjFA,MAAMA,CAACA,sBAAsBA,CAACA,KAAKA,CAACA,2BAA2BA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBACpFA,MAAMA,CAACA,sBAAsBA,CAACA,KAAKA,CAACA,YAAYA,CAACA,CAACA,gBAAgBA,EAAEA,CAACA;oBAErEA,IAAIA,EAAEA,CAACA;gBACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,+BAA+BA,EAAEA,UAACA,IAAIA;gBACrCA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAC1DA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;gBACvCA,sBAAsBA,CAACA,UAAUA,CAACA,GAAGA,EAAEA,GAAGA,CAACA,CAACA;gBAE5CA,UAAUA,CAACA;oBACPA,IAAIA,aAAaA,GAAGA,CAACA,CAACA,gBAAgBA,CAACA,CAACA;oBACxCA,IAAIA,IAAIA,GAAWA,aAAaA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;oBAE3CA,+BAA+BA;oBAC/BA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,SAASA,CAACA,GAAGA,CAACA,CAACA,IAAIA,IAAIA,CAACA,OAAOA,CAACA,QAAQA,CAACA,GAAGA,CAACA,CAACA,IAAIA,IAAIA,CAACA,OAAOA,CAACA,QAAQA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,UAAUA,EAAEA,CAACA;oBAEhHA,IAAIA,EAAEA,CAACA;gBACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,iCAAiCA,EAAEA,UAACA,IAAIA;gBACvCA,sBAAsBA,CAACA,gBAAgBA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,OAAOA,GAAGA;oBACzDA,OAAOA,EAAEA,EAAEA,YAAYA,EAAEA,MAAMA,EAAEA;iBACpCA,CAACA;gBAEFA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBAC1DA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;gBACvCA,sBAAsBA,CAACA,UAAUA,CAACA,GAAGA,EAAEA,GAAGA,CAACA,CAACA;gBAE5CA,UAAUA,CAACA;oBACPA,aAAaA;oBACbA,IAAIA,UAAUA,GAAGA,CAACA,CAACA,aAAaA,CAACA,CAACA;oBAElCA,MAAMA,CAACA,UAAUA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClCA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,UAAUA,CAACA,CAACA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAACA;oBAC5DA,cAAcA;oBACdA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,UAAUA,CAACA,CAACA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAACA;oBAC7DA,IAAIA,EAAEA,CAACA;gBACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAC7BA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,4BAA4BA,EAAEA;gBAC7BA,IAAIA,QAAQA,GAAqBA;oBAC7BA,QAAQA,EAAEA,IAAIA;oBACdA,MAAMA,EAAEA,EAAEA,KAAKA,EAAEA,GAAGA,EAAEA;oBACtBA,WAAWA,EAAEA,IAAIA;iBACpBA,CAACA;gBAEFA,IAAIA,cAAcA,GAAGA;oBACjBA,OAAOA,EAAEA,CAACA;oBACVA,aAAaA,EAAEA,CAACA;oBAChBA,KAAKA,EAAEA,CAACA;oBACRA,cAAcA,EAAEA,IAAIA;oBACpBA,cAAcA,EAAEA;wBACZA,GAAGA,EAAEA,CAACA;wBACNA,GAAGA,EAAEA,CAACA;wBACNA,MAAMA,EAAEA,SAASA;qBACpBA;oBACDA,WAAWA,EAAEA,SAASA;oBACtBA,kBAAkBA,EAAEA;wBAChBA,IAAIA,EAAEA,IAAIA;wBACVA,YAAYA,EAAEA,CAACA;wBACfA,SAASA,EAAEA,SAASA;wBACpBA,UAAUA,EAAEA,IAAIA;wBAChBA,QAAQA,EAAEA,IAAIA;wBACdA,QAAQA,EAAEA,CAACA;wBACXA,gBAAgBA,EAAEA,IAAIA;qBACzBA,EAAEA,0BAA0BA,EAAEA;wBAC3BA,IAAIA,EAAEA,IAAIA;wBACVA,YAAYA,EAAEA,CAACA;wBACfA,SAASA,EAAEA,SAASA;wBACpBA,UAAUA,EAAEA,IAAIA;wBAChBA,QAAQA,EAAEA,IAAIA;wBACdA,QAAQA,EAAEA,CAACA;wBACXA,gBAAgBA,EAAEA,IAAIA;qBACzBA;iBACJA,CAACA;gBAEFA,MAAMA,CAACA,WAAWA,CAACA,SAASA,CAACA,QAAQA,CAACA,CAACA,CAACA,OAAOA,CAACA,cAAcA,CAACA,CAACA;YACpEA,CAACA,CAACA,CAACA;QACPA,CAACA,CAACA,CAACA;IACPA,CAACA,CAACA,CAACA;IAEHA,QAAQA,CAACA,qBAAqBA,EAAEA;QAC5BA,IAAIA,sBAA8CA,CAACA;QAEnDA,UAAUA,CAACA;YACPA,YAAYA,CAACA,KAAKA,CAACA,SAASA,EAAEA,CAACA;YAE/BA,sBAAsBA,GAAGA,IAAIA,sBAAsBA,CAACA,OAAOA,CAACA,CAACA;QACjEA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,+EAA+EA,EAAEA;YAChFA,sBAAsBA,CAACA,MAAMA,GAAGA,sBAAsBA,CAACA,KAAKA;gBACxDA,4CAA4CA,CAACA;YAEjDA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;QAC7EA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,+EAA+EA,EAAEA;YAChFA,sBAAsBA,CAACA,MAAMA,GAAGA,sBAAsBA,CAACA,KAAKA;gBACxDA,4CAA4CA,CAACA;YAEjDA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;QAC7EA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,sFAAsFA,EAAEA;YACvFA,sBAAsBA,CAACA,MAAMA,GAAGA,sBAAsBA,CAACA,KAAKA;gBACxDA,4CAA4CA,CAACA;YACjDA,sBAAsBA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;YAEvCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;QAC7EA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,sFAAsFA,EAAEA;YACvFA,sBAAsBA,CAACA,MAAMA,GAAGA,sBAAsBA,CAACA,KAAKA,GAAGA,4CAA4CA,CAACA;YAC5GA,sBAAsBA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;YAEvCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,sBAAsBA;oBAC3BA,MAAMA,EAAEA,sBAAsBA;oBAC9BA,IAAIA,EAAEA,sBAAsBA;oBAC5BA,KAAKA,EAAEA,sBAAsBA;iBAChCA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;QAC7EA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,kDAAkDA,EAAEA;YACnDA,sBAAsBA,CAACA,MAAMA,GAAGA,KAAKA,CAACA;YACtCA,sBAAsBA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;YAErCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;QAC7EA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,qEAAqEA,EAAEA;YACtEA,sBAAsBA,CAACA,MAAMA,GAAGA,KAAKA,CAACA;YACtCA,sBAAsBA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;YAErCA,sBAAsBA,CAACA,WAAWA,GAAGA,EAAEA,CAACA;YACxCA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;YAExDA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;YAEvCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;QAC7EA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,sEAAsEA,EAAEA;YACvEA,sBAAsBA,CAACA,MAAMA,GAAGA,KAAKA,CAACA;YACtCA,sBAAsBA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;YAErCA,sBAAsBA,CAACA,WAAWA,GAAGA,EAAEA,CAACA;YACxCA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;YAE1DA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;YAEvCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;QAC7EA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,+CAA+CA,EAAEA;YAChDA,sBAAsBA,CAACA,MAAMA,GAAGA,KAAKA,CAACA;YACtCA,sBAAsBA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;YAErCA,sBAAsBA,CAACA,WAAWA,GAAGA,EAAEA,CAACA;YACxCA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA;YAE1DA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;YAEvCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;QAC7EA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,mEAAmEA,EAAEA,UAACA,IAAIA;YACzEA,sBAAsBA,CAACA,MAAMA,GAAGA,KAAKA,CAACA;YACtCA,sBAAsBA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;YAErCA,sBAAsBA,CAACA,WAAWA,GAAGA,EAAEA,CAACA;YACxCA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;YAElDA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;YAEvCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;YAEzEA,UAAUA,CAACA;gBACPA,IAAIA,MAAMA,GAAGA,CAACA,CAACA,YAAYA,CAACA,CAACA;gBAC7BA,MAAMA,CAACA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,aAAaA,CAACA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;gBACpDA,MAAMA,CAACA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,aAAaA,CAACA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;gBAEtDA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,uEAAuEA,EAAEA,UAACA,IAAIA;YAC7EA,sBAAsBA,CAACA,MAAMA,GAAGA,KAAKA,CAACA;YACtCA,sBAAsBA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;YAErCA,sBAAsBA,CAACA,WAAWA,GAAGA,EAAEA,CAACA;YACxCA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,yBAAyBA,CAACA,EAAEA,CAACA,CAACA,0BAA0BA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA;YAEnGA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;YAEvCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;YAEzEA,UAAUA,CAACA;gBACPA,IAAIA,MAAMA,GAAGA,CAACA,CAACA,YAAYA,CAACA,CAACA;gBAC7BA,MAAMA,CAACA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,aAAaA,CAACA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;gBACtDA,MAAMA,CAACA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,aAAaA,CAACA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;gBAEpDA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,uEAAuEA,EAAEA,UAACA,IAAIA;YAC7EA,sBAAsBA,CAACA,MAAMA,GAAGA,KAAKA,CAACA;YACtCA,sBAAsBA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;YAErCA,sBAAsBA,CAACA,WAAWA,GAAGA,EAAEA,CAACA;YACxCA,sBAAsBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,yBAAyBA,CAACA,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,0BAA0BA,CAACA,CAACA,CAACA;YAEjGA,sBAAsBA,CAACA,aAAaA,EAAEA,CAACA;YAEvCA,IAAIA,wBAAwBA,GAAGA;gBAC3BA,MAAMA,EAAEA;oBACJA,GAAGA,EAAEA,EAAEA;oBACPA,MAAMA,EAAEA,EAAEA;oBACVA,IAAIA,EAAEA,EAAEA;oBACRA,KAAKA,EAAEA,EAAEA;iBACZA;aACJA,CAACA;YAEFA,IAAIA,gBAAgBA,GAAGA,sBAAsBA,CAACA,KAAKA,CAACA,wBAAwBA,EAAEA,CAACA;YAC/EA,MAAMA,CAACA,gBAAgBA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA,wBAAwBA,CAACA,MAAMA,CAACA,CAACA;YAEzEA,UAAUA,CAACA;gBACPA,IAAIA,MAAMA,GAAGA,CAACA,CAACA,YAAYA,CAACA,CAACA;gBAC7BA,MAAMA,CAACA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,aAAaA,CAACA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;gBACtDA,MAAMA,CAACA,MAAMA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,aAAaA,CAACA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;gBAEpDA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;IACPA,CAACA,CAACA,CAACA;IAEHA,QAAQA,CAACA,yBAAyBA,EAAEA;QAChCA,IAAIA,gBAAkCA,CAACA;QAEvCA,UAAUA,CAACA;YACPA,YAAYA,CAACA,KAAKA,CAACA,SAASA,EAAEA,CAACA;YAE/BA,gBAAgBA,GAAGA,IAAIA,gBAAgBA,CAACA,OAAOA,CAACA,CAACA;QACrDA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,sFAAsFA,EAAEA,UAACA,IAAIA;YAC5FA,gBAAgBA,CAACA,MAAMA,GAAGA,gBAAgBA,CAACA,KAAKA,GAAGA,4CAA4CA,CAACA;YAChGA,gBAAgBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAClCA,gBAAgBA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;YAEjCA,gBAAgBA,CAACA,aAAaA,EAAEA,CAACA;YAEjCA,UAAUA,CAACA;gBACPA,IAAIA,MAAMA,GAAGA,CAACA,CAACA,YAAYA,CAACA,CAACA;gBAE7BA,MAAMA,CAACA,MAAMA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC9BA,MAAMA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;gBACxCA,MAAMA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;gBACxCA,IAAIA,EAAEA,CAACA;YAEXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,sFAAsFA,EAAEA,UAACA,IAAIA;YAC5FA,gBAAgBA,CAACA,MAAMA,GAAGA,gBAAgBA,CAACA,KAAKA,GAAGA,4CAA4CA,CAACA;YAChGA,gBAAgBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAClCA,gBAAgBA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;YAEjCA,gBAAgBA,CAACA,aAAaA,EAAEA,CAACA;YAEjCA,UAAUA,CAACA;gBACPA,IAAIA,UAAUA,GAAWA,CAACA,CAACA,YAAYA,CAACA,CAACA;gBACzCA,MAAMA,CAACA,UAAUA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAClCA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,UAAUA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAC1DA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,UAAUA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAChEA,cAAcA;gBACdA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,UAAUA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAC3DA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,UAAUA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBACjEA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,+EAA+EA,EAAEA,UAACA,IAAIA;YACrFA,gBAAgBA,CAACA,MAAMA,GAAGA,gBAAgBA,CAACA,KAAKA,GAAGA,4CAA4CA,CAACA;YAChGA,gBAAgBA,CAACA,QAAQA,GAAGA,KAAKA,CAACA;YAClCA,gBAAgBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAElCA,gBAAgBA,CAACA,aAAaA,EAAEA,CAACA;YAEjCA,UAAUA,CAACA;gBACPA,IAAIA,UAAUA,GAAWA,CAACA,CAACA,YAAYA,CAACA,CAACA;gBACzCA,MAAMA,CAACA,UAAUA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAClCA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,UAAUA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAC1DA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,UAAUA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAChEA,cAAcA;gBACdA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,UAAUA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAC3DA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,UAAUA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBACjEA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,+EAA+EA,EAAEA,UAACA,IAAIA;YACrFA,gBAAgBA,CAACA,MAAMA,GAAGA,gBAAgBA,CAACA,KAAKA,GAAGA,4CAA4CA,CAACA;YAChGA,gBAAgBA,CAACA,QAAQA,GAAGA,KAAKA,CAACA;YAClCA,gBAAgBA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAElCA,gBAAgBA,CAACA,aAAaA,EAAEA,CAACA;YAEjCA,UAAUA,CAACA;gBACPA,IAAIA,UAAUA,GAAWA,CAACA,CAACA,YAAYA,CAACA,CAACA;gBACzCA,MAAMA,CAACA,UAAUA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAClCA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,UAAUA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAC1DA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,UAAUA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAChEA,cAAcA;gBACdA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,UAAUA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBAC3DA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,UAAUA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;gBACjEA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;IACPA,CAACA,CAACA,CAACA;AACPA,CAACA,EA3/CM,YAAY,KAAZ,YAAY,QA2/ClB","file":"visuals/gaugeTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import DataViewTransform = powerbi.data.DataViewTransform;\r\n    import GaugeVisual = powerbi.visuals.Gauge;\r\n    import gaugeVisualCapabilities = powerbi.visuals.gaugeCapabilities;\r\n    import SVGUtil = powerbi.visuals.SVGUtil;\r\n\r\n    let sideNumbersVisibleMinHeight: number = powerbi.visuals.visualPluginFactory.MobileVisualPluginService.MinHeightGaugeSideNumbersVisible;\r\n    let sideNumbersVisibleGreaterThanMinHeight: number = sideNumbersVisibleMinHeight + 1;\r\n    let sideNumbersVisibleSmallerThanMinHeight: number = sideNumbersVisibleMinHeight - 1;\r\n    let sideNumbersVisibleGreaterThanMinHeightString: string = sideNumbersVisibleGreaterThanMinHeight.toString();\r\n    let sideNumbersVisibleSmallerThanMinHeightString: string = sideNumbersVisibleSmallerThanMinHeight.toString();\r\n    let marginsOnSmallViewPort: number = powerbi.visuals.visualPluginFactory.MobileVisualPluginService.GaugeMarginsOnSmallViewPort;\r\n\r\n    class GaugeDataBuilder {\r\n        private _dataViewMetadata: powerbi.DataViewMetadata = {\r\n            columns: [\r\n                {\r\n                    displayName: \"col1\",\r\n                    roles: { \"Y\": true },\r\n                    isMeasure: true,\r\n                    objects: { general: { formatString: \"$0\" } },\r\n                }, {\r\n                    displayName: \"col2\",\r\n                    roles: { \"MinValue\": true },\r\n                    isMeasure: true\r\n                }, {\r\n                    displayName: \"col3\",\r\n                    roles: { \"MaxValue\": true },\r\n                    isMeasure: true\r\n                }, {\r\n                    displayName: \"col4\",\r\n                    roles: { \"TargetValue\": true },\r\n                    isMeasure: true\r\n                }],\r\n            groups: [],\r\n            measures: [0],\r\n        };\r\n\r\n        public get dataViewMetadata(): powerbi.DataViewMetadata {\r\n            return this._dataViewMetadata;\r\n        }\r\n\r\n        public set dataViewMetadata(value: powerbi.DataViewMetadata) {\r\n            this._dataViewMetadata = value;\r\n        }\r\n\r\n        private _visual: powerbi.IVisual;\r\n\r\n        public get visual(): powerbi.IVisual {\r\n            return this._visual;\r\n        }\r\n\r\n        private _element: JQuery;\r\n\r\n        public get element(): JQuery {\r\n            return this._element;\r\n        }\r\n\r\n        private _height: string;\r\n\r\n        public get height(): string {\r\n            return this._height;\r\n        }\r\n\r\n        public set height(value: string) {\r\n            this._height = value;\r\n\r\n            this.init();\r\n        }\r\n\r\n        private _width: string;\r\n\r\n        public get width(): string {\r\n            return this._width;\r\n        }\r\n\r\n        public set width(value: string) {\r\n            this._width = value;\r\n\r\n            this.init();\r\n        }\r\n\r\n        private _pluginName: string;\r\n\r\n        public get pluginName(): string {\r\n            return this._pluginName;\r\n        }\r\n\r\n        public set pluginName(value: string) {\r\n            this._pluginName = value;\r\n        }\r\n\r\n        private _hostServices: powerbi.IVisualHostServices;\r\n\r\n        public get hostServices(): powerbi.IVisualHostServices {\r\n            return this._hostServices;\r\n        }\r\n\r\n        public set hostServices(value: powerbi.IVisualHostServices) {\r\n            this._hostServices = value;\r\n        }\r\n\r\n        private _style: powerbi.IVisualStyle;\r\n\r\n        public get style(): powerbi.IVisualStyle {\r\n            return this._style;\r\n        }\r\n\r\n        private _singleValue: any;\r\n\r\n        public get singleValue(): any {\r\n            return this._singleValue;\r\n        }\r\n\r\n        public set singleValue(value: any) {\r\n            this._singleValue = value;\r\n        }\r\n\r\n        private _categoricalValues: powerbi.DataViewValueColumns;\r\n\r\n        public get categoricalValues(): powerbi.DataViewValueColumns {\r\n            return this._categoricalValues;\r\n        }\r\n\r\n        public set categoricalValues(value: powerbi.DataViewValueColumns) {\r\n            this._categoricalValues = value;\r\n        }\r\n\r\n        private _values: any[] = [];\r\n\r\n        public get values(): any[] {\r\n            return this._values;\r\n        }\r\n\r\n        public set values(value: any[]) {\r\n            this._values = value;\r\n\r\n            this.buildCategorialValues();\r\n        }\r\n\r\n        private _isMobile: boolean = false;\r\n\r\n        public get isMobile(): boolean {\r\n            return this._isMobile;\r\n        }\r\n\r\n        public set isMobile(value: boolean) {\r\n            this._isMobile = value;\r\n\r\n            this.init();\r\n        }\r\n\r\n        private _dataView: powerbi.DataView;\r\n\r\n        public get dataView(): powerbi.DataView {\r\n            if (!this._dataView) {\r\n                this.buildDataView();\r\n            }\r\n\r\n            return this._dataView;\r\n        }\r\n\r\n        constructor(pluginName: string, height: string = \"500\", width: string = \"500\", isMobile: boolean = false) {\r\n            this._pluginName = pluginName;\r\n            this._height = height;\r\n            this._width = width;\r\n\r\n            this.init();\r\n        }\r\n\r\n        private init() {\r\n            this._element = powerbitests.helpers.testDom(this.height, this.width);\r\n\r\n            this.buildVisual();\r\n\r\n            this._hostServices = powerbitests.mocks.createVisualHostServices();\r\n            this._style = powerbi.visuals.visualStyles.create();\r\n\r\n            this.visualInit();\r\n        }\r\n\r\n        private buildVisual() {\r\n            if (this.isMobile) {\r\n                this._visual = powerbi.visuals.visualPluginFactory.createMobile().getPlugin(this.pluginName).create();\r\n            } else {\r\n                this._visual = powerbi.visuals.visualPluginFactory.create().getPlugin(this.pluginName).create();\r\n            }\r\n        }\r\n\r\n        private buildCategorialValues() {\r\n            let categorialValues: any[] = [];\r\n\r\n            for (let i = 0; i < this.values.length; i++) {\r\n                let categorialValue = {\r\n                    source: this.dataViewMetadata.columns[i],\r\n                    values: this.values[i]\r\n                };\r\n\r\n                categorialValues.push(categorialValue);\r\n            }\r\n\r\n            this._categoricalValues = DataViewTransform.createValueColumns(categorialValues);\r\n        }\r\n\r\n        public visualInit() {\r\n            this.visual.init({\r\n                element: this.element,\r\n                host: this.hostServices,\r\n                style: this.style,\r\n                viewport: {\r\n                    height: this.element.height(),\r\n                    width: this.element.width()\r\n                },\r\n                animation: { transitionImmediate: true }\r\n            });\r\n        }\r\n\r\n        public buildDataView() {\r\n            this._dataView = {\r\n                metadata: this.dataViewMetadata,\r\n                single: { value: this.singleValue },\r\n                categorical: {\r\n                    values: this.categoricalValues\r\n                }\r\n            };\r\n        }\r\n\r\n        public onDataChanged() {\r\n            this.visual.onDataChanged({\r\n                dataViews: [this.dataView]\r\n            });\r\n        }\r\n    }\r\n\r\n    class GaugeVisualDataBuilder extends GaugeDataBuilder {\r\n        public get gauge() {\r\n            return <GaugeVisual>this.visual;\r\n        }\r\n\r\n        private _warningSpy;\r\n\r\n        public get warningSpy() {\r\n            return this._warningSpy;\r\n        }\r\n\r\n        constructor(pluginName: string) {\r\n            super(pluginName);\r\n\r\n            this._warningSpy = jasmine.createSpy(\"warning\");\r\n            this.hostServices.setWarnings = this.warningSpy;\r\n\r\n            this.initGaugeSpy();\r\n        }\r\n\r\n        private initGaugeSpy() {\r\n            spyOn(this.gauge, \"getGaugeVisualProperties\").and.callThrough();\r\n            spyOn(this.gauge, \"getAnimatedNumberProperties\").and.callThrough();\r\n            spyOn(this.gauge, \"drawViewPort\").and.callThrough();\r\n        }\r\n\r\n        public onDataChanged() {\r\n            this.gauge.onDataChanged({\r\n                dataViews: [this.dataView]\r\n            });\r\n        }\r\n\r\n        public onResizing(height: number, width: number) {\r\n            this.gauge.onResizing({\r\n                height: height,\r\n                width: width\r\n            });\r\n        }\r\n    }\r\n\r\n    describe(\"Gauge\", () => {\r\n        beforeEach(() => {\r\n            powerbitests.mocks.setLocale();\r\n        });\r\n\r\n        it(\"Capabilities should include dataViewMappings\", () => {\r\n            expect(gaugeVisualCapabilities.dataViewMappings).toBeDefined();\r\n        });\r\n\r\n        it(\"Capabilities should include dataRoles\", () => {\r\n            expect(gaugeVisualCapabilities.dataRoles).toBeDefined();\r\n        });\r\n\r\n        it(\"Capabilities should not suppressDefaultTitle\", () => {\r\n            expect(gaugeVisualCapabilities.suppressDefaultTitle).toBeUndefined();\r\n        });\r\n\r\n        it(\"Capabilities should include dataRoles\", () => {\r\n            expect(gaugeVisualCapabilities.dataRoles).toBeDefined();\r\n        });\r\n\r\n        it(\"FormatString property should match calculated\", () => {\r\n            expect(powerbi.data.DataViewObjectDescriptors.findFormatString(gaugeVisualCapabilities.objects)).toEqual(GaugeVisual.formatStringProp);\r\n        });\r\n    });\r\n\r\n    describe(\"Gauge DOM tests\", () => {\r\n        let gaugeDataBuilder: GaugeDataBuilder;\r\n\r\n        beforeEach(() => {\r\n            gaugeDataBuilder = new GaugeDataBuilder(\"gauge\");\r\n        });\r\n\r\n        it(\"Zero values do not draw draw NaN target lines\", (done) => {\r\n            gaugeDataBuilder.singleValue = 0;\r\n            gaugeDataBuilder.values = [[0], [0], [0], [0]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                $('.gauge').find('line').map((i: number, element: Element) => helpers.verifyPositionAttributes($(element)));\r\n                helpers.verifyPositionAttributes($('.targetConnector'));\r\n                helpers.verifyPositionAttributes($('.targetText'));\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Ensure min & target dont overlap\", (done) => {\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10], [0], [300], [0]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                let targetText = $(\".targetText\");\r\n                let maxLabel = $($(\".labelText\")[0]);\r\n                expect(targetText.length).toBe(1);\r\n\r\n                let xyTarget = { x: targetText.attr(\"x\"), y: targetText.attr(\"y\") };\r\n                let xyMaxlabel = { x: maxLabel.attr(\"x\"), y: maxLabel.attr(\"y\") };\r\n\r\n                expect(xyTarget.x).not.toEqual(xyMaxlabel.x);\r\n                expect(xyTarget.y).not.toEqual(xyMaxlabel.y);\r\n                done();\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Ensure max & target dont overlap\", (done) => {\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10], [0], [300], [300]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                let targetText = $(\".targetText\");\r\n                let maxLabel = $($(\".labelText\")[1]);\r\n                expect(targetText.length).toBe(1);\r\n\r\n                let xyTarget = { x: targetText.attr(\"x\"), y: targetText.attr(\"y\") };\r\n                let xyMaxlabel = { x: maxLabel.attr(\"x\"), y: maxLabel.attr(\"y\") };\r\n\r\n                expect(xyTarget.x).not.toEqual(xyMaxlabel.x);\r\n                expect(xyTarget.y).not.toEqual(xyMaxlabel.y);\r\n                done();\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Check Gauge DOM\", (done) => {\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10], [0], [300], [200]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {    \r\n                // Check Arc Drawn\r\n                let backgroundArc = $(\".backgroundArc\");\r\n                let foregroundArc = $(\".foregroundArc\");\r\n\r\n                expect(backgroundArc.length).toBe(1);\r\n                expect(backgroundArc.attr(\"d\")).toBeDefined();\r\n\r\n                expect(foregroundArc.length).toBe(1);\r\n                expect(foregroundArc.attr(\"d\")).toBeDefined();\r\n\r\n                expect($(\".mainText\").length).toBe(1);\r\n                expect($(\".mainText\").text()).toEqual(\"$10\");\r\n\r\n                let translateString = $(\".animatedNumber\").attr(\"transform\");\r\n                let xy = SVGUtil.parseTranslateTransform(translateString);\r\n                expect(xy.x).toBeGreaterThan(120);\r\n                expect(xy.y).toBeGreaterThan(220);\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"If value less that zero, then scale should be 0-1, but number should show negative value\", (done) => {\r\n            gaugeDataBuilder.values = [[-25]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                let backgroundArc = $(\".backgroundArc\");\r\n                let foregroundArc = $(\".foregroundArc\");\r\n\r\n                expect(backgroundArc.length).toBe(1);\r\n                expect(backgroundArc.attr(\"d\")).toBeDefined();\r\n\r\n                expect(foregroundArc.length).toBe(1);\r\n                expect(foregroundArc.attr(\"d\")).toBeDefined();\r\n\r\n                let textLabels: JQuery = $(\".labelText\");\r\n\r\n                expect(textLabels.length).toBe(2);\r\n                expect(helpers.findElementText(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementText(textLabels.eq(1))).toEqual(\"$1\");\r\n\r\n                //check titles\r\n                expect(helpers.findElementTitle(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementTitle(textLabels.eq(1))).toEqual(\"$1\");\r\n\r\n                expect($(\".mainText\").length).toBe(1);\r\n                expect($(\".mainText\").text()).toEqual(\"-$25\");\r\n                done();\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Check Gauge DOM on Style Changed\", (done) => {\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10], [0], [500], [200]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            let dataColors: powerbi.IDataColorPalette = new powerbi.visuals.DataColorPalette();\r\n\r\n            gaugeDataBuilder.visual.onStyleChanged({\r\n                titleText: {\r\n                    color: { value: \"rgba(51,51,51,1)\" }\r\n                },\r\n                subTitleText: {\r\n                    color: { value: \"rgba(145,145,145,1)\" }\r\n                },\r\n                labelText: {\r\n                    color: {\r\n                        value: \"#008000\",\r\n                    },\r\n                    fontSize: \"11px\"\r\n                },\r\n                colorPalette: {\r\n                    dataColors: dataColors,\r\n                },\r\n                isHighContrast: false,\r\n            });\r\n\r\n            setTimeout(() => {\r\n                let labels = $(\".labelText\");\r\n                let color = $(labels[0]).css(\"fill\");\r\n                helpers.assertColorsMatch(color, \"#008000\");\r\n                done();\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Formatting: dataLabels=off, calloutValue=off\", (done) => {\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10], [0], [300], [0]];\r\n            gaugeDataBuilder.dataViewMetadata.objects = {\r\n                labels: {\r\n                    show: false\r\n                },\r\n                calloutValue: {\r\n                    show: false\r\n                }\r\n            };\r\n            gaugeDataBuilder.buildDataView();\r\n            gaugeDataBuilder.onDataChanged();\r\n            setTimeout(() => {    \r\n                //Callout value\r\n                expect($(\".mainText\").length).toBe(0);\r\n                \r\n                //Data labels\r\n                expect($(\".labelText\").length).toBe(0);\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Formatting: dataLabels=on, calloutValue=on, textSize\", (done) => {\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10], [0], [300], [0]];\r\n            gaugeDataBuilder.dataViewMetadata.objects = {\r\n                labels: {\r\n                    show: true,\r\n                    fontSize: '15'\r\n                },\r\n                calloutValue: {\r\n                    show: true,\r\n                    fontSize: '15'\r\n                }\r\n            };\r\n            gaugeDataBuilder.buildDataView();\r\n            gaugeDataBuilder.onDataChanged();\r\n            setTimeout(() => {\r\n                //Data labels\r\n                expect($(\".labelText\").css(\"font-size\")).toBe(\"20px\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Formatting: dataLabels=on, calloutValue=on\", (done) => {\r\n            gaugeDataBuilder.singleValue = 20;\r\n            gaugeDataBuilder.values = [[20], [0], [400], [0]];\r\n            gaugeDataBuilder.dataViewMetadata.objects = {\r\n                labels: {\r\n                    show: true,\r\n                    color: { solid: { color: '#0000cc' } }\r\n                },\r\n                calloutValue: {\r\n                    show: true,\r\n                    color: { solid: { color: '#000000' } }\r\n                }\r\n            };\r\n            gaugeDataBuilder.buildDataView();\r\n            gaugeDataBuilder.onDataChanged();\r\n            setTimeout(() => {\r\n                //Callout value\r\n                let mainText = $(\".mainText\");\r\n                expect(mainText.length).toBe(1);\r\n\r\n                let color = $(mainText).css(\"fill\");\r\n                helpers.assertColorsMatch(color, \"#000000\");\r\n\r\n                //Data labels\r\n                let labels = $(\".labelText\");\r\n                expect(labels.length).toBe(2);\r\n\r\n                color = $(labels[0]).css(\"fill\");\r\n                helpers.assertColorsMatch(color, \"#0000cc\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Formatting: dataLabels=on,units=auto, calloutValue=on,units=1000\", (done) => {\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[1000000], [0], [3000], [0]];\r\n            gaugeDataBuilder.dataViewMetadata.objects = {\r\n                labels: {\r\n                    show: true,\r\n                    labelDisplayUnits: 0\r\n                },\r\n                calloutValue: {\r\n                    show: true,\r\n                    labelPrecision: 2,\r\n                    labelDisplayUnits: 1000\r\n                }\r\n            };\r\n            gaugeDataBuilder.buildDataView();\r\n            gaugeDataBuilder.onDataChanged();\r\n            setTimeout(() => {\r\n                //Callout value\r\n                expect($(\".mainText\").text()).toBe(\"$1000.00K\");\r\n                \r\n                //Data labels\r\n                let textLabels: JQuery = $(\".labelText\");\r\n\r\n                expect(helpers.findElementText(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementText(textLabels.eq(1))).toEqual(\"$3000\");\r\n                //check titles\r\n                expect(helpers.findElementTitle(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementTitle(textLabels.eq(1))).toEqual(\"$3000\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Formatting: dataLabels=on, calloutValue=on, scientific number\", (done) => {\r\n            gaugeDataBuilder.dataViewMetadata.columns[0].objects = {\r\n                general: { formatString: \"0.00\" }\r\n            };\r\n\r\n            gaugeDataBuilder.values = [[500000000000000], [0], [1000000000000001], [0]];\r\n            gaugeDataBuilder.dataViewMetadata.objects = {\r\n                labels: {\r\n                    show: true,\r\n                    labelPrecision: 0\r\n                },\r\n                calloutValue: {\r\n                    show: true,\r\n                    labelPrecision: 0\r\n                }\r\n            };\r\n            gaugeDataBuilder.buildDataView();\r\n            gaugeDataBuilder.onDataChanged();\r\n            setTimeout(() => {\r\n                //Callout value\r\n                expect($(\".mainText\").text()).toBe(\"500T\");\r\n                \r\n                //Data labels\r\n                let textLabels: JQuery = $(\".labelText\");\r\n\r\n                expect(helpers.findElementText(textLabels)).toEqual(\"0T\");\r\n                expect(helpers.findElementText(textLabels.eq(1))).toEqual(\"1E+15\");\r\n                //check titles\r\n                expect(helpers.findElementTitle(textLabels)).toEqual(\"0T\");\r\n                expect(helpers.findElementText(textLabels.eq(1))).toEqual(\"1E+15\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Formatting: Currency format does not fallback to scientific notation\", (done) => {\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [{\r\n                    displayName: \"col1\",\r\n                    roles: { \"Y\": true },\r\n                    isMeasure: true,\r\n                    objects: { general: { formatString: '\"$\"#,##0.00' } },\r\n                }],\r\n            };\r\n\r\n            gaugeDataBuilder.dataViewMetadata = dataViewMetadata;\r\n            gaugeDataBuilder.singleValue = 563732228000000;\r\n            gaugeDataBuilder.values = [[563732228000000]];\r\n            gaugeDataBuilder.buildDataView();\r\n\r\n            let data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            expect(data.targetSettings.min).toEqual(0);\r\n            expect(data.targetSettings.max).toEqual(1127464456000000);\r\n            expect(data.targetSettings.target).toEqual(undefined);\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                //Callout value\r\n                expect($(\".mainText\").text()).toBe(\"$563.73T\");\r\n                \r\n                //Data labels\r\n                let textLabels: JQuery = $(\".labelText\");\r\n\r\n                expect(helpers.findElementText(textLabels)).toEqual(\"$0.00T\");\r\n                expect(helpers.findElementText(textLabels.eq(1))).toEqual(\"$1,127.46T\");\r\n                //check titles\r\n                expect(helpers.findElementTitle(textLabels)).toEqual(\"$0.00T\");\r\n                expect(helpers.findElementTitle(textLabels.eq(1))).toEqual(\"$1,127.46T\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n    });\r\n\r\n    describe(\"Gauge Data Tests\", () => {\r\n        let gaugeDataBuilder: GaugeDataBuilder;\r\n\r\n        beforeEach(() => {\r\n            powerbitests.mocks.setLocale();\r\n\r\n            gaugeDataBuilder = new GaugeDataBuilder(\"gauge\");\r\n\r\n            gaugeDataBuilder.dataViewMetadata.columns[3].objects = {\r\n                general: { formatString: \"$0\" }\r\n            };\r\n        });\r\n\r\n        it(\"Gauge registered capabilities\", () => {\r\n            expect(powerbi.visuals.visualPluginFactory.create().getPlugin(\"gauge\").capabilities).toBe(gaugeVisualCapabilities);\r\n        });\r\n\r\n        it(\"FormatString property should match calculated\", () => {\r\n            expect(powerbi.data.DataViewObjectDescriptors.findFormatString(gaugeVisualCapabilities.objects)).toEqual(GaugeVisual.formatStringProp);\r\n        });\r\n\r\n        it(\"Gauge_greaterThanMax\", () => {\r\n            gaugeDataBuilder.singleValue = 500;\r\n            gaugeDataBuilder.values = [[500], [0], [300], [200]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            expect(GaugeVisual.converter(gaugeDataBuilder.dataView).percent).toBe(1);\r\n        });\r\n\r\n        it(\"Gauge_smallerThanMin\", () => {\r\n            gaugeDataBuilder.singleValue = -3;\r\n            gaugeDataBuilder.values = [[-3], [0], [300], [200]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            expect(GaugeVisual.converter(gaugeDataBuilder.dataView).percent).toBe(0);\r\n        });\r\n\r\n        it(\"Gauge_betweenMinMax\", () => {\r\n            gaugeDataBuilder.singleValue = 200;\r\n            gaugeDataBuilder.values = [[200], [100], [300], [200]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            expect(GaugeVisual.converter(gaugeDataBuilder.dataView).percent).toBe(0.5);\r\n        });\r\n\r\n        it(\"Gauge_Nulls\", () => {\r\n            gaugeDataBuilder.singleValue = null;\r\n            gaugeDataBuilder.values = [[null], [null], [null], [null]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            let data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            expect(data.percent).toBe(0);\r\n            expect(data.targetSettings).toEqual({\r\n                min: 0,\r\n                max: 0,\r\n                target: 0,\r\n            });\r\n        });\r\n\r\n        it(\"Gauge_tooltip_work\", () => {\r\n            gaugeDataBuilder.singleValue = 500;\r\n            gaugeDataBuilder.values = [[10], [0], [500], [200]];\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            let data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            let expectedValues = {\r\n                percent: 0.02,\r\n                adjustedTotal: 10,\r\n                total: 10,\r\n                metadataColumn: gaugeDataBuilder.dataViewMetadata.columns[0],\r\n                targetSettings: {\r\n                    min: 0,\r\n                    max: 500,\r\n                    target: 200\r\n                },\r\n                tooltipInfo: [{ displayName: \"col1\", value: \"$10\" }, { displayName: \"col4\", value: \"$200\" }],\r\n                dataLabelsSettings: {\r\n                    show: true,\r\n                    displayUnits: 0,\r\n                    precision: undefined,\r\n                    labelColor: null,\r\n                    position: null,\r\n                    fontSize: 8,\r\n                    formatterOptions: null\r\n                }, calloutValueLabelsSettings: {\r\n                    show: true,\r\n                    displayUnits: 0,\r\n                    precision: undefined,\r\n                    labelColor: null,\r\n                    position: null,\r\n                    fontSize: 8,\r\n                    formatterOptions: null\r\n                }\r\n            };\r\n            expect(data).toEqual(expectedValues);\r\n        });\r\n\r\n        it(\"Gauge_Nulls_Tooltip_Data\", () => {\r\n            gaugeDataBuilder.singleValue = null;\r\n            gaugeDataBuilder.values = [[null], [null], [null], [null]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            let data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            let expectedValues = {\r\n                percent: 0,\r\n                adjustedTotal: 0,\r\n                total: 0,\r\n                metadataColumn: gaugeDataBuilder.dataViewMetadata.columns[0],\r\n                targetSettings: { min: 0, max: 0, target: 0 },\r\n                tooltipInfo: [],\r\n                dataLabelsSettings: {\r\n                    show: true,\r\n                    displayUnits: 0,\r\n                    precision: undefined,\r\n                    labelColor: null,\r\n                    position: null,\r\n                    fontSize: 8,\r\n                    formatterOptions: null\r\n                }, calloutValueLabelsSettings: {\r\n                    show: true,\r\n                    displayUnits: 0,\r\n                    precision: undefined,\r\n                    labelColor: null,\r\n                    position: null,\r\n                    fontSize: 8,\r\n                    formatterOptions: null\r\n                }\r\n            };\r\n            expect(data).toEqual(expectedValues);\r\n        });\r\n\r\n        it(\"Gauge_betweenMinMax_Tooltip_Data\", () => {\r\n            gaugeDataBuilder.singleValue = 200;\r\n            gaugeDataBuilder.values = [[200], [100], [300], [200]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            let data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            let expectedValues = {\r\n                percent: 0.5,\r\n                adjustedTotal: 200,\r\n                total: 200,\r\n                metadataColumn: {\r\n                    displayName: \"col1\",\r\n                    roles: { Y: true },\r\n                    isMeasure: true,\r\n                    objects: { general: { formatString: \"$0\" } },\r\n                },\r\n                targetSettings: { min: 100, max: 300, target: 200 },\r\n                tooltipInfo: [{ displayName: \"col1\", value: \"$200\" }, { displayName: \"col4\", value: \"$200\" }],\r\n                dataLabelsSettings: {\r\n                    show: true,\r\n                    displayUnits: 0,\r\n                    precision: undefined,\r\n                    labelColor: null,\r\n                    position: null,\r\n                    fontSize: 8,\r\n                    formatterOptions: null\r\n                }, calloutValueLabelsSettings: {\r\n                    show: true,\r\n                    displayUnits: 0,\r\n                    precision: undefined,\r\n                    labelColor: null,\r\n                    position: null,\r\n                    fontSize: 8,\r\n                    formatterOptions: null\r\n                }\r\n            };\r\n\r\n            expect(data).toEqual(expectedValues);\r\n        });\r\n\r\n        it(\"Gauge_formatting_min_max_target\", () => {    \r\n            // 1\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [\r\n                    {\r\n                        displayName: \"col1\",\r\n                        roles: { \"Y\": true },\r\n                        isMeasure: true,\r\n                        objects: { general: { formatString: \"$0\" } },\r\n                    }, {\r\n                        displayName: \"col2\",\r\n                        roles: { \"MinValue\": true },\r\n                        isMeasure: true\r\n                    }, {\r\n                        displayName: \"col3\",\r\n                        roles: { \"MaxValue\": true },\r\n                        isMeasure: true\r\n                    }, {\r\n                        displayName: \"col4\",\r\n                        roles: { \"TargetValue\": true },\r\n                        isMeasure: true\r\n                    }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    axis: {\r\n                        min: 1000,\r\n                        max: 300000,\r\n                        target: 12300\r\n                    }\r\n                }\r\n            };\r\n\r\n            gaugeDataBuilder.dataViewMetadata = dataViewMetadata;\r\n            gaugeDataBuilder.singleValue = 500;\r\n            gaugeDataBuilder.values = [[10], [0], [500], [200]];\r\n            gaugeDataBuilder.buildDataView();\r\n\r\n            // Values should not be overrided\r\n            let data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            expect(data.targetSettings.min).toEqual(0);\r\n            expect(data.targetSettings.max).toEqual(500);\r\n            expect(data.targetSettings.target).toEqual(200);\r\n\r\n            // 2\r\n            dataViewMetadata = {\r\n                columns: [\r\n                    {\r\n                        displayName: \"col1\",\r\n                        roles: { \"Y\": true },\r\n                        isMeasure: true,\r\n                        objects: { general: { formatString: \"$0\" } },\r\n                    }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    axis: {\r\n                        min: 10,\r\n                        max: 1000,\r\n                        target: 300\r\n                    }\r\n                }\r\n            };\r\n\r\n            gaugeDataBuilder.dataViewMetadata = dataViewMetadata;\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10]];\r\n            gaugeDataBuilder.buildDataView();\r\n\r\n            // All values should be overrided\r\n            data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            expect(data.targetSettings.min).toEqual(10);\r\n            expect(data.targetSettings.max).toEqual(1000);\r\n            expect(data.targetSettings.target).toEqual(300);\r\n\r\n            // 3\r\n            dataViewMetadata = {\r\n                columns: [\r\n                    {\r\n                        displayName: \"col1\",\r\n                        roles: { \"Y\": true },\r\n                        isMeasure: true,\r\n                        objects: { general: { formatString: \"$0\" } },\r\n                    }, {\r\n                        displayName: \"col2\",\r\n                        roles: { \"MinValue\": true },\r\n                        isMeasure: true\r\n                    },\r\n                ],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    axis: {\r\n                        min: 10,\r\n                        max: 1000,\r\n                        target: 300\r\n                    }\r\n                }\r\n            };\r\n\r\n            gaugeDataBuilder.dataViewMetadata = dataViewMetadata;\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10], [0]];\r\n            gaugeDataBuilder.buildDataView();\r\n\r\n            // All except Min value should be overrided\r\n            data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            expect(data.targetSettings.min).toEqual(0);\r\n            expect(data.targetSettings.max).toEqual(1000);\r\n            expect(data.targetSettings.target).toEqual(300);\r\n\r\n            // 4\r\n            dataViewMetadata = {\r\n                columns: [\r\n                    {\r\n                        displayName: \"col1\",\r\n                        roles: { \"Y\": true },\r\n                        isMeasure: true,\r\n                        objects: { general: { formatString: \"$0\" } },\r\n                    }, {\r\n                        displayName: \"col2\",\r\n                        roles: { \"MinValue\": true },\r\n                        isMeasure: true\r\n                    }, {\r\n                        displayName: \"col4\",\r\n                        roles: { \"TargetValue\": true },\r\n                        isMeasure: true\r\n                    }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    axis: {\r\n                        min: 10,\r\n                        max: 1000,\r\n                        target: 300\r\n                    }\r\n                }\r\n            };\r\n\r\n            gaugeDataBuilder.dataViewMetadata = dataViewMetadata;\r\n            gaugeDataBuilder.singleValue = 10;\r\n            gaugeDataBuilder.values = [[10], [0], [100]];\r\n            gaugeDataBuilder.buildDataView();\r\n\r\n            // Only Max value should be overrided\r\n            data = GaugeVisual.converter(gaugeDataBuilder.dataView);\r\n            expect(data.targetSettings.min).toEqual(0);\r\n            expect(data.targetSettings.max).toEqual(1000);\r\n            expect(data.targetSettings.target).toEqual(100);\r\n        });\r\n\r\n        describe(\"Gauge Rendering Tests\", () => {\r\n            let gaugeVisualDataBuilder: GaugeVisualDataBuilder;\r\n\r\n            beforeEach(() => {\r\n                gaugeDataBuilder = new GaugeDataBuilder(\"gauge\");\r\n                gaugeDataBuilder.singleValue = 10;\r\n                gaugeDataBuilder.values = [[10], [0], [300], [200]];\r\n\r\n                gaugeVisualDataBuilder = new GaugeVisualDataBuilder(\"gauge\");\r\n\r\n                gaugeVisualDataBuilder.dataViewMetadata.columns[3].objects = {\r\n                    general: { formatString: \"$0\" }\r\n                };\r\n\r\n                gaugeVisualDataBuilder.singleValue = 10;\r\n                gaugeVisualDataBuilder.values = [[10], [0], [300], [200]];\r\n            });\r\n\r\n            it(\"Get_Animated_Number_Properties works\", () => {\r\n                let expectedNumberProperty = {\r\n                    transformString: \"translate(0.2928932188134524,0.29289321881345254)\",\r\n                    viewport: {\r\n                        \"height\": 0.7071067811865475,\r\n                        \"width\": 1.4142135623730951\r\n                    }\r\n                };\r\n\r\n                let animatedNumberProperty = gaugeVisualDataBuilder.gauge.getAnimatedNumberProperties(1, 1, 1, 1);\r\n                expect(animatedNumberProperty).toEqual(expectedNumberProperty);\r\n            });\r\n\r\n            it(\"Get_Viewport_Properties works\", () => {\r\n                let expectedViewPortProperty = {\r\n                    radius: 205,\r\n                    innerRadiusOfArc: 143.5,\r\n                    left: 250,\r\n                    top: 352.5,\r\n                    height: 460,\r\n                    width: 410,\r\n                    margin: {\r\n                        top: 20,\r\n                        bottom: 20,\r\n                        left: 45,\r\n                        right: 45\r\n                    },\r\n                    transformString: \"translate(250,352.5)\",\r\n                    innerRadiusFactor: 0.7\r\n                };\r\n\r\n                let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n                expect(viewPortProperty).toEqual(expectedViewPortProperty);\r\n            });\r\n\r\n            it(\"NaN in values shows a warning\", (done) => {\r\n                gaugeVisualDataBuilder.values = [[10], [0], [NaN, 1], [200]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect(gaugeVisualDataBuilder.warningSpy).toHaveBeenCalled();\r\n                    expect(gaugeVisualDataBuilder.warningSpy.calls.count()).toBe(1);\r\n                    expect(gaugeVisualDataBuilder.warningSpy.calls.argsFor(0)[0][0].code).toBe(\"NaNNotSupported\");\r\n                    done();\r\n\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"Negative Infinity in values shows a warning\", (done) => {\r\n                gaugeVisualDataBuilder.values = [[10], [0], [Number.NEGATIVE_INFINITY], [200]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect(gaugeVisualDataBuilder.warningSpy).toHaveBeenCalled();\r\n                    expect(gaugeVisualDataBuilder.warningSpy.calls.count()).toBe(1);\r\n                    expect(gaugeVisualDataBuilder.warningSpy.calls.argsFor(0)[0][0].code).toBe(\"InfinityValuesNotSupported\");\r\n                    done();\r\n\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"Positive Infinity in values shows a warning\", (done) => {\r\n                gaugeVisualDataBuilder.values = [[10], [0], [Number.POSITIVE_INFINITY], [200]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect(gaugeVisualDataBuilder.warningSpy).toHaveBeenCalled();\r\n                    expect(gaugeVisualDataBuilder.warningSpy.calls.count()).toBe(1);\r\n                    expect(gaugeVisualDataBuilder.warningSpy.calls.argsFor(0)[0][0].code).toBe(\"InfinityValuesNotSupported\");\r\n                    done();\r\n\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"Value out of range in values shows a warning\", (done) => {\r\n                gaugeVisualDataBuilder.values = [[10], [0], [1e301], [200]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect(gaugeVisualDataBuilder.warningSpy).toHaveBeenCalled();\r\n                    expect(gaugeVisualDataBuilder.warningSpy.calls.count()).toBe(1);\r\n                    expect(gaugeVisualDataBuilder.warningSpy.calls.argsFor(0)[0][0].code).toBe(\"ValuesOutOfRange\");\r\n                    done();\r\n\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"All okay in values does not show warning\", (done) => {\r\n                gaugeVisualDataBuilder.values = [[10], [0], [20], [200]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect(gaugeVisualDataBuilder.warningSpy).toHaveBeenCalledWith([]);\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"OnDataChange calls expected methods\", (done) => {\r\n                gaugeVisualDataBuilder.values = [[10], [0], [300], [200]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect(gaugeVisualDataBuilder.gauge.drawViewPort).toHaveBeenCalled();\r\n\r\n                    //Changing data should trigger new calls for viewport and animated number properties\r\n                    expect(gaugeVisualDataBuilder.gauge.getGaugeVisualProperties).toHaveBeenCalled();\r\n                    expect(gaugeVisualDataBuilder.gauge.getAnimatedNumberProperties).toHaveBeenCalled();\r\n                    done();\r\n\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"onResizing calls expected methods\", (done) => {\r\n                gaugeVisualDataBuilder.values = [[10], [0], [300], [200]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n                gaugeVisualDataBuilder.onResizing(200, 300);\r\n\r\n                setTimeout(() => {\r\n                    expect(gaugeVisualDataBuilder.gauge.getGaugeVisualProperties).toHaveBeenCalled();\r\n                    expect(gaugeVisualDataBuilder.gauge.getAnimatedNumberProperties).toHaveBeenCalled();\r\n                    expect(gaugeVisualDataBuilder.gauge.drawViewPort).toHaveBeenCalled();\r\n\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"onResizing aspect ratio check\", (done) => {\r\n                gaugeVisualDataBuilder.values = [[10], [0], [300], [200]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n                gaugeVisualDataBuilder.onResizing(100, 400);\r\n\r\n                setTimeout(() => {\r\n                    let foregroundArc = $(\".foregroundArc\");\r\n                    let path: string = foregroundArc.attr(\"d\");\r\n                    \r\n                    // ensure the radius is correct\r\n                    expect(path.indexOf(\"A 60 60\") > -1 || path.indexOf(\"A60,60\") > -1 || path.indexOf(\"A60 60\") > -1).toBeTruthy();\r\n\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"check target has decimal values\", (done) => {\r\n                gaugeVisualDataBuilder.dataViewMetadata.columns[0].objects = {\r\n                    general: { formatString: \"0.00\" }\r\n                };\r\n\r\n                gaugeVisualDataBuilder.values = [[5.5], [0], [10], [6.5]];\r\n                gaugeVisualDataBuilder.onDataChanged();\r\n                gaugeVisualDataBuilder.onResizing(100, 400);\r\n\r\n                setTimeout(() => {\r\n                    //Data labels\r\n                    let targetText = $(\".targetText\");\r\n\r\n                    expect(targetText.length).toBe(1);\r\n                    expect(helpers.findElementText(targetText)).toEqual(\"6.50\");\r\n                    //check titles\r\n                    expect(helpers.findElementTitle(targetText)).toEqual(\"6.50\");\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n            });\r\n\r\n            it(\"Gauge_default_gauge_values\", () => {\r\n                let dataView: powerbi.DataView = {\r\n                    metadata: null,\r\n                    single: { value: 500 },\r\n                    categorical: null\r\n                };\r\n\r\n                let expectedValues = {\r\n                    percent: 0,\r\n                    adjustedTotal: 0,\r\n                    total: 0,\r\n                    metadataColumn: null,\r\n                    targetSettings: {\r\n                        min: 0,\r\n                        max: 1,\r\n                        target: undefined\r\n                    },\r\n                    tooltipInfo: undefined,\r\n                    dataLabelsSettings: {\r\n                        show: true,\r\n                        displayUnits: 0,\r\n                        precision: undefined,\r\n                        labelColor: null,\r\n                        position: null,\r\n                        fontSize: 8,\r\n                        formatterOptions: null\r\n                    }, calloutValueLabelsSettings: {\r\n                        show: true,\r\n                        displayUnits: 0,\r\n                        precision: undefined,\r\n                        labelColor: null,\r\n                        position: null,\r\n                        fontSize: 8,\r\n                        formatterOptions: null\r\n                    }\r\n                };\r\n\r\n                expect(GaugeVisual.converter(dataView)).toEqual(expectedValues);\r\n            });\r\n        });\r\n    });\r\n\r\n    describe(\"Gauge margins tests\", () => {\r\n        let gaugeVisualDataBuilder: GaugeVisualDataBuilder;\r\n\r\n        beforeEach(() => {\r\n            powerbitests.mocks.setLocale();\r\n\r\n            gaugeVisualDataBuilder = new GaugeVisualDataBuilder(\"gauge\");\r\n        });\r\n\r\n        it(\"Gauge margin test with view port sideNumbersVisibleGreaterThanMinHeightString\", () => {\r\n            gaugeVisualDataBuilder.height = gaugeVisualDataBuilder.width =\r\n                sideNumbersVisibleGreaterThanMinHeightString;\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 45,\r\n                    right: 45\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n        });\r\n\r\n        it(\"Gauge margin test with view port sideNumbersVisibleSmallerThanMinHeightString\", () => {\r\n            gaugeVisualDataBuilder.height = gaugeVisualDataBuilder.width =\r\n                sideNumbersVisibleGreaterThanMinHeightString;\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 45,\r\n                    right: 45\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n        });\r\n\r\n        it(\"Gauge margin test with view port sideNumbersVisibleGreaterThanMinHeightString mobile\", () => {\r\n            gaugeVisualDataBuilder.height = gaugeVisualDataBuilder.width =\r\n                sideNumbersVisibleGreaterThanMinHeightString;\r\n            gaugeVisualDataBuilder.isMobile = true;\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 45,\r\n                    right: 45\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n        });\r\n\r\n        it(\"Gauge margin test with view port sideNumbersVisibleSmallerThanMinHeightString mobile\", () => {\r\n            gaugeVisualDataBuilder.height = gaugeVisualDataBuilder.width = sideNumbersVisibleSmallerThanMinHeightString;\r\n            gaugeVisualDataBuilder.isMobile = true;\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: marginsOnSmallViewPort,\r\n                    bottom: marginsOnSmallViewPort,\r\n                    left: marginsOnSmallViewPort,\r\n                    right: marginsOnSmallViewPort\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n        });\r\n\r\n        it(\"Gauge margin test with height greater than width\", () => {\r\n            gaugeVisualDataBuilder.height = \"200\";\r\n            gaugeVisualDataBuilder.width = \"199\";\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 15,\r\n                    right: 15\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n        });\r\n\r\n        it(\"Gauge margin test with target on left and height greater than width\", () => {\r\n            gaugeVisualDataBuilder.height = \"200\";\r\n            gaugeVisualDataBuilder.width = \"199\";\r\n\r\n            gaugeVisualDataBuilder.singleValue = 10;\r\n            gaugeVisualDataBuilder.values = [[10], [0], [300], [0]];\r\n\r\n            gaugeVisualDataBuilder.onDataChanged();\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 45,\r\n                    right: 15\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n        });\r\n\r\n        it(\"Gauge margin test with target on right and height greater than width\", () => {\r\n            gaugeVisualDataBuilder.height = \"200\";\r\n            gaugeVisualDataBuilder.width = \"199\";\r\n\r\n            gaugeVisualDataBuilder.singleValue = 10;\r\n            gaugeVisualDataBuilder.values = [[10], [0], [300], [250]];\r\n\r\n            gaugeVisualDataBuilder.onDataChanged();\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 15,\r\n                    right: 45\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n        });\r\n\r\n        it(\"Gauge margin test with small width and target\", () => {\r\n            gaugeVisualDataBuilder.height = \"200\";\r\n            gaugeVisualDataBuilder.width = \"140\";\r\n\r\n            gaugeVisualDataBuilder.singleValue = 10;\r\n            gaugeVisualDataBuilder.values = [[10], [0], [300], [250]];\r\n\r\n            gaugeVisualDataBuilder.onDataChanged();\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 15,\r\n                    right: 15\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n        });\r\n\r\n        it(\"Gauge with tick labels which fit and no target put labels on side\", (done) => {\r\n            gaugeVisualDataBuilder.height = \"200\";\r\n            gaugeVisualDataBuilder.width = \"400\";\r\n\r\n            gaugeVisualDataBuilder.singleValue = 10;\r\n            gaugeVisualDataBuilder.values = [[-1], [-2], [0]];\r\n\r\n            gaugeVisualDataBuilder.onDataChanged();\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 45,\r\n                    right: 45\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n\r\n            setTimeout(() => {\r\n                let labels = $(\".labelText\");\r\n                expect(labels.eq(0).css('text-anchor')).toBe('end');\r\n                expect(labels.eq(1).css('text-anchor')).toBe('start');\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Gauge with very long minTick label and no target put labels on bottom\", (done) => {\r\n            gaugeVisualDataBuilder.height = \"200\";\r\n            gaugeVisualDataBuilder.width = \"400\";\r\n\r\n            gaugeVisualDataBuilder.singleValue = 10;\r\n            gaugeVisualDataBuilder.values = [[-8000000000000000000000000], [-16374372492439823424324234], [0]];\r\n\r\n            gaugeVisualDataBuilder.onDataChanged();\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 15,\r\n                    right: 15\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n\r\n            setTimeout(() => {\r\n                let labels = $(\".labelText\");\r\n                expect(labels.eq(0).css('text-anchor')).toBe('start');\r\n                expect(labels.eq(1).css('text-anchor')).toBe('end');\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Gauge with very long maxTick label and no target put labels on bottom\", (done) => {\r\n            gaugeVisualDataBuilder.height = \"200\";\r\n            gaugeVisualDataBuilder.width = \"400\";\r\n\r\n            gaugeVisualDataBuilder.singleValue = 10;\r\n            gaugeVisualDataBuilder.values = [[8000000000000000000000000], [0], [16374372492439823424324234]];\r\n\r\n            gaugeVisualDataBuilder.onDataChanged();\r\n\r\n            let expectedViewPortProperty = {\r\n                margin: {\r\n                    top: 20,\r\n                    bottom: 20,\r\n                    left: 15,\r\n                    right: 15\r\n                },\r\n            };\r\n\r\n            let viewPortProperty = gaugeVisualDataBuilder.gauge.getGaugeVisualProperties();\r\n            expect(viewPortProperty.margin).toEqual(expectedViewPortProperty.margin);\r\n\r\n            setTimeout(() => {\r\n                let labels = $(\".labelText\");\r\n                expect(labels.eq(0).css('text-anchor')).toBe('start');\r\n                expect(labels.eq(1).css('text-anchor')).toBe('end');\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n    });\r\n\r\n    describe(\"Gauge side number tests\", () => {\r\n        let gaugeDataBuilder: GaugeDataBuilder;\r\n\r\n        beforeEach(() => {\r\n            powerbitests.mocks.setLocale();\r\n\r\n            gaugeDataBuilder = new GaugeDataBuilder(\"gauge\");\r\n        });\r\n\r\n        it(\"Gauge margin test with view port sideNumbersVisibleSmallerThanMinHeightString mobile\", (done) => {\r\n            gaugeDataBuilder.height = gaugeDataBuilder.width = sideNumbersVisibleSmallerThanMinHeightString;\r\n            gaugeDataBuilder.values = [[-25]];\r\n            gaugeDataBuilder.isMobile = true;\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                let labels = $(\".labelText\");\r\n\r\n                expect(labels.length).toBe(0);\r\n                expect($(labels[0]).text()).toEqual(\"\");\r\n                expect($(labels[1]).text()).toEqual(\"\");\r\n                done();\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Gauge margin test with view port sideNumbersVisibleGreaterThanMinHeightString mobile\", (done) => {\r\n            gaugeDataBuilder.height = gaugeDataBuilder.width = sideNumbersVisibleGreaterThanMinHeightString;\r\n            gaugeDataBuilder.values = [[-25]];\r\n            gaugeDataBuilder.isMobile = true;\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                let textLabels: JQuery = $(\".labelText\");\r\n                expect(textLabels.length).toBe(2);\r\n                expect(helpers.findElementText(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementText(textLabels.eq(1))).toEqual(\"$1\");\r\n                //check titles\r\n                expect(helpers.findElementTitle(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementTitle(textLabels.eq(1))).toEqual(\"$1\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Gauge margin test with view port sideNumbersVisibleSmallerThanMinHeightString\", (done) => {\r\n            gaugeDataBuilder.height = gaugeDataBuilder.width = sideNumbersVisibleSmallerThanMinHeightString;\r\n            gaugeDataBuilder.isMobile = false;\r\n            gaugeDataBuilder.values = [[-25]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                let textLabels: JQuery = $(\".labelText\");\r\n                expect(textLabels.length).toBe(2);\r\n                expect(helpers.findElementText(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementText(textLabels.eq(1))).toEqual(\"$1\");\r\n                //check titles\r\n                expect(helpers.findElementTitle(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementTitle(textLabels.eq(1))).toEqual(\"$1\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Gauge margin test with view port sideNumbersVisibleGreaterThanMinHeightString\", (done) => {\r\n            gaugeDataBuilder.height = gaugeDataBuilder.width = sideNumbersVisibleGreaterThanMinHeightString;\r\n            gaugeDataBuilder.isMobile = false;\r\n            gaugeDataBuilder.values = [[-25]];\r\n\r\n            gaugeDataBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                let textLabels: JQuery = $(\".labelText\");\r\n                expect(textLabels.length).toBe(2);\r\n                expect(helpers.findElementText(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementText(textLabels.eq(1))).toEqual(\"$1\");\r\n                //check titles\r\n                expect(helpers.findElementTitle(textLabels)).toEqual(\"$0\");\r\n                expect(helpers.findElementTitle(textLabels.eq(1))).toEqual(\"$1\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n    });\r\n}"],"sourceRoot":"/source/"}