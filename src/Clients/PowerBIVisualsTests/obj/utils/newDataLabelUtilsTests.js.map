{"version":3,"sources":["utils/newDataLabelUtilsTests.ts"],"names":["powerbitests"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AAEH,IAAO,YAAY,CASlB;AATD,WAAO,YAAY,EAAC,CAAC;IACjBA,IAAOA,iBAAiBA,GAAGA,OAAOA,CAACA,OAAOA,CAACA,iBAAiBA,CAACA;IAE7DA,QAAQA,CAACA,wBAAwBA,EAAEA;QAC/BA,EAAEA,CAACA,8CAA8CA,EAAEA;YAC/CA,IAAIA,iBAAiBA,GAAGA,sDAAsDA,CAACA;YAC/EA,MAAMA,CAACA,iBAAiBA,CAACA,qBAAqBA,CAACA,iBAAiBA,CAACA,CAACA,CAACA,OAAOA,CAACA,iBAAiBA,CAACA,CAACA;QAClGA,CAACA,CAACA,CAACA;IACPA,CAACA,CAACA,CAACA;AACPA,CAACA,EATM,YAAY,KAAZ,YAAY,QASlB","file":"utils/newDataLabelUtilsTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\nmodule powerbitests {\r\n    import NewDataLabelUtils = powerbi.visuals.NewDataLabelUtils;\r\n\r\n    describe('NewDataLabelUtilsTests', () => {\r\n        it('getLabelFormattedText does not truncate text', () => {\r\n            let absurdlyLongLabel = \"10.0000000000000000000000000000000000000000000000000\";\r\n            expect(NewDataLabelUtils.getLabelFormattedText(absurdlyLongLabel)).toEqual(absurdlyLongLabel);\r\n        });\r\n    });\r\n}"],"sourceRoot":"/source/"}