{"version":3,"sources":["visuals/services/geocodingCacheTests.ts"],"names":["powerbitests"],"mappings":"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","file":"visuals/services/geocodingCacheTests.js","sourcesContent":[" /*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import IGeocodeCache = powerbi.visuals.services.IGeocodingCache;\r\n    import GeocodeQuery = powerbi.visuals.services.GeocodeQuery;\r\n    import createGeocodingCache = powerbi.visuals.services.createGeocodingCache;\r\n\r\n    describe('General GeocodeCache Tests', () => {\r\n        let cache: IGeocodeCache;\r\n\r\n        const maxCacheSize = 3000;\r\n        const maxCacheSizeOverflow = 100;\r\n\r\n        beforeEach(() => {\r\n            cache = createGeocodingCache(maxCacheSize, maxCacheSizeOverflow);\r\n            localStorage.clear();\r\n        });\r\n\r\n        it('Cache Hit', () => {\r\n            let washingtonQuery = new GeocodeQuery(\"Washington\", \"State\");\r\n            let washingtonCoord = { latitude: 10, longitude: 10 };\r\n            let utahQuery = new GeocodeQuery(\"Utah\", \"State\");\r\n            let utahCoord = { latitude: 15, longitude: 15 };\r\n            cache.registerCoordinates(washingtonQuery, washingtonCoord);\r\n            cache.registerCoordinates(utahQuery, utahCoord);\r\n\r\n            expect(cache.getCoordinates(washingtonQuery)).toEqual(washingtonCoord);\r\n            expect(cache.getCoordinates(utahQuery)).toEqual(utahCoord);\r\n        });\r\n\r\n        it('Cache Miss', () => {\r\n            let washingtonQuery = new GeocodeQuery(\"Washington\", \"State\");\r\n            let washingtonCoord = { latitude: 10, longitude: 10 };\r\n            let utahQuery = new GeocodeQuery(\"Utah\", \"State\");\r\n            let utahCoord = { latitude: 15, longitude: 15 };\r\n            let newYorkQuery = new GeocodeQuery(\"New York\", \"State\");\r\n            cache.registerCoordinates(washingtonQuery, washingtonCoord);\r\n            cache.registerCoordinates(utahQuery, utahCoord);\r\n\r\n            expect(cache.getCoordinates(newYorkQuery)).toBeFalsy();\r\n        });\r\n\r\n        it('Local storage hit', () => {\r\n            let washingtonQuery = new GeocodeQuery(\"Washington\", \"State\");\r\n            let washingtonCoord = { latitude: 10, longitude: 10 };\r\n            cache.registerCoordinates(washingtonQuery, washingtonCoord);\r\n            let newCache = createGeocodingCache(maxCacheSize, maxCacheSizeOverflow);\r\n\r\n            expect(newCache.getCoordinates(washingtonQuery)).toEqual(washingtonCoord);\r\n        });\r\n\r\n        it('Doesnt crash on null coordinate', () => {\r\n            let tinyCache = createGeocodingCache(1, 1);\r\n            tinyCache['geocodeCache']['null'] = null;\r\n            let washingtonQuery = new GeocodeQuery(\"Washington\", \"State\");\r\n            let washingtonCoord = { latitude: 10, longitude: 10 };\r\n            tinyCache.registerCoordinates(washingtonQuery, washingtonCoord);\r\n            let utahQuery = new GeocodeQuery(\"Utah\", \"State\");\r\n            let utahCoord = { latitude: 15, longitude: 15 };\r\n            tinyCache.registerCoordinates(utahQuery, utahCoord);\r\n            let newYorkQuery = new GeocodeQuery(\"New York\", \"State\");\r\n            let newYorkCoords = { latitude: 20, longitude: 20 };\r\n            tinyCache.registerCoordinates(newYorkQuery, newYorkCoords);\r\n\r\n            expect(tinyCache).toBeDefined();\r\n        });\r\n    });\r\n}"],"sourceRoot":"/source/"}