{"version":3,"sources":["visuals/animatedNumberTests.ts"],"names":["powerbitests","powerbitests.DataViewBuilder","powerbitests.DataViewBuilder.constructor","powerbitests.DataViewBuilder.metadata","powerbitests.DataViewBuilder.init","powerbitests.DataViewBuilder.buildElement","powerbitests.DataViewBuilder.buildMetadata","powerbitests.DataViewBuilder.buildDataView","powerbitests.DataViewBuilder.dataView","powerbitests.DataViewBuilder.setSize","powerbitests.DataViewBuilder.onDataChanged"],"mappings":"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","file":"visuals/animatedNumberTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import AnimatedNumber = powerbi.visuals.AnimatedNumber;\r\n    import animatedNumberCapabilities = powerbi.visuals.animatedNumberCapabilities;\r\n\r\n    describe(\"AnimatedNumber\", () => {\r\n\r\n        it(\"AnimatedNumber registered capabilities\", () => {\r\n            expect(powerbi.visuals.visualPluginFactory.create().getPlugin(\"animatedNumber\").capabilities).toBe(animatedNumberCapabilities);\r\n        });\r\n\r\n        it(\"FormatString property should match calculated\", () => {\r\n            expect(powerbi.data.DataViewObjectDescriptors.findFormatString(animatedNumberCapabilities.objects)).toEqual(AnimatedNumber.formatStringProp);\r\n        });\r\n    });\r\n\r\n    describe(\"AnimatedNumber DOM tests\", () => {\r\n        let dataViewBuilder: DataViewBuilder;\r\n\r\n        beforeEach(() => {\r\n            dataViewBuilder = new DataViewBuilder();\r\n        });\r\n\r\n        it(\"AnimatedText onDataChanged sets text (no settings)\", () => {\r\n            dataViewBuilder.columns = [{displayName: \"col1\", isMeasure: true}];\r\n            dataViewBuilder.singleValue = 123.456;\r\n\r\n            dataViewBuilder.onDataChanged();\r\n\r\n            expect($(\".animatedNumber\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n        });\r\n    });\r\n\r\n    class DataViewBuilder {\r\n        private visual;\r\n        \r\n        private element: JQuery;\r\n\r\n        private width: string;\r\n\r\n        private height: string;\r\n\r\n        private host: powerbi.IVisualHostServices;\r\n\r\n        private style: powerbi.IVisualStyle;\r\n\r\n        private _metadata;\r\n\r\n        private _dataView;\r\n\r\n        public get metadata() {\r\n            if (!this._metadata) {\r\n                this.buildMetadata();\r\n            }\r\n\r\n            return this._metadata;\r\n        }\r\n\r\n        public singleValue: number;\r\n\r\n        public columns: any[] = [];\r\n\r\n        constructor(width: string = \"200\", height: string = \"300\") {\r\n            this.host = powerbitests.mocks.createVisualHostServices();\r\n            this.style = powerbi.visuals.visualStyles.create();\r\n\r\n            this.setSize(width, height);\r\n\r\n            this.visual = new AnimatedNumber();\r\n\r\n            this.init();\r\n        }\r\n\r\n        private init() {\r\n            this.visual.init({\r\n                element: this.element,\r\n                host: this.host,\r\n                style: this.style,\r\n                viewport: {\r\n                    height: this.element.height(),\r\n                    width: this.element.width()\r\n                },\r\n                animation: {\r\n                    transitionImmediate: true\r\n                }\r\n            });\r\n        }\r\n\r\n        private buildElement() {\r\n            this.element = powerbitests.helpers.testDom(this.height, this.width);\r\n        }\r\n\r\n        private buildMetadata() {\r\n            this._metadata = {\r\n                columns: this.columns\r\n            };\r\n        }\r\n\r\n        private buildDataView() {\r\n            this._dataView = {\r\n                metadata: this.metadata,\r\n                single: { value: this.singleValue }\r\n            };\r\n        }\r\n\r\n        public get dataView() {\r\n            if (!this._dataView) {\r\n                this.buildDataView();\r\n            }\r\n\r\n            return this._dataView;\r\n        }\r\n\r\n        public setSize(width: string, height: string) {\r\n            this.width = width;\r\n            this.height = height;\r\n\r\n            this.buildElement();\r\n        }\r\n\r\n        public onDataChanged() {\r\n            this.visual.onDataChanged({ dataViews: [this.dataView] });\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}