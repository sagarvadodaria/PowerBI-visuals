{"version":3,"sources":["visuals/common/cartesianHelperTests.ts"],"names":["powerbitests"],"mappings":"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","file":"visuals/common/cartesianHelperTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import CartesianHelper = powerbi.visuals.CartesianHelper;\r\n    import CartesianData = powerbi.visuals.CartesianData;\r\n    import ValueType = powerbi.ValueType;\r\n    import PrimitiveType = powerbi.PrimitiveType;\r\n\r\n    describe(\"lookupXValue\", () => {\r\n        let data: CartesianData;\r\n        let type: ValueType;\r\n\r\n        beforeEach(() => {\r\n            data = {\r\n                categories: ['a'],\r\n                series: [{\r\n                    data: [{\r\n                        categoryIndex: 0,\r\n                        categoryValue: undefined,\r\n                        value: 0,\r\n                        seriesIndex: 0,\r\n                    }]\r\n                }],\r\n                categoryMetadata: { displayName: 'col1' },\r\n                hasHighlights: false,\r\n            };\r\n        });\r\n\r\n        it('non-null datetime returns instance of Date', () => {\r\n            data.series[0].data[0].categoryValue = 1357027200000;\r\n            type = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.DateTime);\r\n\r\n            let lookupResult = CartesianHelper.lookupXValue(data, 0, type, false /*isScalar*/);\r\n            expect(lookupResult instanceof Date).toBe(true);\r\n            expect(lookupResult.getTime()).toBe(1357027200000);\r\n        });\r\n\r\n        it('null datetime returns null', () => {\r\n            data.series[0].data[0].categoryValue = null;\r\n            type = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.DateTime);\r\n\r\n            let lookupResult = CartesianHelper.lookupXValue(data, 0, type, false /*isScalar*/);\r\n            expect(lookupResult).toBe(null);\r\n        });\r\n\r\n        describe('scalar axis', () => {\r\n            it('numeric', () => {\r\n                type = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.Double);\r\n\r\n                let lookupResult = CartesianHelper.lookupXValue(data, 5, type, true /*isScalar*/);\r\n                expect(lookupResult).toBe(5);\r\n            });\r\n\r\n            it('datetime', () => {\r\n                type = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.DateTime);\r\n                let dateMilliseconds = new Date('1/4/1989').getTime();\r\n\r\n                let lookupResult = CartesianHelper.lookupXValue(data, dateMilliseconds, type, true /*isScalar*/);\r\n                expect(lookupResult instanceof Date).toBe(true);\r\n                expect(lookupResult.getTime()).toBe(dateMilliseconds);\r\n            });\r\n\r\n            it('text', () => {\r\n                type = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.Text);\r\n\r\n                let lookupResult = CartesianHelper.lookupXValue(data, 0, type, false /*isScalar*/);\r\n                expect(lookupResult).toBe('a');\r\n            });\r\n        });\r\n    });\r\n} "],"sourceRoot":"/source/"}