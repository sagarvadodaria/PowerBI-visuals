{"version":3,"sources":["visuals/common/listViewTests.ts"],"names":["powerbitests","powerbitests.ListViewBuilder","powerbitests.ListViewBuilder.constructor","powerbitests.ListViewBuilder.spy","powerbitests.ListViewBuilder.listView","powerbitests.ListViewBuilder.setSize","powerbitests.ListViewBuilder.init","powerbitests.ListViewBuilder.buildHtmlListViewOptions","powerbitests.ListViewBuilder.createOptions","powerbitests.ListViewBuilder.generateNestedData","powerbitests.ListViewBuilder.createListView","powerbitests.ListViewBuilder.setSpy","powerbitests.ListViewBuilder.build","powerbitests.ListViewBuilder.render","powerbitests.ListViewBuilder.setScrollElement","powerbitests.ListViewBuilder.buildHtmlListView","powerbitests.ListViewBuilder.destroy"],"mappings":"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","file":"visuals/common/listViewTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import ListViewFactory = powerbi.visuals.ListViewFactory;\r\n    import ListViewOptions = powerbi.visuals.ListViewOptions;\r\n    \r\n    describe(\"List view tests\", () => {\r\n        let listViewBuilder: ListViewBuilder;\r\n        jasmine.clock().uninstall();\r\n\r\n        let data = [\r\n            { first: \"Mickey\", second: \"Mouse\" },\r\n            { first: \"Mini\", second: \"Mouse\" },\r\n            { first: \"Daffy\", second: \"Duck\" },\r\n            { first: \"Captain\", second: \"Planet\" },\r\n            { first: \"Russell\", second: \"Wilson\" },\r\n            { first: \"Jack\", second: \"Sparrow\" },\r\n            { first: \"James\", second: \"Bond\" },\r\n            { first: \"Sea\", second: \"Hawks\" },\r\n            { first: \"Sachin\", second: \"Patney\" }\r\n        ];\r\n\r\n        beforeEach(() => {\r\n            listViewBuilder = new ListViewBuilder();\r\n            listViewBuilder.data = data;\r\n        });\r\n\r\n        afterEach(() => {\r\n            listViewBuilder.destroy();\r\n            listViewBuilder = null;\r\n        });\r\n\r\n        it(\"Create HTML List View Correctly\", (done) => {\r\n            listViewBuilder.buildHtmlListView();\r\n\r\n            setTimeout(() => {\r\n                let itemCount = listViewBuilder.element.find(\".item\").length;\r\n                expect(itemCount).toBeGreaterThan(0);\r\n                expect(itemCount).toBeLessThan(9); // Some should be virtualized, so shouldn't show all 9 items\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        xit(\"Scroll to last to check if items come in view HTML\", (done) => {\r\n            listViewBuilder.isSpy = true;\r\n            listViewBuilder.buildHtmlListView();\r\n            setTimeout(() => {\r\n                let lastElem = listViewBuilder.element.find(\".item\").last().text();\r\n\r\n                expect(lastElem).not.toEqual(\"-->Sachin-->Patney\");\r\n                listViewBuilder.scrollElement.scrollTop(1000);\r\n                setTimeout(() => {\r\n                    let lastElem2 = listViewBuilder.element.find(\".item\").last().text();\r\n                    expect(lastElem2).toEqual(\"-->Sachin-->Patney\");\r\n                    expect(listViewBuilder.spy).toHaveBeenCalled();\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        xit(\"Reset scrollbar position when ResetScrollbar flag is set\", (done) => {\r\n            listViewBuilder.data = [\r\n                { first: \"Mickey\", second: \"Mouse\" },\r\n                { first: \"Mini\", second: \"Mouse\" },\r\n                { first: \"Daffy\", second: \"Duck\" },\r\n                { first: \"Captain\", second: \"Planet\" },\r\n                { first: \"Russell\", second: \"Wilson\" },\r\n                { first: \"Jack\", second: \"Sparrow\" },\r\n                { first: \"James\", second: \"Bond\" },\r\n                { first: \"Sea\", second: \"Hawks\" }\r\n            ];\r\n\r\n            listViewBuilder.buildHtmlListView();\r\n            setTimeout(() => {\r\n                listViewBuilder.scrollElement.scrollTop(1000);\r\n           \r\n                setTimeout(() => {\r\n                    expect(listViewBuilder.scrollElement.scrollTop()).toBe(40);\r\n\r\n                    listViewBuilder.render(true, false);\r\n                    setTimeout(() => {\r\n                        expect(listViewBuilder.scrollElement.scrollTop()).toBe(40);\r\n                \r\n                        listViewBuilder.render(true, true);\r\n\r\n                        expect(listViewBuilder.scrollElement.scrollTop()).toBe(0);\r\n\r\n                        done();\r\n                    }, DefaultWaitForRender);\r\n                }, DefaultWaitForRender);\r\n            }, 30);\r\n        });\r\n\r\n    });\r\n\r\n    class ListViewBuilder {\r\n        public isSpy: boolean = false;\r\n        public element: JQuery;\r\n        public scrollElement: JQuery;\r\n        public data: any[];\r\n\r\n        private width: number;\r\n        private height: number;\r\n        private options: ListViewOptions;\r\n        private _spy: jasmine.Spy;\r\n        private _listView: powerbi.visuals.IListView;\r\n\r\n        public get spy(): jasmine.Spy {\r\n            return this._spy;\r\n        }\r\n\r\n        public get listView(): powerbi.visuals.IListView {\r\n            return this._listView;\r\n        }\r\n\r\n        constructor(width: number = 200, height: number = 200) {\r\n            this.setSize(width, height);\r\n        }\r\n\r\n        public setSize(width: number, height: number) {\r\n            this.width = width;\r\n            this.height = height;\r\n\r\n            this.init();\r\n        }\r\n\r\n        private init() {\r\n            this.element = powerbitests.helpers.testDom(this.height.toString(), this.width.toString(), 'visual');\r\n        }\r\n\r\n        private buildHtmlListViewOptions() {\r\n            let rowEnter = (rowSelection: D3.Selection) => {\r\n                rowSelection\r\n                    .append(\"div\")\r\n                    .style(\"height\", \"30px\")\r\n                    .classed(\"item\", true)\r\n                    .selectAll(\"span\")\r\n                    .data(d => {\r\n                        return d.children;\r\n                    })\r\n                    .enter()\r\n                    .append(\"span\");\r\n            };\r\n\r\n            let rowUpdate = (rowSelection: D3.Selection) => {\r\n                rowSelection\r\n                    .selectAll(\".item\")\r\n                    .selectAll(\"span\")\r\n                    .text(d => {\r\n                    return \"-->\" + d.name;\r\n                });\r\n            };\r\n\r\n            this.createOptions(rowEnter, rowUpdate);\r\n        }\r\n        \r\n        private createOptions(rowEnter, rowUpdate) {\r\n            this.options = {\r\n                enter: rowEnter,\r\n                exit: (rowSelection: D3.Selection) => { rowSelection.remove(); },\r\n                update: rowUpdate,\r\n                loadMoreData: () => { },\r\n                baseContainer: d3.select(this.element.get(0)),\r\n                rowHeight: 30,\r\n                scrollEnabled: true,\r\n                viewport: { height: this.height, width: this.width }\r\n            };\r\n        }\r\n\r\n        private generateNestedData(tuples: any[]) {\r\n            let testData = [];\r\n\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                testData.push({\r\n                    id: i,\r\n                    children: [\r\n                        { name: this.data[i].first },\r\n                        { name: this.data[i].second }\r\n                    ]\r\n                });\r\n            }\r\n\r\n            return testData;\r\n        }\r\n        \r\n        private createListView() {\r\n            this._listView = ListViewFactory.createListView(this.options);\r\n        }\r\n\r\n        private setSpy() {\r\n            if (this.isSpy) {\r\n                this._spy = spyOn(this.options, \"loadMoreData\");\r\n            }\r\n        }\r\n\r\n        public build() {\r\n            this.setSpy();\r\n            this.createListView();\r\n            this.render();\r\n            this.setScrollElement();\r\n        }\r\n\r\n        public render(sizeChanged: boolean = true, resetScrollPosition?: boolean) {\r\n            this._listView.data(this.generateNestedData(this.data), d => d.id, resetScrollPosition).render();\r\n        }\r\n\r\n        public setScrollElement(): void {\r\n            this.scrollElement = this.element.find('.scrollbar-inner.scroll-content');\r\n        }\r\n\r\n        public buildHtmlListView() {\r\n            this.buildHtmlListViewOptions();\r\n            this.build();\r\n        }\r\n\r\n        public destroy() {\r\n            this._listView.empty();\r\n            this.options = null;\r\n            this.scrollElement = null;\r\n            this.element.remove();\r\n            this._listView = null;\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}