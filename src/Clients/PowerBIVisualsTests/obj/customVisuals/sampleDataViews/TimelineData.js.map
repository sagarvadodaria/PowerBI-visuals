{"version":3,"sources":["customVisuals/sampleDataViews/TimelineData.ts"],"names":["powerbitests","powerbitests.customVisuals","powerbitests.customVisuals.sampleDataViews","powerbitests.customVisuals.sampleDataViews.TimelineData","powerbitests.customVisuals.sampleDataViews.TimelineData.constructor","powerbitests.customVisuals.sampleDataViews.TimelineData.getDataView"],"mappings":"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","file":"customVisuals/sampleDataViews/TimelineData.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\nmodule powerbitests.customVisuals.sampleDataViews {\r\n    import DataView = powerbi.DataView;\r\n    import ValueType = powerbi.ValueType;\r\n    import PrimitiveType = powerbi.PrimitiveType;\r\n    import DataViewMetadata = powerbi.DataViewMetadata;\r\n    import SQExprBuilder = powerbi.data.SQExprBuilder;\r\n    import DataViewMetadataColumn = powerbi.DataViewMetadataColumn;\r\n\r\n    export class TimelineData {\r\n        public getDataView(): DataView {\r\n            let rows = [\r\n                ['01.01.2014'],\r\n                ['02.01.2014'],\r\n                ['03.01.2014'],\r\n                ['04.01.2014'],\r\n                ['05.01.2014'],\r\n                ['06.01.2014'],\r\n                ['07.01.2014'],\r\n                ['08.01.2014'],\r\n                ['09.01.2014'],\r\n                ['10.01.2014']\r\n            ];\r\n            let categoryValues = rows.map(function (value) {\r\n                let arr = value[0].split('.');\r\n                return (new Date(Number(arr[2]), Number(arr[1]) - 1, Number(arr[0]))); // months in JavaScript start with 0\r\n            });\r\n            let dataViewMetadata: DataViewMetadata = {\r\n                columns: [\r\n                    {\r\n                        displayName: 'Team',\r\n                        queryName: 'Team',\r\n                        type: ValueType.fromDescriptor({ text: true })\r\n                    },\r\n                    {\r\n                        displayName: 'Volume',\r\n                        isMeasure: true,\r\n                        queryName: 'volume1',\r\n                        type: ValueType.fromDescriptor({ numeric: true }),\r\n                    },\r\n                ]\r\n            };\r\n\r\n            let fieldExpr = SQExprBuilder.fieldExpr({ column: { schema: 's', entity: 'e', name: 'series' } });\r\n\r\n            let dataTypeString = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.Text);\r\n            let groupSource1: DataViewMetadataColumn = { displayName: 'group1', type: dataTypeString, index: 0 };\r\n\r\n            return {\r\n                metadata: { columns: [groupSource1] },\r\n                categorical: {\r\n                    categories: [{\r\n                        source: dataViewMetadata.columns[0],\r\n                        values: categoryValues,\r\n                        identityFields: [fieldExpr],\r\n                        objects: [\r\n                            {\r\n                                dataPoint: {\r\n                                    fill: {\r\n                                        solid: {\r\n                                            color: 'rgb(165, 172, 175)'\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                dataPoint: {\r\n                                    fill: {\r\n                                        solid: {\r\n                                            color: 'rgb(175, 30, 44)'\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                        ]\r\n                    }]\r\n                },\r\n                table: {\r\n                    columns: [groupSource1],\r\n                    rows: []\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}