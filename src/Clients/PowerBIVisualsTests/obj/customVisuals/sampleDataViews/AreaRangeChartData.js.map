{"version":3,"sources":["customVisuals/sampleDataViews/AreaRangeChartData.ts"],"names":["powerbitests","powerbitests.customVisuals","powerbitests.customVisuals.sampleDataViews","powerbitests.customVisuals.sampleDataViews.AreaRangeChartData","powerbitests.customVisuals.sampleDataViews.AreaRangeChartData.constructor","powerbitests.customVisuals.sampleDataViews.AreaRangeChartData.getDataView"],"mappings":"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","file":"customVisuals/sampleDataViews/AreaRangeChartData.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests.customVisuals.sampleDataViews {\r\n    import SQExprBuilder = powerbi.data.SQExprBuilder;\r\n    import DataView = powerbi.DataView;\r\n    import DataViewMetadata = powerbi.DataViewMetadata;\r\n    import ValueType = powerbi.ValueType;\r\n    import DataViewTransform = powerbi.data.DataViewTransform;\r\n    import DataViewValueColumns = powerbi.DataViewValueColumns;\r\n    import DataViewValueColumn = powerbi.DataViewValueColumn;\r\n\r\n    export class AreaRangeChartData {\r\n\r\n        public getDataView(): DataView {\r\n            let dataViewMetadata: DataViewMetadata = {\r\n                columns: [\r\n                    {\r\n                        displayName: 'Country',\r\n                        queryName: 'Country',\r\n                        type: ValueType.fromDescriptor({ text: true }),\r\n                        roles: { Category: true }\r\n                    },\r\n                    {\r\n                        displayName: 'District',\r\n                        queryName: 'District',\r\n                        type: ValueType.fromDescriptor({ text: true }),\r\n                        roles: { Series: true }\r\n                    },\r\n                    {\r\n                        displayName: 'Sales Amount (2014)',\r\n                        isMeasure: true,\r\n                        format: \"$0,000.00\",\r\n                        queryName: 'district',\r\n                        roles: { Lower: true },\r\n                        type: ValueType.fromDescriptor({ numeric: true }),\r\n                        objects: { dataPoint: { fill: { solid: { color: 'purple' } } } },\r\n                    },\r\n                    {\r\n                        displayName: 'Sales Amount (2015)',\r\n                        isMeasure: true,\r\n                        format: \"$0,000.00\",\r\n                        queryName: 'district',\r\n                        roles: { Upper: true },\r\n                        type: ValueType.fromDescriptor({ numeric: true })\r\n                    }\r\n                ]\r\n            };\r\n\r\n            let columns: DataViewValueColumn[] = [\r\n                {\r\n                    source: dataViewMetadata.columns[2],\r\n                    // Sales Amount for 2014\r\n                    values: [0, 2, 4, 2, 2, 0],\r\n                },\r\n                {\r\n                    source: dataViewMetadata.columns[3],\r\n                    // Sales Amount for 2015\r\n                    values: [1, 3, 6, 3, 4, 1],\r\n                }\r\n            ];\r\n\r\n            let fieldExpr = SQExprBuilder.fieldExpr({ column: { schema: 's', entity: \"table1\", name: \"country\" } });\r\n            let categoryValues = [\"Australia\", \"Canada\", \"France\", \"Germany\", \"United Kingdom\", \"United States\"];\r\n            let categoryIdentities = categoryValues.map(value =>\r\n                powerbi.data.createDataViewScopeIdentity(SQExprBuilder.equal(fieldExpr, SQExprBuilder.text(value))));\r\n            let dataValues: DataViewValueColumns = DataViewTransform.createValueColumns(columns);\r\n\r\n            return {\r\n                metadata: dataViewMetadata,\r\n                categorical: {\r\n                    categories: [{\r\n                        source: dataViewMetadata.columns[0],\r\n                        values: categoryValues,\r\n                        identity: categoryIdentities\r\n                    }],\r\n                    values: dataValues,\r\n                }\r\n            };\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}