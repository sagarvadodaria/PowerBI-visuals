{"version":3,"sources":["visuals/cardTests.ts"],"names":["powerbitests","powerbitests.verifyCategoryLabels","powerbitests.verifyLabels","powerbitests.CardBuilder","powerbitests.CardBuilder.constructor","powerbitests.CardBuilder.card","powerbitests.CardBuilder.buildCard","powerbitests.CardBuilder.buildMinervaCard","powerbitests.CardBuilder.buildPlainCard","powerbitests.CardBuilder.cardInit","powerbitests.CardBuilder.setCurrentViewport","powerbitests.CardBuilder.onDataChanged","powerbitests.CardBuilder.onResizing"],"mappings":"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AAWA,GAAGA,IAAIA,CAACA,YAAYA,CAACA,KAAKA,CAACA;QAE1CA,UAAUA,CAACA;YACPA,WAAWA,GAAGA,IAAIA,WAAWA,CAACA,SAASA,EAAEA,SAASA,EAAEA,KAAKA,EAAEA,KAAKA,EAAEA,IAAIA,CAACA,CAACA;YAExEA,WAAWA,CAACA,QAAQA,GAAGA,gBAAgBA,CAACA;QAC5CA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,+BAA+BA,EAAEA,UAACA,IAAIA;YACrCA,WAAWA,CAACA,QAAQA,GAAGA,gBAAgBA,CAACA;YACxCA,WAAWA,CAACA,WAAWA,GAAGA,EAAEA,CAACA;YAE7BA,WAAWA,CAACA,aAAaA,EAAEA,CAACA;YAE5BA,UAAUA,CAACA;gBACPA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;gBAC/BA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;gBAChCA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;gBAChCA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACnCA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAEnCA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;gBAClEA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;gBAEnEA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gBAChEA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gBAEjEA,IAAIA,EAAEA,CAACA;YACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,iCAAiCA,EAAEA,UAACA,IAAIA;YACvCA,WAAWA,CAACA,WAAWA,GAAGA,MAAMA,CAACA;YAEjCA,WAAWA,CAACA,aAAaA,EAAEA,CAACA;YAE5BA,UAAUA,CAACA;gBACPA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;gBAChCA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;gBAChCA,MAAMA,CAACA,QAAQA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,QAAQA,EAAEA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,QAAQA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBACvFA,MAAMA,CAACA,QAAQA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,QAAQA,EAAEA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,QAAQA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBACvFA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,IAAIA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,KAAKA,CAACA,CAACA;gBAC1DA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,IAAIA,CAACA,CAACA,IAAIA,CA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eA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;gBAElEA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;gBAClEA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;gBAEnEA,WAAWA,CAACA,WAAWA,GAAGA,IAAIA,CAACA;gBAC/BA,WAAWA,CAACA,aAAaA,EAAEA,CAACA;gBAE5BA,UAAUA,CAACA;oBACPA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA;oBACrEA,MAAMA,CAACA,oBAAOA,CAACA,eAAeA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;oBAElEA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA;oBACtEA,MAAMA,CAACA,oBAAOA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,KAAKA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;oBACnEA,IAAIA,EAAEA,CAACA;gBACXA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;YAE7BA,CAACA,EAAEA,iCAAoBA,CAACA,CAACA;QAC7BA,CAACA,CAACA,CAACA;QAEHA,EAAEA,CAACA,sCAAsCA,EAAEA,UAACA,IAAIA;YAC5CA,WA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","file":"visuals/cardTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import Card = powerbi.visuals.Card;\r\n    import cardCapabilities = powerbi.visuals.cardCapabilities;\r\n    import DataViewTransform = powerbi.data.DataViewTransform;\r\n    import ValueType = powerbi.ValueType;\r\n    import SVGUtil = powerbi.visuals.SVGUtil;\r\n    import VisualObjectInstanceEnumerationObject = powerbi.VisualObjectInstanceEnumerationObject;\r\n\r\n    describe(\"Card\", () => {\r\n        it(\"Card_registered_capabilities\", () => {\r\n            expect(powerbi.visuals.visualPluginFactory.create().getPlugin(\"card\").capabilities).toBe(cardCapabilities);\r\n        });\r\n\r\n        it(\"Capabilities should include dataViewMappings\", () => {\r\n            expect(cardCapabilities.dataViewMappings).toBeDefined();\r\n            expect(cardCapabilities.dataViewMappings.length).toBe(1);\r\n        });\r\n\r\n        it(\"Capabilities should have condition\", () => {\r\n            expect(cardCapabilities.dataViewMappings[0].conditions[0][cardCapabilities.dataRoles[0].name].max).toBe(1);\r\n        });\r\n\r\n        it(\"Capabilities should include dataRoles\", () => {\r\n            expect(cardCapabilities.dataRoles).toBeDefined();\r\n            expect(cardCapabilities.dataRoles.length).toBe(1);\r\n        });\r\n\r\n        it(\"Capabilities should suppressDefaultTitle\", () => {\r\n            expect(cardCapabilities.suppressDefaultTitle).toBe(true);\r\n        });\r\n\r\n        it(\"FormatString property should match calculated\", () => {\r\n            expect(powerbi.data.DataViewObjectDescriptors.findFormatString(cardCapabilities.objects)).toEqual(Card.formatStringProp);\r\n        });\r\n\r\n        it(\"cardChart preferred capabilities requires at most 1 row\", () => {\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [\r\n                    { displayName: \"col1\" },\r\n                    { displayName: \"col2\", isMeasure: true }]\r\n            };\r\n\r\n            let dataViewWithTwoRows: powerbi.DataView = {\r\n                metadata: dataViewMetadata,\r\n                categorical: {\r\n                    categories: [{\r\n                        source: dataViewMetadata.columns[0],\r\n                        values: [\"John Domo\", \"Delta Force\"],\r\n                        identity: [mocks.dataViewScopeIdentity(\"a\"), mocks.dataViewScopeIdentity(\"b\")]\r\n                    }],\r\n                    values: DataViewTransform.createValueColumns([{\r\n                        source: dataViewMetadata.columns[1],\r\n                        values: [100, 200],\r\n                        subtotal: 300\r\n                    }])\r\n                }\r\n            };\r\n\r\n            let plugin = powerbi.visuals.visualPluginFactory.create().getPlugin(\"card\");\r\n            expect(powerbi.DataViewAnalysis.supports(dataViewWithTwoRows, plugin.capabilities.dataViewMappings[0], true)).toBe(false);\r\n        });\r\n\r\n        it(\"cardChart preferred capabilities requires 1 row\", () => {\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [\r\n                    { displayName: \"numeric\", type: ValueType.fromDescriptor({ numeric: true }) }\r\n                ],\r\n            };\r\n\r\n            let data: powerbi.DataView = {\r\n                metadata: dataViewMetadata,\r\n                single: { value: 123.456 }\r\n            };\r\n\r\n            let plugin = powerbi.visuals.visualPluginFactory.create().getPlugin(\"card\");\r\n            expect(powerbi.DataViewAnalysis.supports(data, plugin.capabilities.dataViewMappings[0], true)).toBe(true);\r\n        });\r\n    });\r\n\r\n    describe(\"enumerateObjectInstances\", () => {\r\n        let cardBuilder: CardBuilder;\r\n\r\n        let dataViewMetadata: powerbi.DataViewMetadata = {\r\n            columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n            groups: [],\r\n            measures: [0],\r\n            objects: {\r\n                labels: {\r\n                    color: { solid: { color: \"#222222\" } },\r\n                    labelPrecision: 3,\r\n                    labelDisplayUnits: 1000\r\n                },\r\n                categoryLabels: {\r\n                    color: { solid: { color: \"#FF0000\" } },\r\n                }\r\n            }\r\n        };\r\n\r\n        beforeEach(() => {\r\n            cardBuilder = new CardBuilder(undefined, undefined, \"500\", \"500\");\r\n        });\r\n\r\n        it(\"verify default values\", () => {\r\n            cardBuilder.onDataChanged();\r\n\r\n            verifyLabels(cardBuilder.card);\r\n            verifyCategoryLabels(cardBuilder.card);\r\n        });\r\n\r\n        it(\"changed data\", () => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 20;\r\n            cardBuilder.onDataChanged();\r\n\r\n            verifyLabels(cardBuilder.card, \"#222222\", 3, 1000);\r\n            verifyCategoryLabels(cardBuilder.card, \"#FF0000\");\r\n        });\r\n\r\n        it(\"changed title\", () => {\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    categoryLabels: {\r\n                        show: false\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = 0;\r\n            cardBuilder.onDataChanged();\r\n\r\n            let objects = <VisualObjectInstanceEnumerationObject>cardBuilder.card.enumerateObjectInstances({ objectName: \"categoryLabels\" });\r\n            expect(objects.instances.length).toBe(1);\r\n            expect(objects.instances[0].properties[\"show\"]).toBeDefined();\r\n            expect(objects.instances[0].properties[\"show\"]).toBe(false);\r\n            expect(objects.containers).toBeUndefined();\r\n        });\r\n\r\n        function verifyCategoryLabels(card: Card, color?: string) {\r\n            let objects = <VisualObjectInstanceEnumerationObject>card.enumerateObjectInstances({ objectName: \"categoryLabels\" });\r\n            expect(objects.instances.length).toBe(1);\r\n            expect(objects.instances[0].properties[\"show\"]).toBeDefined();\r\n            expect(objects.instances[0].properties[\"show\"]).toBe(true);\r\n\r\n            color = color ? color : Card.DefaultStyle.label.color;\r\n\r\n            let properties = objects.instances[0].properties;\r\n            helpers.assertColorsMatch(<string>properties[\"color\"], color);\r\n        }\r\n\r\n        function verifyLabels(card: Card, color?: string, precision?: number, displayUnits?: number) {\r\n            let objects = <VisualObjectInstanceEnumerationObject>card.enumerateObjectInstances({ objectName: \"labels\" });\r\n            let defaultLabelSettings = powerbi.visuals.dataLabelUtils.getDefaultLabelSettings();\r\n\r\n            expect(objects.instances.length).toBe(1);\r\n            expect(objects.instances[0].properties).toBeDefined();\r\n\r\n            // Default values\r\n            color = color ? color : Card.DefaultStyle.value.color;\r\n            \r\n            // The default value for precision is undefined but in enumerateObject it is null\r\n            precision = precision !== undefined ? precision : null;\r\n            displayUnits = displayUnits ? displayUnits : defaultLabelSettings.displayUnits;\r\n\r\n            let properties = objects.instances[0].properties;\r\n            helpers.assertColorsMatch(<string>properties[\"color\"], color);\r\n            expect(properties[\"labelPrecision\"]).toBe(precision);\r\n            expect(properties[\"labelDisplayUnits\"]).toBe(displayUnits);\r\n        }\r\n    });\r\n\r\n    describe(\"Card DOM tests\", () => {\r\n        let cardBuilder: CardBuilder;\r\n\r\n        let dataViewMetadata: powerbi.DataViewMetadata = {\r\n            columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n            groups: [],\r\n            measures: [0],\r\n        };\r\n\r\n        let dataViewMetadataDecimalFormatString: powerbi.DataViewMetadata = {\r\n            columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#,0.00\" } } }],\r\n            groups: [],\r\n            measures: [0],\r\n        };\r\n\r\n        let dataViewmetadataWithLabelProperties: powerbi.DataViewMetadata = {\r\n            columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n            groups: [],\r\n            measures: [0],\r\n            objects: {\r\n                labels: {\r\n                    color: { solid: { color: \"#222222\" } },\r\n                    labelPrecision: 3,\r\n                    labelDisplayUnits: 1000\r\n                },\r\n                categoryLabels: {\r\n                    show: true,\r\n                    color: { solid: { color: \"#FF0000\" } },\r\n                }\r\n            }\r\n        };\r\n        let cardStyles = Card.DefaultStyle.card;\r\n\r\n        beforeEach(() => {\r\n            cardBuilder = new CardBuilder();\r\n        });\r\n\r\n        it(\"Card_getAdjustedFontHeight with seed font size fitting in available width but equal/larger than MaxFontSize\", () => {\r\n            cardBuilder.setCurrentViewport(500, 500);\r\n\r\n            expect(cardBuilder.card.getAdjustedFontHeight(cardBuilder.card.currentViewport.width, \"t\", cardStyles.maxFontSize)).toBe(cardStyles.maxFontSize);\r\n            expect(cardBuilder.card.getAdjustedFontHeight(cardBuilder.card.currentViewport.width, \"t\", cardStyles.maxFontSize + 5)).toBe(cardStyles.maxFontSize);\r\n        });\r\n\r\n        it(\"Card_getAdjustedFontHeight with seed font size not fitting in available width and smaller than MaxFontSize\", () => {\r\n            cardBuilder.setCurrentViewport(30, 30);\r\n\r\n            expect(cardBuilder.card.getAdjustedFontHeight(cardBuilder.card.currentViewport.width, \"t\", cardStyles.maxFontSize)).toBeLessThan(cardStyles.maxFontSize);\r\n        });\r\n\r\n        it(\"Card_onDataChanged (single value as text)\", () => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = \"7191394482447.7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            cardBuilder.onResizing();\r\n\r\n            expect($(\".card\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n            let titleText = $(\".card\").find(\"title\").text();\r\n            let mainText = $(\".card\").find(\".mainText\").text();\r\n            expect(titleText).toBe(\"7191394482447.7\");\r\n            expect(mainText).toBe(\"7191394482447.7\");\r\n        });\r\n\r\n        it(\"Card_onDataChanged (single value)\", () => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 7191394482447.7;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            cardBuilder.onResizing();\r\n\r\n            expect($(\".card\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n            let titleText = $(\".card\").find(\"title\").text();\r\n            let mainText = $(\".card\").find(\".mainText\").text();\r\n            expect(titleText).toBe(\"7191394482447.7\");\r\n            expect(mainText).toBe(\"7T\");\r\n        });\r\n\r\n        it(\"Card_onDataChanged (single value) with lots of decimals\", () => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 1.742353534535243;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            cardBuilder.onResizing();\r\n\r\n            expect($(\".card\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n            let mainText = $(\".card\").find(\".mainText\").text();\r\n            expect(mainText).toBe(\"2\");\r\n        });\r\n\r\n        it(\"Card_onDataChanged (single value) with lots of decimals and format string\", () => {\r\n            cardBuilder.metadata = dataViewMetadataDecimalFormatString;\r\n            cardBuilder.singleValue = 1.742353534535243;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            cardBuilder.onResizing();\r\n\r\n            expect($(\".card\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n            let mainText = $(\".card\").find(\".mainText\").text();\r\n            expect(mainText).toBe(\"1.74\");\r\n        });\r\n\r\n        it(\"Card_onDataChanged (0)\", () => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 0;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            expect($(\".card\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n            let titleText = $(\".card\").find(\"title\").text();\r\n            expect(titleText).toBe(\"0\");\r\n        });\r\n\r\n        it(\"Card with null dataview\", (done) => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 0;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect(helpers.findElementText($(\".mainText\").first())).toBe(\"0\");\r\n                cardBuilder.singleValue = null;\r\n                cardBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect(helpers.findElementText($(\".mainText\").first())).toBe(\"(Blank)\");\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card updated with undefined dataview\", (done) => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 0;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect(helpers.findElementText($(\".mainText\").first())).toBe(\"0\");\r\n                cardBuilder.singleValue = undefined;\r\n                cardBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect($(\".mainText\").first().text()).toBe(\"\");\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card_onDataChanged formats number < 10000\", (done) => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 85.23498239847123;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            expect($(\".card\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n            SVGUtil.flushAllD3Transitions();\r\n            setTimeout(() => {\r\n                expect($(\".mainText\").text()).toEqual(\"85\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card_onDataChanged verbose display units (explore mode)\", (done) => {\r\n            cardBuilder = new CardBuilder(powerbi.DisplayUnitSystemType.Verbose);\r\n\r\n            let spy = spyOn(powerbi.visuals.valueFormatter, \"create\");\r\n            spy.and.callThrough();\r\n\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 900000;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            expect($(\".card\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n            setTimeout(() => {\r\n                expect(spy.calls.count()).toBe(1);\r\n\r\n                let args = spy.calls.argsFor(0);\r\n                expect(args).toBeDefined();\r\n\r\n                expect(args[0].displayUnitSystemType).toBe(powerbi.DisplayUnitSystemType.Verbose);\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card_onDataChanged whole display units (dashboard tile mode, default)\", (done) => {\r\n            let spy = spyOn(powerbi.visuals.valueFormatter, \"create\");\r\n            spy.and.callThrough();\r\n\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 900000;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            expect($(\".card\")).toBeInDOM();\r\n            expect($(\".mainText\")).toBeInDOM();\r\n            setTimeout(() => {\r\n                expect(spy.calls.count()).toBe(1);\r\n\r\n                let args = spy.calls.argsFor(0);\r\n                expect(args).toBeDefined();\r\n\r\n                expect(args[0].displayUnitSystemType).toBe(powerbi.DisplayUnitSystemType.WholeUnits);\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card with DateTime value on dashboard\", (done) => {\r\n            let dateValue = new Date(2015, 5, 20);\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [\r\n                    { displayName: \"date\", type: powerbi.ValueType.fromDescriptor({ dateTime: true }), isMeasure: true }\r\n                ],\r\n            };\r\n\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = dateValue;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect(helpers.findElementText($(\".mainText\").first())).toBe(\"6/20/2015\");\r\n                let transform = SVGUtil.parseTranslateTransform($(\".mainText\").first().attr(\"transform\"));\r\n                expect(transform.x).toBe(\"150\");\r\n                expect(transform.y).toBe(\"130\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card text alignment\", (done) => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 900000;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            cardBuilder.onResizing(170, 250);\r\n\r\n            setTimeout(() => {\r\n                let transform = SVGUtil.parseTranslateTransform($(\".mainText\").first().attr(\"transform\"));\r\n                expect(transform.x).toBe(\"125\");\r\n                expect($(\".mainText\").first().attr(\"text-anchor\")).toBe(\"middle\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"card label on\", (done) => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    categoryLabels: {\r\n                        show: true\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"7191394482447.7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect($(\".label\")[0]).toBeDefined();\r\n                expect(helpers.findElementText($(\".label\").first())).toBe(\"col1\");\r\n                expect(helpers.findElementTitle($(\".label\").first())).toBe(\"col1\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"card label off\", (done) => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    categoryLabels: {\r\n                        show: false\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"7191394482447.7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect($(\".label\")[0]).toBeUndefined();\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"card caption tooltip \", () => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    categoryLabels: {\r\n                        show: true\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"547.7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n            let cardCaptionTooltip = helpers.findElementTitle($('.value'));\r\n\r\n            expect(cardCaptionTooltip).toBe(cardBuilder.singleValue);\r\n\r\n        });\r\n        it(\"card tooltip caption truncated\", () => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    categoryLabels: {\r\n                        show: true\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"123,547,674,243,545,323,564,112,346,102,135,154.7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n            let cardCaptionTooltip = helpers.findElementTitle($('.value'));\r\n\r\n            expect(cardCaptionTooltip).toBe(cardBuilder.singleValue);\r\n\r\n        });\r\n\r\n        it(\"card tooltip label\", () => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"column1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    categoryLabels: {\r\n                        show: true\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"547.7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n            let cardLabelTooltip = helpers.findElementTitle($('.label'));\r\n\r\n            expect(cardLabelTooltip).toBe('column1');\r\n\r\n        });\r\n        it(\"card tooltip label truncated\", () => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{\r\n                    displayName: \"This is a very long card label for testing\", isMeasure: true, objects: { \"general\": { formatString: \"#\" } }\r\n                }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    categoryLabels: {\r\n                        show: true\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"547\";\r\n\r\n            cardBuilder.onDataChanged();\r\n            let cardLabelTooltip = helpers.findElementTitle($('.label'));\r\n\r\n            expect(cardLabelTooltip).toBe(\"This is a very long card label for testing\");\r\n\r\n        });\r\n\r\n        it(\"change color\", (done) => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            cardBuilder.metadata = dataViewmetadataWithLabelProperties;\r\n            cardBuilder.singleValue = \"7191394482447.7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                helpers.assertColorsMatch($(\".card .value\").css(\"fill\"), \"#222222\");\r\n                helpers.assertColorsMatch($(\".card .label\").css(\"fill\"), \"#FF0000\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"change precision\", (done) => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    labels: {\r\n                        labelPrecision: 3,\r\n                        labelDisplayUnits: 1000\r\n                    },\r\n                    categoryLabels: {\r\n                        show: true\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect(helpers.findElementText($(\".card .value\").first())).toBe(\"0.007K\");\r\n                expect(helpers.findElementTitle($(\".card .value\").first())).toBe(\"0.007K\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"change category font size\", (done) => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let fontSizeMetadata = powerbi.Prototype.inherit(dataViewMetadata);\r\n            fontSizeMetadata.objects = {\r\n                categoryLabels: {\r\n                    fontSize: 16\r\n                },\r\n            };\r\n\r\n            cardBuilder.metadata = fontSizeMetadata;\r\n            cardBuilder.singleValue = \"7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect($(\".card .label\").first().css('font-size')).toBe('21px');\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"change value font size\", (done) => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let fontSizeMetadata = powerbi.Prototype.inherit(dataViewMetadata);\r\n            fontSizeMetadata.objects = {\r\n                labels: {\r\n                    fontSize: 14\r\n                },\r\n            };\r\n\r\n            cardBuilder.metadata = fontSizeMetadata;\r\n            cardBuilder.singleValue = \"7\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect($(\".card .value\").first().css('font-size')).toBe('19px');\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"change display unit\", (done) => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadataWithDisplayUnits: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    labels: {\r\n                        labelDisplayUnits: 1000\r\n                    },\r\n                    categoryLabels: {\r\n                        show: true\r\n                    }\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadataWithDisplayUnits;\r\n            cardBuilder.singleValue = \"9999\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect(helpers.findElementText($(\".card .value\").first())).toBe(\"10K\");\r\n                expect(helpers.findElementTitle($(\".card .value\").first())).toBe(\"10K\");\r\n                \r\n                //display unit auto\r\n                cardBuilder.metadata = dataViewMetadata;\r\n\r\n                cardBuilder.onDataChanged();\r\n\r\n                expect(helpers.findElementText($(\".card .value\").first())).toBe(\"9999\");\r\n                expect(helpers.findElementTitle($(\".card .value\").first())).toBe(\"9999\");\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it('change word wrapping', (done) => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{\r\n                    displayName: 'very very very very long category label',\r\n                    isMeasure: true,\r\n                    objects: { 'general': { formatString: '#0' } }\r\n                }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    labels: {\r\n                        show: true\r\n                    },\r\n                    wordWrap: {\r\n                        show: false\r\n                    },\r\n                }\r\n            };\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"7\";\r\n            cardBuilder.onDataChanged();\r\n\r\n            cardBuilder.onResizing(1000, 200);\r\n\r\n            setTimeout(() => {    \r\n                // No word wrapping, category label should be cut\r\n                expect($('.card .label')[0].textContent).toContain('…');\r\n                expect($('.card .label tspan').length).toBe(0);\r\n\r\n                metadata.objects = {\r\n                    labels: {\r\n                        show: true\r\n                    },\r\n                    wordWrap: {\r\n                        show: true\r\n                    },\r\n                };\r\n\r\n                cardBuilder.metadata = metadata;\r\n                cardBuilder.onDataChanged();\r\n\r\n                // Word wrapping is on, category label should be visible is several lines\r\n                let tspans = $('.card .label tspan');\r\n                \r\n                // To prevent this test from being fragile, we will only assert that there is more than 1\r\n                // tspan being created so the category label is split across several lines. \r\n                expect(tspans.length).toBeGreaterThan(1);\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it('card label off with word wrapping does not call wordBreak', () => {\r\n            cardBuilder = new CardBuilder(null, true);\r\n\r\n            let metadata: powerbi.DataViewMetadata = {\r\n                columns: [{\r\n                    displayName: 'very very very very long category label',\r\n                    isMeasure: true,\r\n                    objects: { 'general': { formatString: '#0' } }\r\n                }],\r\n                groups: [],\r\n                measures: [0],\r\n                objects: {\r\n                    labels: {\r\n                        show: true\r\n                    },\r\n                    categoryLabels: {\r\n                        show: false\r\n                    },\r\n                    wordWrap: {\r\n                        show: true\r\n                    },\r\n                }\r\n            };\r\n\r\n            let spy = spyOn(powerbi.TextMeasurementService, 'wordBreak');\r\n            spy.and.callThrough();\r\n\r\n            cardBuilder.metadata = metadata;\r\n            cardBuilder.singleValue = \"7\";\r\n            cardBuilder.onDataChanged();\r\n\r\n            expect(spy.calls.count()).toBe(0);\r\n        });\r\n    });\r\n\r\n    describe(\"Card tests on Minerva\", () => {\r\n        let cardBuilder: CardBuilder;\r\n\r\n        let dataViewMetadata: powerbi.DataViewMetadata = {\r\n            columns: [{ displayName: \"col1\", isMeasure: true, objects: { \"general\": { formatString: \"#0\" } } }],\r\n            groups: [],\r\n            measures: [0],\r\n        };\r\n\r\n        let labelStyles = Card.DefaultStyle.label;\r\n        let valueStyles = Card.DefaultStyle.value;\r\n\r\n        beforeEach(() => {\r\n            cardBuilder = new CardBuilder(undefined, undefined, \"200\", \"200\", true);\r\n\r\n            cardBuilder.metadata = dataViewMetadata;\r\n        });\r\n\r\n        it(\"Card on Canvas DOM validation\", (done) => {\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 90;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect($(\".card\")).toBeInDOM();\r\n                expect($(\".label\")).toBeInDOM();\r\n                expect($(\".value\")).toBeInDOM();\r\n                expect($(\".label\").length).toBe(1);\r\n                expect($(\".value\").length).toBe(1);\r\n\r\n                expect(helpers.findElementText($(\".label\").first())).toBe(\"col1\");\r\n                expect(helpers.findElementTitle($(\".label\").first())).toBe(\"col1\");\r\n\r\n                expect(helpers.findElementText($(\".value\").first())).toBe(\"90\");\r\n                expect(helpers.findElementTitle($(\".value\").first())).toBe(\"90\");\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card on Canvas Style validation\", (done) => {\r\n            cardBuilder.singleValue = 900000;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect($(\".label\")).toBeInDOM();\r\n                expect($(\".value\")).toBeInDOM();\r\n                expect(parseInt($(\".label\")[0].style.fontSize, 10)).toBe(labelStyles.textSize * 4 / 3);\r\n                expect(parseInt($(\".value\")[0].style.fontSize, 10)).toBe(valueStyles.textSize * 4 / 3);\r\n                expect($(\".label\")[0].style.fill).toBe(labelStyles.color);\r\n                expect($(\".value\")[0].style.fill).toBe(valueStyles.color);\r\n                expect($(\".value\")[0].style.fontFamily).toBe(valueStyles.fontFamily);\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card with DateTime value on canvas\", (done) => {\r\n            let dateValue = new Date(2015, 5, 20);\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [\r\n                    { displayName: \"date\", type: powerbi.ValueType.fromDescriptor({ dateTime: true }), isMeasure: true }\r\n                ],\r\n            };\r\n\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = dateValue;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n\r\n                expect(helpers.findElementText($(\".label\").first())).toBe(\"date\");\r\n                expect(helpers.findElementText($(\".value\").first())).toBe(\"6/20/2015\");\r\n\r\n                expect(helpers.findElementTitle($(\".label\").first())).toBe(\"date\");\r\n                expect(helpers.findElementTitle($(\".value\").first())).toBe(\"6/20/2015\");\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card with KPI value on canvas\", (done) => {\r\n            cardBuilder.metadata = {\r\n                columns: [\r\n                    {\r\n                        displayName: 'kpi name',\r\n                        format: 'g',\r\n                        kpi: {\r\n                            graphic: 'Five Bars Colored'\r\n                        },\r\n                        isMeasure: true\r\n                    }\r\n                ]\r\n            };\r\n            cardBuilder.singleValue = 2;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect($(\".g text\").length).toBe(0);\r\n                let kpi = $(\".caption .powervisuals-glyph\");\r\n                expect(kpi.length).toBe(1);\r\n                expect(kpi.get(0).classList).toContain('big-kpi');\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card with zero currency value\", (done) => {\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [\r\n                    { displayName: \"price\", type: powerbi.ValueType.fromDescriptor({ numeric: true }), isMeasure: true, objects: { \"general\": { formatString: \"$0\" } } }\r\n                ],\r\n            };\r\n\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = 0;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n\r\n                expect(helpers.findElementText($(\".label\").first())).toBe(\"price\");\r\n                expect(helpers.findElementText($(\".value\").first())).toBe(\"$0\");\r\n\r\n                expect(helpers.findElementTitle($(\".label\").first())).toBe(\"price\");\r\n                expect(helpers.findElementTitle($(\".value\").first())).toBe(\"$0\");\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card with null dataview\", (done) => {\r\n            cardBuilder.singleValue = 900;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect(helpers.findElementText($(\".value\").first())).toBe(\"900\");\r\n                expect(helpers.findElementText($(\".label\").first())).toBe(\"col1\");\r\n\r\n                expect(helpers.findElementTitle($(\".value\").first())).toBe(\"900\");\r\n                expect(helpers.findElementTitle($(\".label\").first())).toBe(\"col1\");\r\n\r\n                cardBuilder.singleValue = null;\r\n                cardBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect(helpers.findElementText($(\".value\").first())).toBe(\"(Blank)\");\r\n                    expect(helpers.findElementText($(\".label\").first())).toBe(\"col1\");\r\n\r\n                    expect(helpers.findElementTitle($(\".value\").first())).toBe(\"(Blank)\");\r\n                    expect(helpers.findElementTitle($(\".label\").first())).toBe(\"col1\");\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"Card updated with undefined dataview\", (done) => {\r\n            cardBuilder.singleValue = 0;\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                expect(helpers.findElementText($(\".value\").first())).toBe(\"0\");\r\n                expect(helpers.findElementText($(\".label\").first())).toBe(\"col1\");\r\n\r\n                expect(helpers.findElementTitle($(\".value\").first())).toBe(\"0\");\r\n                expect(helpers.findElementTitle($(\".label\").first())).toBe(\"col1\");\r\n\r\n                cardBuilder.singleValue = undefined;\r\n                cardBuilder.onDataChanged();\r\n\r\n                setTimeout(() => {\r\n                    expect($(\".value\").first().text()).toBe(\"\");\r\n                    expect($(\".label\").first().text()).toBe(\"\");\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n        it(\"card with longer label and value\", (done) => {\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [{ displayName: \"this is the value that never ends, it just goes on and on my friends. Some axis started rendering it not knowing what it was, and now it keeps on rendering forever just because this the label that never ends\", isMeasure: true, format: \"#0\" }],\r\n                groups: [],\r\n                measures: [0],\r\n            };\r\n\r\n            cardBuilder.metadata = dataViewMetadata;\r\n            cardBuilder.singleValue = \"99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\";\r\n\r\n            cardBuilder.onDataChanged();\r\n\r\n            setTimeout(() => {\r\n                \r\n                // Note: the exact text will be different depending on the environment in which the test is run, so we can\"t do an exact match.\r\n                // Just check that the text is truncated with ellipses.\r\n                let labelText = helpers.findElementText($(\".label\").first());\r\n                let valueText = helpers.findElementText($(\".value\").first());\r\n\r\n                let labelTitle = helpers.findElementTitle($(\".label\").first());\r\n                let valueTitle = helpers.findElementTitle($(\".value\").first());\r\n\r\n                expect(labelText.length).toBeLessThan(60);\r\n                expect(valueText.length).toBeLessThan(30);\r\n                expect(valueText.substr(valueText.length - 1)).toBe('…');\r\n                expect(labelText.substr(labelText.length - 1)).toBe('…');\r\n                expect(labelTitle).toBe(dataViewMetadata.columns[0].displayName);\r\n                expect(valueTitle).toBe(cardBuilder.singleValue);\r\n\r\n                done();\r\n            }, DefaultWaitForRender);\r\n        });\r\n\r\n    });\r\n\r\n    class CardBuilder {\r\n        private element: JQuery;\r\n\r\n        private isScrollable: boolean = false;\r\n\r\n        private displayUnitSystemType: powerbi.DisplayUnitSystemType;\r\n\r\n        private host: powerbi.IVisualHostServices;\r\n\r\n        private style: powerbi.IVisualStyle;\r\n\r\n        private isMinervaVisualPlugin: boolean = false;\r\n\r\n        private cardVisual: Card;\r\n\r\n        public get card(): Card {\r\n            return this.cardVisual;\r\n        }\r\n\r\n        public metadata: powerbi.DataViewMetadata;\r\n\r\n        public singleValue: any;\r\n\r\n        constructor(\r\n            displayUnitSystemType?: powerbi.DisplayUnitSystemType,\r\n            isScrollable?: boolean,\r\n            height: string = \"200\",\r\n            width: string = \"300\",\r\n            isMinervaVisualPlugin: boolean = false) {\r\n\r\n            this.isScrollable = isScrollable;\r\n            this.displayUnitSystemType = displayUnitSystemType;\r\n            this.isMinervaVisualPlugin = isMinervaVisualPlugin;\r\n\r\n            this.element = powerbitests.helpers.testDom(height, width);\r\n            this.host = mocks.createVisualHostServices();\r\n            this.style = powerbi.visuals.visualStyles.create();\r\n\r\n            this.buildCard();\r\n\r\n            this.cardInit();\r\n        }\r\n\r\n        private buildCard(): void {\r\n            if (this.isMinervaVisualPlugin) {\r\n                this.buildMinervaCard();\r\n            } else {\r\n                this.buildPlainCard();\r\n            }\r\n        }\r\n\r\n        private buildMinervaCard(): void {\r\n            this.cardVisual =\r\n            <Card>powerbi.visuals.visualPluginFactory.createMinerva({}).getPlugin(\"card\").create();\r\n        }\r\n\r\n        private buildPlainCard(): void {\r\n            this.cardVisual = <Card>new Card({\r\n                displayUnitSystemType: this.displayUnitSystemType,\r\n                isScrollable: this.isScrollable\r\n            });\r\n        }\r\n\r\n        private cardInit(): void {\r\n            this.card.init({\r\n                element: this.element,\r\n                host: this.host,\r\n                style: this.style,\r\n                viewport: {\r\n                    height: this.element.height(),\r\n                    width: this.element.width()\r\n                },\r\n                animation: { transitionImmediate: true },\r\n                isScrollable: this.isScrollable,\r\n                settings: {\r\n                    DisplayUnitSystemType: this.displayUnitSystemType\r\n                }\r\n            });\r\n        }\r\n\r\n        public setCurrentViewport(height: number, width: number): void {\r\n            this.card.currentViewport = {\r\n                height: height,\r\n                width: width\r\n            };\r\n        }\r\n\r\n        public onDataChanged(): void {\r\n            this.card.onDataChanged({\r\n                dataViews: [{\r\n                    metadata: this.metadata,\r\n                    single: {\r\n                        value: this.singleValue\r\n                    }\r\n                }]\r\n            });\r\n        }\r\n\r\n        public onResizing(\r\n            height: number = this.element.height(),\r\n            width: number = this.element.width()): void {\r\n            this.card.onResizing({\r\n                height: height,\r\n                width: width\r\n            });\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}