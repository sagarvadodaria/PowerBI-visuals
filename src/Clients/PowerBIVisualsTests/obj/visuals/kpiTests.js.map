{"version":3,"sources":["visuals/kpiTests.ts"],"names":["powerbitests","powerbitests.buildUpdateOptions"],"mappings":"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","file":"visuals/kpiTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import KPIStatusWithHistory = powerbi.visuals.KPIStatusWithHistory;\r\n    import kpiCapabilities = powerbi.visuals.KPIStatusWithHistoryCapabilities;\r\n    import IVisualHostServices = powerbi.IVisualHostServices;\r\n\r\n    describe(\"Kpi\", () => {\r\n        const viewport: powerbi.IViewport = {\r\n            height: 500,\r\n            width: 500\r\n        };\r\n        let style = powerbi.visuals.visualStyles.create();\r\n\r\n        describe(\"capabilities\", () => {\r\n\r\n            it(\"should register capabilities\", () => {\r\n                let plugin = powerbi.visuals.visualPluginFactory.create().getPlugin(\"kpi\");\r\n\r\n                expect(plugin).toBeDefined();\r\n                expect(plugin.capabilities).toBe(kpiCapabilities);\r\n            });\r\n        });\r\n\r\n        // ---- Sample data ----\r\n\r\n        function buildUpdateOptions(viewport: powerbi.IViewport, object: powerbi.DataView): powerbi.VisualUpdateOptions {\r\n            return {\r\n                viewport: viewport,\r\n                dataViews: [object],\r\n            };\r\n        };\r\n\r\n        describe(\"\", () => {\r\n            let host: IVisualHostServices;\r\n            let $element: JQuery;\r\n            let initOptions: powerbi.VisualInitOptions;\r\n            let kpi: KPIStatusWithHistory;\r\n\r\n            beforeEach(() => {\r\n                host = mocks.createVisualHostServices();\r\n                $element = helpers.testDom(\"500\", \"500\");\r\n\r\n                initOptions = {\r\n                    element: $element,\r\n                    host: host,\r\n                    viewport: viewport,\r\n                    style: style\r\n                };\r\n\r\n                kpi = new KPIStatusWithHistory();\r\n                kpi.init(initOptions);\r\n            });\r\n\r\n            describe(\"update\", () => {\r\n                it(\"show green trend\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForGreenTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    helpers.assertColorsMatch(area.css('fill'), \"#3bb44a\");\r\n\r\n                    let text = $element.find('#indicatorText');\r\n\r\n                    helpers.assertColorsMatch(text.css('color'), \"#3bb44a\");\r\n                    expect(text.text()).toBe(\"25.00\");\r\n                });\r\n\r\n                it(\"show red trend\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForRedTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    helpers.assertColorsMatch(area.css('fill'), \"#E81123\");\r\n\r\n                    let text = $element.find('#indicatorText');\r\n\r\n                    helpers.assertColorsMatch(text.css('color'), \"#E81123\");\r\n                });\r\n\r\n                it(\"show gray trend when no goal defined\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForNoGoalTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    helpers.assertColorsMatch(area.css('fill'), \"#5F6B6D\");\r\n\r\n                    let text = $element.find('#indicatorText');\r\n                    helpers.assertColorsMatch(text.css('color'), \"#212121\");\r\n                });\r\n\r\n                it(\"show gray trend when no goal defined after mix of changes\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForGreenTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForRedTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForNoGoalTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    helpers.assertColorsMatch(area.css('fill'), \"#5F6B6D\");\r\n\r\n                    let text = $element.find('#indicatorText');\r\n                    helpers.assertColorsMatch(text.css('color'), \"#212121\");\r\n                    expect(text.text()).toBe(\"12.00\");\r\n                });\r\n\r\n                it(\"show green trend after mix of changes\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForRedNoTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForNoGoalTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForGreenTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    helpers.assertColorsMatch(area.css('fill'), \"#3bb44a\");\r\n\r\n                    let text = $element.find('#indicatorText');\r\n                    helpers.assertColorsMatch(text.css('color'), \"#3bb44a\");\r\n                    expect(text.text()).toBe(\"25.00\");\r\n                });\r\n\r\n                it(\"Visual is empty if indicator is missing\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewWithMissingIndicator());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    expect(area.css('visibility')).toBe(\"hidden\");\r\n\r\n                    let svg = $element.find('svg');\r\n                    expect(svg.css('visibility')).toBe(\"hidden\");\r\n                });\r\n\r\n                it(\"Visual is empty if indicator is missing WITH GOAL\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewWithMissingIndicatorWITHGoal());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    expect(area.css('visibility')).toBe(\"hidden\");\r\n\r\n                    let svg = $element.find('svg');\r\n                    expect(svg.css('visibility')).toBe(\"hidden\");\r\n                });\r\n\r\n                it(\"Visual is empty if trendline is missing\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewWithMissingTrendline());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    expect(area.css('visibility')).toBe(\"hidden\");\r\n\r\n                    let svg = $element.find('svg');\r\n                    expect(svg.css('visibility')).toBe(\"hidden\");\r\n                });\r\n\r\n                it(\"Visual is empty if trendline is missing WITH GOAL\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewWithMissingTrendlineWITHGoal());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    expect(area.css('visibility')).toBe(\"hidden\");\r\n\r\n                    let svg = $element.find('svg');\r\n                    expect(svg.css('visibility')).toBe(\"hidden\");\r\n                });\r\n\r\n                it(\"Visual is empty if trendline and indicator are missing\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewWithMissingTrendlineAndIndicator());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    expect(area.css('visibility')).toBe(\"hidden\");\r\n\r\n                    let svg = $element.find('svg');\r\n                    expect(svg.css('visibility')).toBe(\"hidden\");\r\n                });\r\n\r\n                it(\"Visual is empty if trendline and indicator are missing BUT there are goals\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewWithMissingTrendlineAndIndicatorBUTWithGoals());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    expect(area.css('visibility')).toBe(\"hidden\");\r\n\r\n                    let svg = $element.find('svg');\r\n                    expect(svg.css('visibility')).toBe(\"hidden\");\r\n                });\r\n\r\n                it(\"Visual shows yellow trend if between 2 goals\", () => {\r\n                    let visualUpdateOptions = buildUpdateOptions(viewport, kpiHelper.buildDataViewForYellowTrend());\r\n                    kpi.update(visualUpdateOptions);\r\n\r\n                    let area = $element.find('path');\r\n                    helpers.assertColorsMatch(area.css('fill'), \"#F2C811\");\r\n\r\n                    let text = $element.find('#indicatorText');\r\n\r\n                    helpers.assertColorsMatch(text.css('color'), \"#F2C811\");\r\n                    expect(text.text()).toBe(\"12.00\");\r\n                });\r\n            });\r\n        });\r\n    });\r\n}\r\n        "],"sourceRoot":"/source/"}