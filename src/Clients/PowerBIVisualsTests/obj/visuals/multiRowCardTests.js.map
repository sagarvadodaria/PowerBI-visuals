{"version":3,"sources":["visuals/multiRowCardTests.ts"],"names":["powerbitests","powerbitests.getVisualInitOptions","powerbitests.fireOnDataChanged"],"mappings":"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gBAC1CA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA;oBAE5CA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC/BA,MAAMA,CAACA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA,GAAGA,CAACA,SAASA,EAAEA,CAACA;oBAC1CA,MAAMA,CAACA,CAACA,CAACA,0BAA0BA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAClDA,MAAMA,CAACA,CAACA,CAACA,mCAAmCA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC3DA,MAAMA,CAACA,CAACA,CAACA,mCAAmCA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAE3DA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClCA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,CAACA,iBAAiBA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChDA,MAAMA,CAACA,CAACA,CAACA,oBAAoBA,CAACA,CAACA,CAACA,CAACA,CAACA,iBAAiBA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAE7DA,MAAMA,CAACA,CAACA,CAACA,UAAUA,CAACA,CAACA,IAAIA,EAAEA,CAACA,IAAIA,EAAEA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;oBACtDA,MAAMA,CAACA,CAACA,CAACA,UAAUA,CAACA,CAACA,IAAIA,EAAEA,CAACA,IAAIA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA;gBACzDA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,GAAGA,CAACA,sCAAsCA,EAAEA;gBACxCA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,aAAaA,CAACA,EAAEA,CAACA,CAACA;oBAErDA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC/BA,MAAMA,CAACA,CAACA,CAACA,0BAA0BA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAClDA,MAAMA,CAACA,CAACA,CAACA,mCAAmCA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC3DA,MAAMA,CAACA,CAACA,CAACA,mCAAmCA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC3DA,MAAMA,CAACA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAEtCA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClCA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA,CAACA,iBAAiBA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAChDA,MAAMA,CAACA,CAACA,CAACA,oBAAoBA,CAACA,CAACA,CAACA,CAACA,CAACA,iBAAiBA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAE7DA,sCAAsCA;oBACtCA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,IAAIA,EAAEA,CAACA,MAAMA,EAAEA,CAACA,CAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA;oBAC7CA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,IAAIA,EAAEA,CAACA,IAAIA,EAAEA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;oBACpDA,MAAMA,CAACA,CAACA,CAACA,UAAUA,CAACA,CAACA,IAAIA,EAAEA,CAACA,IAAIA,EAAEA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;oBACtDA,MAAMA,CAACA,CAACA,CAACA,UAAUA,CAACA,CAACA,IAAIA,EAAEA,CAACA,IAAIA,EAAEA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;oBAClDA,MAAMA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,IAAIA,EAAEA,CAACA,GAAGA,CAACA,WAAWA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;oBACzDA,oBAAOA,CAACA,iBAAiBA,CAACA,CAACA,CAACA,QAAQA,CAACA,CAACA,IAAIA,EAAEA,CAACA,GAAGA,CAACA,OAAOA,CAACA,EAAEA,SAASA,CAACA,CAACA;gBAC1EA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,yCAAyCA,EAAEA;gBAC1CA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,aAAaA,CAACA,EAAEA,CAACA,CAACA;oBAErDA,MAAMA,CAACA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;oBAClDA,MAAMA,CAACA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;gBACzDA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,2CAA2CA,EAAEA;gBAC5CA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,aAAaA,CAACA,EAAEA,CAACA,CAACA;oBAErDA,MAAMA,CAACA,CAACA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,YAAYA,CAACA,CAACA;oBACxDA,MAAMA,CAACA,CAACA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;gBAC3DA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,2CAA2CA,EAAEA;gBAC5CA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,aAAaA,CAACA,EAAEA,CAACA,CAACA;oBAErDA,MAAMA,CAACA,CAACA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;oBACnDA,MAAMA,CAACA,CAACA,CAACA,gBAAgBA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;gBACvDA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,mDAAmDA,EAAEA;gBACpDA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,CAACA;oBAEzDA,MAAMA,CAACA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,2CAA2CA,CAACA,CAACA;oBACrFA,MAAMA,CAACA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,yCAAyCA,CAACA,CAACA;gBACvFA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,qDAAqDA,EAAEA;gBACtDA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,CAACA;oBAEzDA,MAAMA,CAACA,CAACA,CAACA,gBAAgBA,CAACA,CAACA,CA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AASA,EAAEA,CAACA,gCAAmBA,CAACA,kBAAkBA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA,EAAEA,CAACA,CAACA;oBAErFA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC/BA,MAAMA,CAACA,CAACA,CAACA,0BAA0BA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAElDA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClCA,MAAMA,CAACA,CAACA,CAACA,uBAAuBA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClDA,MAAMA,CAACA,CAACA,CAACA,uBAAuBA,CAACA,CAACA,IAAIA,EAAEA,CAACA,CAACA,GAAGA,CAACA,OAAOA,CAACA,EAAEA,CAACA,CAACA;gBAC9DA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,GAAGA,CAACA,qDAAqDA,EAAEA;gBACvDA,IAAIA,OAAOA,GAAGA,oBAAoBA,CAACA,oBAAOA,CAACA,OAAOA,CAACA,KAAKA,EAAEA,KAAKA,CAACA,CAACA,CAACA;gBAElEA,OAAOA,CAACA,aAAaA,GAAGA,EAAEA,QAAQA,EAAEA,QAAQA,EAAEA,CAACA;gBAC/CA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;gBAEhBA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,gCAAmBA,CAACA,kBAAkBA,CAACA,EAAEA,EAAEA,EAAEA,CAACA,CAACA,EAAEA,CAACA,CAACA;oBAEtFA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC/BA,MAAMA,CAACA,CAACA,CAACA,0BAA0BA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAElDA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClCA,MAAMA,CAACA,CAACA,CAACA,uBAAuBA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACtDA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,GAAGA,CAACA,sDAAsDA,EAAEA;gBACxDA,IAAIA,OAAOA,GAAGA,oBAAoBA,CAACA,oBAAOA,CAACA,OAAOA,CAACA,KAAKA,EAAEA,KAAKA,CAACA,CAACA,CAACA;gBAElEA,OAAOA,CAACA,aAAaA,GAAGA,EAAEA,QAAQA,EAAEA,QAAQA,EAAEA,CAACA;gBAC/CA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;gBAEhBA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,gCAAmBA,CAACA,kBAAkBA,CAACA,EAAEA,EAAEA,EAAEA,CAACA,CAACA,EAAEA,CAACA,CAACA;oBAEtFA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC/BA,MAAMA,CAACA,CAACA,CAACA,0BAA0BA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAElDA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClCA,MAAMA,CAACA,CAACA,CAACA,uBAAuBA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBACtDA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,qDAAqDA,EAAEA;gBACtDA,IAAIA,OAAOA,GAAGA,oBAAoBA,CAACA,oBAAOA,CAACA,OAAOA,CAACA,KAAKA,EAAEA,KAAKA,CAACA,CAACA,CAACA;gBAElEA,OAAOA,CAACA,aAAaA,GAAGA,EAAEA,QAAQA,EAAEA,QAAQA,EAAEA,CAACA;gBAC/CA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA;gBAEhBA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,gCAAmBA,CAACA,kBAAkBA,CAACA,EAAEA,EAAEA,EAAEA,CAACA,CAACA,EAAEA,CAACA,CAACA;oBAEtFA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC/BA,MAAMA,CAACA,CAACA,CAACA,0BAA0BA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAElDA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,MAAMA,CAACA,CAACA,eAAeA,CAACA,CAACA,CAACA,CAACA;oBAC7CA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,MAAMA,CAACA,CAACA,YAAYA,CAACA,EAAEA,CAACA,CAACA;oBAC3CA,MAAMA,CAACA,CAACA,CAACA,uBAAuBA,CAACA,CAACA,MAAMA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAEtDA,CAACA,CAACA,CAACA;YACPA,CAACA,CAACA,CAACA;YAEHA,EAAEA,CAACA,8DAA8DA,EAAEA;gBAC/DA,CAACA,CAACA,IAAIA,CAACA,oBAAoBA,CAACA,OAAOA,GAAGA,oBAAOA,CAACA,OAAOA,CAACA,KAAKA,EAAEA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBAEtEA,oBAAOA,CAACA,+BAA+BA,CAACA;oBACpCA,iBAAiBA,CAACA,CAACA,EAAEA,EAAEA,SAASA,EAAEA,CAACA,gCAAmBA,CAACA,kBAAkBA,CAACA,EAAEA,EAAEA,EAAEA,CAACA,CAACA,EAAEA,CAACA,CAACA;oBAEtFA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,SAASA,EAAEA,CAACA;oBAC/BA,MAAMA,CAACA,CAACA,CAACA,0BAA0BA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","file":"visuals/multiRowCardTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import MultiRowCard = powerbi.visuals.MultiRowCard;\r\n    import multiRowCardCapabilities = powerbi.visuals.multiRowCardCapabilities;\r\n    import ValueType = powerbi.ValueType;\r\n    import PrimitiveType = powerbi.PrimitiveType;\r\n\r\n    describe(\"MultiRowCard\", () => {\r\n        let dataTypeWebUrl = ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.Text, \"WebUrl\");\r\n\r\n        let dataViewMetadata: powerbi.DataViewMetadata = {\r\n            columns: [\r\n                { displayName: \"value\", type: ValueType.fromDescriptor({ numeric: true }) },\r\n                { displayName: \"date\", type: ValueType.fromDescriptor({ dateTime: true }) },\r\n                { displayName: \"category\", type: ValueType.fromDescriptor({ text: true }) }\r\n            ]\r\n        };\r\n\r\n        let dataViewMetadataWithURL: powerbi.DataViewMetadata = {\r\n            columns: [\r\n                { displayName: \"category\", type: ValueType.fromDescriptor({ text: true }) },\r\n                { displayName: \"URL\", type: dataTypeWebUrl }\r\n            ]\r\n        };\r\n\r\n        let dataViewMetadataWithURLTitle: powerbi.DataViewMetadata = {\r\n            columns: [\r\n                { displayName: \"value\", type: ValueType.fromDescriptor({ numeric: true }) },\r\n                { displayName: \"URL\", type: dataTypeWebUrl }\r\n            ]\r\n        };\r\n\r\n        let dataViewMetadataWithKPI: powerbi.DataViewMetadata = {\r\n            columns: [\r\n                {\r\n                    displayName: \"KPI\",\r\n                    kpi: {\r\n                        graphic: 'Five Bars Colored'\r\n                    },\r\n                    type: ValueType.fromDescriptor({ numeric: true })\r\n                },\r\n                { displayName: \"value\", type: ValueType.fromDescriptor({ text: true }) }\r\n            ]\r\n        };\r\n\r\n        let data: powerbi.DataView = {\r\n            metadata: dataViewMetadata,\r\n            table: {\r\n                rows: [\r\n                    [123456.789, new Date(1999, 7, 31, 6, 15), \"category1\"],\r\n                    [12345, new Date(2014, 7, 1), \"category2\"]\r\n                ],\r\n                columns: dataViewMetadata.columns\r\n            }\r\n        };\r\n\r\n        let dataViewMetadataWithTitle: powerbi.DataViewMetadata = {\r\n            columns: [\r\n                { displayName: \"value\", type: ValueType.fromDescriptor({ numeric: true }), isMeasure: true },\r\n                { displayName: \"genre\", type: ValueType.fromDescriptor({ text: true }) }\r\n            ]\r\n        };\r\n\r\n        let dataViewMetadataWithTitleAndLongColumn: powerbi.DataViewMetadata = {\r\n            columns: [\r\n                { displayName: \"very long long long long column name\", type: ValueType.fromDescriptor({ numeric: true }), isMeasure: true },\r\n                { displayName: \"another very long long long long column name\", type: ValueType.fromDescriptor({ text: true }) }\r\n            ]\r\n        };\r\n\r\n        let dataWithTitle: powerbi.DataView = {\r\n            metadata: dataViewMetadataWithTitle,\r\n            table: {\r\n                rows: [\r\n                    [123456.789, \"Action\"],\r\n                    [12345, \"Adventure\"]\r\n                ],\r\n                columns: dataViewMetadataWithTitle.columns\r\n            }\r\n        };\r\n\r\n        let longDataWithTitle: powerbi.DataView = {\r\n            metadata: dataViewMetadataWithTitleAndLongColumn,\r\n            table: {\r\n                rows: [\r\n                    [123454783545456, \"Action Action Action Action Action Action\", \"very long label text of card\"],\r\n                    [143432434632345, \"Adventure Adventure Adventure Adventure\", \"another very long label text of card\"]\r\n                ],\r\n                columns: dataViewMetadataWithTitleAndLongColumn.columns\r\n            }\r\n        };\r\n\r\n        let dataWithNullValue: powerbi.DataView = {\r\n            metadata: dataViewMetadataWithTitle,\r\n            table: {\r\n                rows: [\r\n                    [null, \"Action\"],\r\n                    [null, \"Adventure\"]\r\n                ],\r\n                columns: dataViewMetadataWithTitle.columns\r\n            }\r\n        };\r\n\r\n        let dataWithURLTitle: powerbi.DataView = {\r\n            metadata: dataViewMetadataWithURLTitle,\r\n            table: {\r\n                rows: [\r\n                    [123456.789, \"http://bing.com\"],\r\n                    [12345, \"http://microsoft.com\"]\r\n                ],\r\n                columns: dataViewMetadataWithURLTitle.columns\r\n            }\r\n        };\r\n\r\n        let dataWithKPI: powerbi.DataView = {\r\n            metadata: dataViewMetadataWithKPI,\r\n            table: {\r\n                rows: [\r\n                    [1, \"test1\"],\r\n                    [2, \"test2\"]\r\n                ],\r\n                columns: dataViewMetadataWithKPI.columns\r\n            }\r\n        };\r\n\r\n        let dataWithURLValues: powerbi.DataView = {\r\n            metadata: dataViewMetadataWithURL,\r\n            table: {\r\n                rows: [\r\n                    [\"category1\", \"http://bing.com\"],\r\n                    [\"category2\", \"http://microsoft.com\"]\r\n                ],\r\n                columns: dataViewMetadataWithURL.columns\r\n            }\r\n        };\r\n\r\n        let dataViewPlainNumericMetadata: powerbi.DataViewMetadata = {\r\n            columns: [\r\n                { displayName: \"value\", type: ValueType.fromDescriptor({ numeric: true }) }\r\n            ]\r\n        };\r\n\r\n        let singleRowdata: powerbi.DataView = {\r\n            metadata: dataViewPlainNumericMetadata,\r\n            table: {\r\n                rows: [\r\n                    [123456.789]\r\n                ],\r\n                columns: dataViewPlainNumericMetadata.columns\r\n            }\r\n        };\r\n\r\n        let simpleDataView: powerbi.DataView = {\r\n            metadata: { columns: [], segment: {} },\r\n            table: {\r\n                rows: [[1]],\r\n                columns: []\r\n            }\r\n        };\r\n\r\n        beforeEach(() => {\r\n            jasmine.clock().install();\r\n        });\r\n\r\n        afterEach(() => {\r\n            jasmine.clock().uninstall();\r\n        });\r\n\r\n        it(\"MultiRowCard_registered_capabilities\", () => {\r\n            expect(powerbi.visuals.visualPluginFactory.create().getPlugin(\"multiRowCard\").capabilities).toBe(multiRowCardCapabilities);\r\n        });\r\n\r\n        it(\"Capabilities should include dataViewMappings\", () => {\r\n            expect(multiRowCardCapabilities.dataViewMappings).toBeDefined();\r\n        });\r\n\r\n        it(\"Capabilities should include dataRoles\", () => {\r\n            expect(multiRowCardCapabilities.dataRoles).toBeDefined();\r\n        });\r\n\r\n        it(\"Capabilities should suppressDefaultTitle\", () => {\r\n            expect(multiRowCardCapabilities.suppressDefaultTitle).toBe(true);\r\n        });\r\n\r\n        it(\"FormatString property should match calculated\", () => {\r\n            expect(powerbi.data.DataViewObjectDescriptors.findFormatString(multiRowCardCapabilities.objects)).toEqual(MultiRowCard.formatStringProp);\r\n        });\r\n\r\n        describe('enumerateObjectInstances', () => {\r\n            let visual: MultiRowCard;\r\n\r\n            let defaultLabelSettings = powerbi.visuals.dataLabelUtils.getDefaultLabelSettings(true, \"#767676\", 13);\r\n\r\n            beforeEach(() => {\r\n                let element = helpers.testDom(\"200\", \"300\")\r\n                visual = <MultiRowCard>powerbi.visuals.visualPluginFactory.create().getPlugin(\"multiRowCard\").create();\r\n                visual.init(getVisualInitOptions(element));\r\n            })\r\n\r\n            it('after no dataview should return default values', () => {\r\n                // We guarantee onDataChanged, but not with a valid data view.\r\n                fireOnDataChanged(visual, { dataViews: [] });\r\n\r\n                expect(visual.enumerateObjectInstances({ objectName: \"general\" })).toBeUndefined();\r\n\r\n                expect(visual.enumerateObjectInstances({ objectName: \"cardTitle\" })).toBeUndefined();\r\n\r\n                expect(visual.enumerateObjectInstances({ objectName: \"dataLabels\" })).toEqual({\r\n                    instances: [{\r\n                        objectName: \"labels\",\r\n                        selector: undefined,\r\n                        properties: {\r\n                            color: '#333333',\r\n                            fontSize: 10\r\n                        },\r\n                    }]\r\n                });\r\n\r\n                expect(visual.enumerateObjectInstances({ objectName: \"categoryLabels\" })).toEqual({\r\n                    instances: [{\r\n                        objectName: \"labels\",\r\n                        selector: undefined,\r\n                        properties: {\r\n                            show: true,\r\n                            color: '#333333',\r\n                            fontSize: 9\r\n                        },\r\n                    }]\r\n                });\r\n            });\r\n\r\n            it('card title', () => {\r\n                fireOnDataChanged(visual, { dataViews: [dataWithTitle] });\r\n\r\n                expect(visual.enumerateObjectInstances({ objectName: \"general\" })).toBeUndefined();\r\n                \r\n                expect(visual.enumerateObjectInstances({ objectName: \"cardTitle\" })).toEqual({\r\n                    instances: [{\r\n                        objectName: \"labels\",\r\n                        selector: undefined,\r\n                        properties: {\r\n                            color: '#767676',\r\n                            fontSize: 13\r\n                        },\r\n                    }]\r\n                });\r\n\r\n                expect(visual.enumerateObjectInstances({ objectName: \"dataLabels\" })).toEqual({\r\n                    instances: [{\r\n                        objectName: \"labels\",\r\n                        selector: undefined,\r\n                        properties: {\r\n                            color: '#333333',\r\n                            fontSize: 10\r\n                        },\r\n                    }]\r\n                });\r\n\r\n                expect(visual.enumerateObjectInstances({ objectName: \"categoryLabels\" })).toEqual({\r\n                    instances: [{\r\n                        objectName: \"labels\",\r\n                        selector: undefined,\r\n                        properties: {\r\n                            show: true,\r\n                            color: '#333333',\r\n                            fontSize: 9\r\n                        },\r\n                    }]\r\n                });\r\n            });\r\n        });\r\n\r\n        describe(\"DOM tests\", () => {\r\n            let v: MultiRowCard;\r\n            let element: JQuery;\r\n            let visualInitOptions: powerbi.VisualInitOptions;\r\n\r\n            beforeEach(() => {\r\n                v = <MultiRowCard>powerbi.visuals.visualPluginFactory.create().getPlugin(\"multiRowCard\").create();\r\n                element = helpers.testDom(\"200\", \"300\")\r\n                visualInitOptions = getVisualInitOptions(element)\r\n                v.init(visualInitOptions);\r\n            });\r\n\r\n            it(\"Validate multiRowCard category labels style\", () => {\r\n                let categoryLabelsData = $.extend(true, {}, data);\r\n                categoryLabelsData.metadata.objects = {\r\n                    categoryLabels: {\r\n                        show: true,\r\n                        fontSize: 12,\r\n                        color: { solid: { color: '#123456' } },\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [categoryLabelsData] });\r\n\r\n                    expect($(\".details\").first().css('font-size')).toBe('16px');\r\n                    expect($(\".details\").last().css('font-size')).toBe('16px');\r\n                    helpers.assertColorsMatch($(\".details\").first().css('color'), '#123456');\r\n                    helpers.assertColorsMatch($(\".details\").last().css('color'), '#123456');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard category labels hide\", () => {\r\n                let categoryLabelsData = $.extend(true, {}, data);\r\n                categoryLabelsData.metadata.objects = {\r\n                    categoryLabels: {\r\n                        show: false,\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [categoryLabelsData] });\r\n                    expect($(\".details\").height()).toBe(0);\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard category labels show and hide\", () => {\r\n                let categoryLabelsData = $.extend(true, {}, data);\r\n                categoryLabelsData.metadata.objects = {\r\n                    categoryLabels: {\r\n                        show: true,\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [categoryLabelsData] });\r\n\r\n                    categoryLabelsData.metadata.objects = {\r\n                        categoryLabels: {\r\n                            show: false,\r\n                        }\r\n                    };\r\n\r\n                    fireOnDataChanged(v, { dataViews: [categoryLabelsData] });\r\n\r\n                    expect($(\".details\").height()).toBe(0);\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard data labels style\", () => {\r\n                let dataLabelsData = $.extend(true, {}, data);\r\n                dataLabelsData.metadata.objects = {\r\n                    dataLabels: {\r\n                        show: true,\r\n                        fontSize: 12,\r\n                        color: { solid: { color: '#123456' } },\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataLabelsData] });\r\n\r\n                    expect($(\".caption\").first().css('font-size')).toBe('16px');\r\n                    expect($(\".caption\").last().css('font-size')).toBe('16px');\r\n                    helpers.assertColorsMatch($(\".caption\").first().css('color'), '#123456');\r\n                    helpers.assertColorsMatch($(\".caption\").last().css('color'), '#123456');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard title labels style\", () => {\r\n                let titleLabelsData = $.extend(true, {}, dataWithTitle);\r\n                titleLabelsData.metadata.objects = {\r\n                    cardTitle: {\r\n                        show: true,\r\n                        fontSize: 12,\r\n                        color: { solid: { color: '#123456' } },\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [titleLabelsData] });\r\n\r\n                    expect($(\".card .title\").first().css('font-size')).toBe('16px');\r\n                    expect($(\".card .title\").last().css('font-size')).toBe('16px');\r\n                    helpers.assertColorsMatch($(\".card .title\").first().css('color'), '#123456');\r\n                    helpers.assertColorsMatch($(\".card .title\").last().css('color'), '#123456');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard DOM without Title\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                    expect($(\".card\")).toBeInDOM();\r\n                    expect($(\".card .title\")).not.toBeInDOM();\r\n                    expect($(\".card .cardItemContainer\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer .caption\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer .details\")).toBeInDOM();\r\n\r\n                    expect($(\".card\").length).toBe(2);\r\n                    expect($(\".card\")[0].childElementCount).toBe(3);\r\n                    expect($(\".cardItemContainer\")[0].childElementCount).toBe(2);\r\n\r\n                    expect($(\".caption\").last().text()).toBe(\"category2\");\r\n                    expect($(\".details\").last().text()).toBe(\"category\");\r\n                });\r\n            });\r\n\r\n            xit(\"Validate multiRowCard DOM with Title\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataWithTitle] });\r\n\r\n                    expect($(\".card\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer .caption\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer .details\")).toBeInDOM();\r\n                    expect($(\".card .title\")).toBeInDOM();\r\n\r\n                    expect($(\".card\").length).toBe(2);\r\n                    expect($(\".card\")[0].childElementCount).toBe(2);\r\n                    expect($(\".cardItemContainer\")[0].childElementCount).toBe(2);\r\n\r\n                    //height calculated based on font size\r\n                    expect($(\".title\").last().height()).toBe(23);\r\n                    expect($(\".title\").last().text()).toBe(\"Adventure\");\r\n                    expect($(\".caption\").last().text()).toBe(\"12,345.00\");\r\n                    expect($(\".details\").last().text()).toBe(\"value\");\r\n                    expect($(\".title\").last().css('font-size')).toBe(\"17px\");\r\n                    helpers.assertColorsMatch($(\".title\").last().css('color'), '#767676');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard DOM title tooltip\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataWithTitle] });\r\n\r\n                    expect($('.card .title')[0].title).toBe('Action');\r\n                    expect($('.card .title')[1].title).toBe('Adventure');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard DOM caption tooltip\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataWithTitle] });\r\n\r\n                    expect($('.card .caption')[0].title).toBe('123,456.79');\r\n                    expect($('.card .caption')[1].title).toBe('12,345.00');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard DOM details tooltip\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataWithTitle] });\r\n\r\n                    expect($('.card .details')[0].title).toBe('value');\r\n                    expect($('.card .details')[1].title).toBe('value');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard DOM truncated title tooltip\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [longDataWithTitle] });\r\n\r\n                    expect($('.card .title')[0].title).toBe('Action Action Action Action Action Action');\r\n                    expect($('.card .title')[1].title).toBe('Adventure Adventure Adventure Adventure');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard DOM truncated caption tooltip\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [longDataWithTitle] });\r\n\r\n                    expect($('.card .caption')[0].title).toBe('123,454,783,545,456.00');\r\n                    expect($('.card .caption')[1].title).toBe('143,432,434,632,345.00');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard DOM truncated details tooltip\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [longDataWithTitle] });\r\n\r\n                    expect($('.card .details')[0].title).toBe('very long long long long column name');\r\n                    expect($('.card .details')[1].title).toBe('very long long long long column name');\r\n                });\r\n            });\r\n\r\n            it(\"Validate that multiRowCard item long caption should be truncated\", () => {\r\n\r\n                let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                    columns: [\r\n                        { displayName: \"Label\", type: ValueType.fromDescriptor({ text: true }) },\r\n                        { displayName: \"Category\", type: ValueType.fromDescriptor({ text: true }) }\r\n                    ]\r\n                };\r\n\r\n                let data: powerbi.DataView = {\r\n                    metadata: dataViewMetadata,\r\n                    table: {\r\n                        rows: [\r\n                            [\"this is the label that never ends, it just goes on and on my friends.Some axis started rendering it not knowing what it was, and now it keeps on rendering forever just because this the label that never ends\", \"Category1\"]\r\n                        ],\r\n                        columns: dataViewMetadata.columns\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                    /**\r\n                     * NOTE: This test was never verifying the truncation\r\n                     * The original string, which ended with '...' was always placed in the DOM\r\n                     * CSS text-overflow property with value ellipsis was truncating the text visually\r\n                     * Let's verify the width and visual truncation are working appropriately\r\n                     */\r\n                    let label = $(\".caption\").first();\r\n                    helpers.verifyEllipsisActive(label);\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard converter without Title\", () => {\r\n                let cardData = MultiRowCard.converter(data, data.metadata.columns.length, data.table.rows.length);\r\n\r\n                expect(cardData.dataModel.length).toBe(2);\r\n                expect(cardData.dataModel).toEqual([\r\n                    { title: undefined, showTitleAsURL: false, showTitleAsImage: false, showTitleAsKPI: false, cardItemsData: [{ caption: \"123,456.79\", details: \"value\", showURL: false, showImage: false, showKPI: false, columnIndex: 0 }, { caption: \"8/31/1999\", details: \"date\", showURL: false, showImage: false, showKPI: false, columnIndex: 1 }, { caption: \"category1\", details: \"category\", showURL: false, showImage: false, showKPI: false, columnIndex: 2 }] },\r\n                    { title: undefined, showTitleAsURL: false, showTitleAsImage: false, showTitleAsKPI: false, cardItemsData: [{ caption: \"12,345.00\", details: \"value\", showURL: false, showImage: false, showKPI: false, columnIndex: 0 }, { caption: \"8/1/2014\", details: \"date\", showURL: false, showImage: false, showKPI: false, columnIndex: 1 }, { caption: \"category2\", details: \"category\", showURL: false, showImage: false, showKPI: false, columnIndex: 2 }] }\r\n                ]);\r\n            });\r\n\r\n            it(\"Validate multiRowCard converter With Title\", () => {\r\n                let cardData = MultiRowCard.converter(dataWithTitle, dataWithTitle.metadata.columns.length, dataWithTitle.table.rows.length);\r\n\r\n                expect(cardData.dataModel.length).toBe(2);\r\n                expect(cardData.dataModel).toEqual([\r\n                    { title: \"Action\", showTitleAsURL: false, showTitleAsImage: false, showTitleAsKPI: false, cardItemsData: [{ caption: \"123,456.79\", details: \"value\", showURL: false, showImage: false, showKPI: false, columnIndex: 0 }] },\r\n                    { title: \"Adventure\", showTitleAsURL: false, showTitleAsImage: false, showTitleAsKPI: false, cardItemsData: [{ caption: \"12,345.00\", details: \"value\", showURL: false, showImage: false, showKPI: false, columnIndex: 0 }] }\r\n                ]);\r\n            });\r\n\r\n            it(\"Validate multiRowCard converter null value\", () => {\r\n                let cardData = MultiRowCard.converter(dataWithNullValue, dataWithNullValue.metadata.columns.length, dataWithNullValue.table.rows.length);\r\n\r\n                expect(cardData.dataModel.length).toBe(2);\r\n                expect(cardData.dataModel).toEqual([\r\n                    { title: \"Action\", showTitleAsURL: false, showTitleAsImage: false, showTitleAsKPI: false, cardItemsData: [{ caption: \"(Blank)\", details: \"value\", showURL: false, showImage: false, showKPI: false, columnIndex: 0 }] },\r\n                    { title: \"Adventure\", showTitleAsURL: false, showTitleAsImage: false, showTitleAsKPI: false, cardItemsData: [{ caption: \"(Blank)\", details: \"value\", showURL: false, showImage: false, showKPI: false, columnIndex: 0 }] }\r\n                ]);\r\n            });\r\n\r\n            it(\"Validate multiRowCard converter KPI\", () => {\r\n                let cardData = MultiRowCard.converter(dataWithKPI, dataWithKPI.metadata.columns.length, dataWithKPI.table.rows.length);\r\n\r\n                expect(cardData.dataModel.length).toBe(2);\r\n                expect(cardData.dataModel).toEqual([\r\n                    { title: \"test1\", showTitleAsURL: false, showTitleAsImage: false, showTitleAsKPI: false, cardItemsData: [{ caption: \"powervisuals-glyph bars-stacked bars-three\", details: \"KPI\", showURL: false, showImage: false, showKPI: true, columnIndex: 0 }] },\r\n                    { title: \"test2\", showTitleAsURL: false, showTitleAsImage: false, showTitleAsKPI: false, cardItemsData: [{ caption: \"powervisuals-glyph bars-stacked bars-four\", details: \"KPI\", showURL: false, showImage: false, showKPI: true, columnIndex: 0 }] }\r\n                ]);\r\n            });\r\n\r\n            it(\"Validate that multiRowCard displays title with Empty values\", () => {\r\n                let dataWithEmptyTitle: powerbi.DataView = {\r\n                    metadata: dataViewMetadataWithTitle,\r\n                    table: {\r\n                        rows: [\r\n                            [null, \"\"],\r\n                            [null, \"Adventure\"]\r\n                        ],\r\n                        columns: dataViewMetadataWithTitle.columns\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataWithEmptyTitle] });\r\n\r\n                    expect($(\".card .title\")).toBeInDOM();\r\n                    expect($(\".title\").first().text()).toBe(\"\");\r\n                    expect($(\".title\").last().text()).toBe(\"Adventure\");\r\n                });\r\n            });\r\n\r\n            it(\"Validate that multiRowCard displays title with Web URL values\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataWithURLTitle] });\r\n\r\n                    expect($(\".card .title a\")).toBeInDOM();\r\n                    expect($(\".title a\").last().text()).toBe(\"http://microsoft.com\");\r\n\r\n                });\r\n            });\r\n\r\n            it(\"Validate that multiRowCard displays card items with Web URL values\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataWithURLValues] });\r\n\r\n                    expect($(\".card .caption a\")).toBeInDOM();\r\n                    expect($(\".caption a\").last().text()).toBe(\"http://microsoft.com\");\r\n                });\r\n            });\r\n\r\n            it(\"Validate that multiRowCard displays KPI\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [dataWithKPI] });\r\n\r\n                    expect($(\".card .caption div\")).toBeInDOM();\r\n                    expect($(\".caption div\").hasClass('bars-stacked bars-four')).toBeTruthy();\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard last card styling on dashboard\", () => {\r\n                let options = getVisualInitOptions(element = helpers.testDom(\"400\", \"400\"));\r\n\r\n                options.interactivity = { overflow: \"hidden\" };\r\n                v.init(options);\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                    let cardItemBottomBorderWidth = parseInt(element.find(\".card\").last().css(\"border-bottom-width\"), 10);\r\n                    let cardItemBottomPadding = parseInt(element.find(\".card\").last().css(\"padding-bottom\"), 10);\r\n                    let cardItemTopPadding = parseInt(element.find(\".card\").last().css(\"padding-top\"), 10);\r\n\r\n                    expect(cardItemBottomBorderWidth).toEqual(0);\r\n                    expect(cardItemBottomPadding).toEqual(0);\r\n                    expect(cardItemTopPadding).toEqual(5);\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard first card styling on canvas\", () => {\r\n                v.init(getVisualInitOptions(element = helpers.testDom(\"100\", \"100\")));\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [singleRowdata] });\r\n\r\n                    let cardBottomMargin = parseInt(element.find(\".card\").last().css(\"margin-bottom\"), 10);\r\n                    expect(cardBottomMargin).toEqual(0);\r\n\r\n                    helpers.runWithImmediateAnimationFrames(() => {\r\n                        fireOnDataChanged(v, { dataViews: [dataWithTitle] });\r\n\r\n                        cardBottomMargin = parseInt(element.find(\".card\").last().css(\"margin-bottom\"), 10);\r\n                        expect(cardBottomMargin).toEqual(20);\r\n\r\n                        helpers.runWithImmediateAnimationFrames(() => {\r\n                            fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                            cardBottomMargin = parseInt(element.find(\".card\").last().css(\"margin-bottom\"), 10);\r\n                            expect(cardBottomMargin).toEqual(20);\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard card styling on dashboard\", () => {\r\n                let options = getVisualInitOptions(element = helpers.testDom(\"400\", \"400\"));\r\n\r\n                options.interactivity = { overflow: \"hidden\" };\r\n                v.init(options);\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                    let cardItemBottomBorderWidth = parseInt(element.find(\".card\").first().css(\"border-bottom-width\"), 10);\r\n                    let cardItemBottomPadding = parseInt(element.find(\".card\").first().css(\"padding-bottom\"), 10);\r\n                    let cardItemTopPadding = parseInt(element.find(\".card\").first().css(\"padding-top\"), 10);\r\n\r\n                    expect($(\".card .title\")).not.toBeInDOM();\r\n                    expect(cardItemBottomBorderWidth).toEqual(1);\r\n                    expect(cardItemBottomPadding).toEqual(5);\r\n                    expect(cardItemTopPadding).toEqual(5);\r\n                    expect($('.card .caption').first().css('font-size')).toBe('13px');\r\n                    expect($('.card .details').first().css('font-size')).toBe('12px');\r\n                    helpers.assertColorsMatch($('.card .caption').first().css('color'), '#333333');\r\n                    helpers.assertColorsMatch($('.card .details').first().css('color'), '#333333');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard card styling\", () => {\r\n                v.init(getVisualInitOptions(element = helpers.testDom(\"400\", \"400\")));\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                    let cardItemBottomBorderWidth = parseInt(element.find(\".card\").first().css(\"border-bottom-width\"), 10);\r\n                    let cardItemBottomPadding = parseInt(element.find(\".card\").first().css(\"padding-bottom\"), 10);\r\n                    let cardItemTopPadding = parseInt(element.find(\".card\").first().css(\"padding-top\"), 10);\r\n\r\n                    expect(cardItemBottomBorderWidth).toEqual(0);\r\n                    expect(cardItemBottomPadding).toEqual(0);\r\n                    expect(cardItemTopPadding).toEqual(0);\r\n                    expect($('.card .caption').first().css('font-size')).toBe('13px');\r\n                    expect($('.card .details').first().css('font-size')).toBe('12px');\r\n                    helpers.assertColorsMatch($('.card .caption').first().css('color'), '#333333');\r\n                    helpers.assertColorsMatch($('.card .details').first().css('color'), '#333333');\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard styling when there is a single card item\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [singleRowdata] });\r\n\r\n                    let cardItemRightMargin = parseInt(element.find(\".cardItemContainer\").first().css(\"margin-right\"), 10);\r\n\r\n                    expect(cardItemRightMargin).toEqual(0);\r\n                });\r\n            });\r\n\r\n            it(\"Verify single column item in smallTile \", () => {\r\n                let options = getVisualInitOptions(helpers.testDom(\"150\", \"230\"));\r\n\r\n                options.interactivity = { overflow: \"hidden\" };\r\n                v.init(options);\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [tableDataViewHelper.getDataWithColumns(1, 10)] });\r\n\r\n                    expect($(\".card\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer\")).toBeInDOM();\r\n\r\n                    expect($(\".card\").length).toBe(3);\r\n                    expect($(\".card:first>*:visible\").length).toBe(1);\r\n                    expect($(\".card:first>*:visible\").text()).not.toEqual('');\r\n                });\r\n            });\r\n\r\n            xit(\"Verify number of cards and card items in smallTile \", () => {\r\n                let options = getVisualInitOptions(helpers.testDom(\"150\", \"230\"));\r\n\r\n                options.interactivity = { overflow: \"hidden\" };\r\n                v.init(options);\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [tableDataViewHelper.getDataWithColumns(10, 10)] });\r\n\r\n                    expect($(\".card\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer\")).toBeInDOM();\r\n\r\n                    expect($(\".card\").length).toBe(1);\r\n                    expect($(\".card:first>*:visible\").length).toBe(4);\r\n                });\r\n            });\r\n\r\n            xit(\"Verify number of cards and card items in MediumTile \", () => {\r\n                let options = getVisualInitOptions(helpers.testDom(\"300\", \"470\"));\r\n\r\n                options.interactivity = { overflow: \"hidden\" };\r\n                v.init(options);\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [tableDataViewHelper.getDataWithColumns(10, 10)] });\r\n\r\n                    expect($(\".card\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer\")).toBeInDOM();\r\n\r\n                    expect($(\".card\").length).toBe(3);\r\n                    expect($(\".card:first>*:visible\").length).toBe(6);\r\n                });\r\n            });\r\n\r\n            it(\"Verify number of cards and card items in LargeTile \", () => {\r\n                let options = getVisualInitOptions(helpers.testDom(\"450\", \"750\"));\r\n\r\n                options.interactivity = { overflow: \"hidden\" };\r\n                v.init(options);\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [tableDataViewHelper.getDataWithColumns(10, 10)] });\r\n\r\n                    expect($(\".card\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer\")).toBeInDOM();\r\n\r\n                    expect($(\".card\").length).toBeGreaterThan(8);\r\n                    expect($(\".card\").length).toBeLessThan(11);\r\n                    expect($(\".card:first>*:visible\").length).toBe(6);\r\n\r\n                });\r\n            });\r\n\r\n            it(\"Validate multiRowCard cardrow column width for default width\", () => {\r\n                v.init(getVisualInitOptions(element = helpers.testDom(\"100\", \"760\")));\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [tableDataViewHelper.getDataWithColumns(15, 15)] });\r\n\r\n                    expect($(\".card\")).toBeInDOM();\r\n                    expect($(\".card .cardItemContainer\")).toBeInDOM();\r\n                    let width = element.find(\".cardItemContainer\").last().innerWidth();\r\n\r\n                    // To prevent this test from being fragile, compare the width within an acceptable range. Expected value: ~125px\r\n                    expect(helpers.isCloseTo(width, /*expected*/ 125, /*tolerance*/ 5)).toBeTruthy();\r\n                });\r\n            });\r\n\r\n            it(\"Card should be cleared when there is a empty dataview \", () => {\r\n                let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                    columns: [\r\n                        { displayName: \"value\", type: ValueType.fromDescriptor({ numeric: true }) }\r\n                    ]\r\n                };\r\n\r\n                let data: powerbi.DataView = {\r\n                    metadata: dataViewMetadata,\r\n                    table: {\r\n                        rows: [\r\n                            [123456.789]\r\n                        ],\r\n                        columns: dataViewMetadata.columns\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                    expect($(\".card\").length).toBe(1);\r\n\r\n                    dataViewMetadata = {\r\n                        columns: []\r\n                    };\r\n                    data = {\r\n                        metadata: dataViewMetadata,\r\n                        table: {\r\n                            rows: [],\r\n                            columns: dataViewMetadata.columns\r\n                        }\r\n                    };\r\n\r\n                    helpers.runWithImmediateAnimationFrames(() => {\r\n                        fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                        expect($(\".card\").length).toBe(0);\r\n                    });\r\n                });\r\n            });\r\n\r\n            it(\"Card should format values\", () => {\r\n                let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                    columns: [\r\n                        { displayName: \"value\", type: ValueType.fromDescriptor({ numeric: true }), objects: { general: { formatString: \"0%\" } } }\r\n                    ]\r\n                };\r\n\r\n                let data: powerbi.DataView = {\r\n                    metadata: dataViewMetadata,\r\n                    table: {\r\n                        rows: [\r\n                            [.22]\r\n                        ],\r\n                        columns: dataViewMetadata.columns\r\n                    }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [data] });\r\n\r\n                    expect($(\".card\").length).toBe(1);\r\n                    expect($(\".card .caption\").last().text()).toBe(\"22%\");\r\n\r\n                });\r\n            });\r\n\r\n            it(\"Card should not call loadMoreData \", () => {\r\n                let data: powerbi.DataView = {\r\n                    metadata: { columns: [] },\r\n                    table: { rows: [[1]], columns: [] }\r\n                };\r\n\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [data] });\r\n                    let listViewOptions: powerbi.visuals.ListViewOptions = <powerbi.visuals.ListViewOptions>v[\"listView\"][\"options\"];\r\n\r\n                    let hostServices = visualInitOptions.host;\r\n                    let loadMoreSpy = spyOn(hostServices, \"loadMoreData\");\r\n\r\n                    listViewOptions.loadMoreData();\r\n\r\n                    expect(loadMoreSpy).not.toHaveBeenCalled();\r\n\r\n                });\r\n            });\r\n\r\n            it(\"Card should call loadMoreData \", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [simpleDataView] });\r\n\r\n                    let listViewOptions: powerbi.visuals.ListViewOptions = <powerbi.visuals.ListViewOptions>v[\"listView\"][\"options\"];\r\n\r\n                    let hostServices = visualInitOptions.host;\r\n                    let loadMoreSpy = spyOn(hostServices, \"loadMoreData\");\r\n\r\n                    helpers.runWithImmediateAnimationFrames(() => {\r\n                        listViewOptions.loadMoreData();\r\n\r\n                        expect(loadMoreSpy).toHaveBeenCalled();\r\n                    });\r\n                });\r\n            });\r\n\r\n            it(\"Card already called loadMoreData\", () => {\r\n                helpers.runWithImmediateAnimationFrames(() => {\r\n                    fireOnDataChanged(v, { dataViews: [simpleDataView] });\r\n\r\n                    let listViewOptions: powerbi.visuals.ListViewOptions = <powerbi.visuals.ListViewOptions>v[\"listView\"][\"options\"];\r\n\r\n                    let hostServices = visualInitOptions.host\r\n                    let loadMoreSpy = spyOn(hostServices, \"loadMoreData\");\r\n\r\n                    listViewOptions.loadMoreData();\r\n                    listViewOptions.loadMoreData();\r\n\r\n                    expect(loadMoreSpy.calls.all().length).toBe(1);\r\n\r\n                });\r\n            });\r\n        });\r\n\r\n        function getVisualInitOptions(element: JQuery): powerbi.VisualInitOptions {\r\n            return {\r\n                element: element,\r\n                host: powerbitests.mocks.createVisualHostServices(),\r\n                style: powerbi.visuals.visualStyles.create(),\r\n                viewport: {\r\n                    height: element.height(),\r\n                    width: element.width()\r\n                }\r\n            };\r\n        }\r\n\r\n        function fireOnDataChanged(visual: powerbi.visuals.MultiRowCard, options: powerbi.VisualDataChangedOptions) {\r\n            visual.onDataChanged(options);\r\n\r\n            // Multi-row cards require 2 ticks\r\n            jasmine.clock().tick(0);\r\n            jasmine.clock().tick(0);\r\n        }\r\n    });\r\n}"],"sourceRoot":"/source/"}