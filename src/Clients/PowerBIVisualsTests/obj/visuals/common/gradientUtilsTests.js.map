{"version":3,"sources":["visuals/common/gradientUtilsTests.ts"],"names":["powerbitests"],"mappings":"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","file":"visuals/common/gradientUtilsTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import buildSelector = powerbitests.helpers.buildSelectorForColumn;\r\n\r\n    describe(\"GradientUtils\", () => {\r\n        it(\"getFillRuleRole with fillRule\", () => {\r\n            let desc: powerbi.data.DataViewObjectDescriptors = {\r\n                test: {\r\n                    displayName: \"displayName\",\r\n                    properties: {\r\n                        fillRule: {\r\n                            displayName: \"fillRule\",\r\n                            type: { fillRule: {} },\r\n                            rule: {\r\n                                inputRole: \"inputRoleValue\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            expect(powerbi.visuals.GradientUtils.getFillRuleRole(desc)).toBe(\"inputRoleValue\");\r\n        });\r\n\r\n        it(\"getFillRuleRole without fillRule\", () => {\r\n            let desc: powerbi.data.DataViewObjectDescriptors = {\r\n                test: {\r\n                    displayName: \"displayName\",\r\n                    properties: {\r\n                        fill: {\r\n                            displayName: \"fill\",\r\n                            type: { fill: { solid: { color: true } } }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            expect(powerbi.visuals.GradientUtils.getFillRuleRole(desc)).toBeUndefined();\r\n        });\r\n\r\n        it(\"getFillRule\", () => {\r\n            let objectDefns: powerbi.data.DataViewObjectDefinitions = {\r\n                dataPoint: [\r\n                    { properties: { fill: { solid: { color: \"#FF0000\" } } } },\r\n                    { properties: { fill: { solid: { color: \"#00FF00\" } } } },\r\n                    { properties: { fill: { solid: { color: \"#0000FF\" } } } },\r\n                    { properties: { fill: { solid: { color: \"#000000\" } } } }\r\n                ]\r\n            };\r\n            let fillRule = powerbi.visuals.GradientUtils.getFillRule(objectDefns);\r\n            expect(fillRule).toBeUndefined();\r\n\r\n            let fillRuleDefinition = {\r\n                linearGradient2: {\r\n                    min: { color: powerbi.data.SQExprBuilder.text('#ff0000') },\r\n                    max: { color: powerbi.data.SQExprBuilder.text('#0000ff') },\r\n                }\r\n            };\r\n\r\n            objectDefns = {\r\n                dataPoint: [\r\n                    { properties: { fillRule: fillRuleDefinition } },\r\n                    { properties: { fill: { solid: { color: \"#00FF00\" } } }, selector: buildSelector(\"q\", \"data1\") },\r\n                    { properties: { fill: { solid: { color: \"#0000FF\" } } }, selector: buildSelector(\"q\", \"data2\") },\r\n                    { properties: { fill: { solid: { color: \"#000000\" } } }, selector: buildSelector(\"q\", \"data3\") }\r\n                ]\r\n            };\r\n            fillRule = powerbi.visuals.GradientUtils.getFillRule(objectDefns);\r\n            expect(fillRule).toBeDefined();\r\n\r\n            objectDefns = {\r\n                dataPoint: [\r\n                    { properties: { fill: { solid: { color: \"#FF0000\" } } }, selector: buildSelector(\"q\", \"data1\") },\r\n                    { properties: { fill: { solid: { color: \"#00FF00\" } } }, selector: buildSelector(\"q\", \"data2\") },\r\n                    { properties: { fill: { solid: { color: \"#0000FF\" } } }, selector: buildSelector(\"q\", \"data3\") },\r\n                    { properties: { fillRule: fillRuleDefinition } }\r\n                ]\r\n            };\r\n            fillRule = powerbi.visuals.GradientUtils.getFillRule(objectDefns);\r\n            expect(fillRule).toBeDefined();\r\n        });\r\n    });\r\n}"],"sourceRoot":"/source/"}