{"version":3,"sources":["visuals/common/objectEnumerationBuilderTests.ts"],"names":["powerbitests"],"mappings":"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EA,IAAIA;gBACdA,UAAUA,EAAEA;oBACRA,aAAaA,EAAEA,GAAGA;iBACrBA;aACJA,CAACA;YACFA,IAAIA,SAASA,GAAyBA;gBAClCA,UAAUA,EAAEA,UAAUA;gBACtBA,QAAQA,EAAEA,IAAIA;gBACdA,UAAUA,EAAEA;oBACRA,aAAaA,EAAEA,GAAGA;iBACrBA;aACJA,CAACA;YACFA,IAAIA,SAASA,GAAkCA;gBAC3CA,WAAWA,EAAEA,eAAeA;aAC/BA,CAACA;YAEFA,WAAWA;iBACNA,YAAYA,CAACA,SAASA,CAACA;iBACvBA,aAAaA,CAACA,SAASA,CAACA;iBACxBA,YAAYA,CAACA,SAASA,CAACA;iBACvBA,YAAYA,EAAEA,CAACA;YAEpBA,IAAIA,MAAMA,GAAGA,WAAWA,CAACA,QAAQA,EAAEA,CAACA;YACpCA,MAAMA,CAACA,MAAMA,CAACA,CAACA,OAAOA,CAACA;gBACnBA,SAASA,EAAEA;oBACPA,SAASA;oBACTA,SAASA;iBACZA;gBACDA,UAAUA,EAAEA;oBACRA,SAASA;iBACZA;aACJA,CAACA,CAACA;YACHA,MAAMA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,YAAYA,CAACA,CAACA,aAAaA,EAAEA,CAACA;YACzDA,MAAMA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA,YAAYA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;QACrDA,CAACA,CAACA,CAACA;IACPA,CAACA,CAACA,CAACA;AACPA,CAACA,EAhMM,YAAY,KAAZ,YAAY,QAgMlB","file":"visuals/common/objectEnumerationBuilderTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import ObjectEnumerationBuilder = powerbi.visuals.ObjectEnumerationBuilder;\r\n    import VisualObjectInstance = powerbi.VisualObjectInstance;\r\n    import VisualObjectInstanceContainer = powerbi.VisualObjectInstanceContainer;\r\n\r\n    describe(\"ObjectEnumerationBuilder\", () => {\r\n        it('Empty creates undefined', () => {\r\n            let enumeration = new ObjectEnumerationBuilder();\r\n\r\n            expect(enumeration.complete()).toBeUndefined();\r\n        });\r\n\r\n        it('Single instance', () => {\r\n            let enumeration = new ObjectEnumerationBuilder();\r\n            let instance: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty': 123,\r\n                },\r\n            };\r\n\r\n            enumeration.pushInstance(instance);\r\n\r\n            expect(enumeration.complete()).toEqual({\r\n                instances: [instance],\r\n            });\r\n        });\r\n\r\n        it('Multi instance: Same Object is consolidated', () => {\r\n            let enumeration = new ObjectEnumerationBuilder();\r\n            let instance1: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty1': 123,\r\n                },\r\n            };\r\n            let instance2: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty2': 321,\r\n                },\r\n            };\r\n\r\n            enumeration\r\n                .pushInstance(instance1)\r\n                .pushInstance(instance2);\r\n\r\n            expect(enumeration.complete()).toEqual({\r\n                instances: [{\r\n                    objectName: 'myObject',\r\n                    selector: null,\r\n                    properties: {\r\n                        'myProperty1': 123,\r\n                        'myProperty2': 321,\r\n                    },\r\n                }],\r\n            });\r\n        });\r\n\r\n        it('Multi instance: Same Object with same property', () => {\r\n            let enumeration = new ObjectEnumerationBuilder();\r\n            let instance1: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty': 123,\r\n                },\r\n            };\r\n            let instance2: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty': 321,\r\n                },\r\n            };\r\n\r\n            enumeration\r\n                .pushInstance(instance1)\r\n                .pushInstance(instance2);\r\n\r\n            expect(enumeration.complete()).toEqual({\r\n                instances: [{\r\n                    objectName: 'myObject',\r\n                    selector: null,\r\n                    properties: {\r\n                        'myProperty': 123,\r\n                    },\r\n                }],\r\n            });\r\n        });\r\n\r\n        it('Multi instance: Different Object is not consolidated', () => {\r\n            let enumeration = new ObjectEnumerationBuilder();\r\n            let instance1: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty1': 123,\r\n                },\r\n            };\r\n            let instance2: VisualObjectInstance = {\r\n                objectName: 'myObject2',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty2': 321,\r\n                },\r\n            };\r\n\r\n            enumeration\r\n                .pushInstance(instance1)\r\n                .pushInstance(instance2);\r\n\r\n            expect(enumeration.complete()).toEqual({\r\n                instances: [\r\n                    instance1,\r\n                    instance2,\r\n                ],\r\n            });\r\n        });\r\n\r\n        it('Multi instance: Different selector is not consolidated', () => {\r\n            let enumeration = new ObjectEnumerationBuilder();\r\n            let instance1: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty1': 123,\r\n                },\r\n            };\r\n            let instance2: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: { metadata: 'select2' },\r\n                properties: {\r\n                    'myProperty2': 321,\r\n                },\r\n            };\r\n\r\n            enumeration\r\n                .pushInstance(instance1)\r\n                .pushInstance(instance2);\r\n\r\n            expect(enumeration.complete()).toEqual({\r\n                instances: [\r\n                    instance1,\r\n                    instance2,\r\n                ],\r\n            });\r\n        });\r\n\r\n        it('Multi instance: Different containers', () => {\r\n            let enumeration = new ObjectEnumerationBuilder();\r\n            let instance1: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty1': 123,\r\n                },\r\n            };\r\n            let instance2: VisualObjectInstance = {\r\n                objectName: 'myObject',\r\n                selector: null,\r\n                properties: {\r\n                    'myProperty2': 321,\r\n                },\r\n            };\r\n            let container: VisualObjectInstanceContainer = {\r\n                displayName: 'containerName',\r\n            };\r\n\r\n            enumeration\r\n                .pushInstance(instance1)\r\n                .pushContainer(container)\r\n                .pushInstance(instance2)\r\n                .popContainer();\r\n\r\n            let result = enumeration.complete();\r\n            expect(result).toEqual({\r\n                instances: [\r\n                    instance1,\r\n                    instance2,\r\n                ],\r\n                containers: [\r\n                    container,\r\n                ]\r\n            });\r\n            expect(result.instances[0].containerIdx).toBeUndefined();\r\n            expect(result.instances[1].containerIdx).toBe(0);\r\n        });\r\n    });\r\n}"],"sourceRoot":"/source/"}