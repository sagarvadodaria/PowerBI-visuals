{"version":3,"sources":["helpers/tableDataViewHelper.ts"],"names":["powerbitests","powerbitests.tableDataViewHelper","powerbitests.tableDataViewHelper.ColumnType","powerbitests.tableDataViewHelper.getDataWithColumns","powerbitests.tableDataViewHelper.getDataWithColumnsOfType","powerbitests.tableDataViewHelper.dataViewObjects"],"mappings":"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","file":"helpers/tableDataViewHelper.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests.tableDataViewHelper {\r\n    import ValueType = powerbi.ValueType;\r\n\r\n    export enum ColumnType {\r\n        Text,\r\n        Numeric,\r\n        NumericMeasure,\r\n    }\r\n\r\n    /** Create a table which contains @columnCount number of columns */\r\n    export function getDataWithColumns(columnCount: number, numRows: number = 1, objects?: powerbi.DataViewObjects): powerbi.DataView {\r\n        // Generate alternating column types\r\n        var columnTypes: ColumnType[] = [];\r\n        for (var i = 0; i < columnCount; ++i) {\r\n            columnTypes.push(i % 2 === 0 ? ColumnType.Text : ColumnType.Numeric);\r\n        }\r\n\r\n        return tableDataViewHelper.getDataWithColumnsOfType(columnTypes, false, numRows, objects);\r\n    }\r\n\r\n    /** Create a table which contains columns with the specified types */\r\n    export function getDataWithColumnsOfType(columnTypes: ColumnType[], hasSubtotals: boolean, numRows: number = 1, objects?: powerbi.DataViewObjects): powerbi.DataView {\r\n        var columns: powerbi.DataViewMetadataColumn[] = [], rows: any[] = [], totals: any[] = [];\r\n\r\n        for (var i = 0, len = columnTypes.length; i < len; ++i) {\r\n            var isMeasure = columnTypes[i] === ColumnType.NumericMeasure;\r\n            if (columnTypes[i] === ColumnType.Numeric || isMeasure) {\r\n                columns.push({ displayName: 'numeric' + i, type: ValueType.fromDescriptor({ numeric: true }), isMeasure: isMeasure });\r\n                rows.push(i);\r\n\r\n                if (hasSubtotals)\r\n                    totals.push(isMeasure ? i : null);\r\n            }\r\n            else {\r\n                columns.push({ displayName: 'text' + i, type: ValueType.fromDescriptor({ numeric: false }) });\r\n                rows.push('cell text ' + i);\r\n\r\n                if (hasSubtotals)\r\n                    totals.push(null);\r\n            }\r\n        }\r\n\r\n        var dataViewMetadata: powerbi.DataViewMetadata = {\r\n            columns: columns,\r\n            objects: objects,\r\n        };\r\n\r\n        var rowsArray: any[] = [];\r\n        for (var i = 0; i < numRows; i++)\r\n            rowsArray.push(rows);\r\n\r\n        var data: powerbi.DataView = {\r\n            metadata: dataViewMetadata,\r\n            table: {\r\n                rows: rowsArray,\r\n                columns: dataViewMetadata.columns\r\n            },\r\n        };\r\n\r\n        if (totals.length > 0)\r\n            data.table.totals = totals;\r\n\r\n        return data;\r\n    }\r\n\r\n    export function dataViewObjects(totalsEnabled: boolean): powerbi.DataViewObjects {\r\n        return {\r\n            general: {\r\n                totals: totalsEnabled,\r\n                autoSizeColumnWidth: false,\r\n                textSize: 8,\r\n            }\r\n        };\r\n    }\r\n}"],"sourceRoot":"/source/"}