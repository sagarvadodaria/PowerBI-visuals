{"version":3,"sources":["visuals/formatting/filledMapLabelLayoutTests.ts"],"names":["powerbitests","powerbitests.convertStringToFloatArray","powerbitests.createLabelDataPoint","powerbitests.getTransform","powerbitests.getAlternateTransform","powerbitests.createRect"],"mappings":"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","file":"visuals/formatting/filledMapLabelLayoutTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n\r\n    import FilledMapLabelLayout = powerbi.FilledMapLabelLayout;\r\n    import PolygonLabelPosition = powerbi.NewPointLabelPosition;\r\n    import LabelParentPolygon = powerbi.LabelParentPolygon;\r\n    import IRect = powerbi.visuals.IRect;\r\n    import LabelDataPoint = powerbi.LabelDataPoint;\r\n    import Polygon = powerbi.visuals.shapes.Polygon;\r\n    import Rect = powerbi.visuals.shapes.Rect;\r\n    import Transform = powerbi.visuals.Transform;\r\n    import dataLabelsSettings = powerbi.visuals.PointDataLabelsSettings;\r\n    import TextProperties = powerbi.TextProperties;\r\n    import NewDataLabelUtils = powerbi.visuals.NewDataLabelUtils;\r\n    import TextMeasurementService = powerbi.TextMeasurementService;\r\n    import dataLabelUtils = powerbi.visuals.dataLabelUtils;\r\n    import LabelDataPointParentType = powerbi.LabelDataPointParentType;\r\n    import FilledMapLabel = powerbi.FilledMapLabel;\r\n    import IPoint = powerbi.visuals.IPoint;\r\n\r\n    let testOutsideFillColor = \"#000000\";\r\n    let testInsideFillColor = \"#FFFFFF\";\r\n\r\n    describe(\"filledMapLabelLayoutTests tests\", () => {\r\n\r\n        let filledMapLabelLayout: FilledMapLabelLayout;\r\n        let viewport = { width: 1248, height: 651 };\r\n        let polygonStringPath = \"144879.87206044444 199013.72328370204 151791.03647644442 199012.13279094332 151825.87250133333 198936.56205369835 151877.9809031111 \" +\r\n            \"198875.08830404375 151929.94366933333 198836.3206857566 152004.85859911112 198803.83800275822 152079.6424568889 198790.52402039967 152158.314784 198793.9000592409 \" +\r\n            \"152236.8560391111 198816.33521814167 152313.4749048889 198860.45464591653 152423.09478755554 198775.84292374656 152525.4183288889 198771.06267465994 152598.978848 \" +\r\n            \"198747.0639311674 152643.5724551111 198711.14292120305 152706.00641777777 198704.27258656378 152729.96346666667 198660.63179785977 152719.23012622222 198591.3725313283 \" +\r\n            \"152730.4731911111 198560.34867049532 152812.75728 198521.525162979 152857.62759466667 198466.12978885724 152901.9153671111 198444.0715154108 \" +\r\n            \"152949.65470222224 198395.81547600028 153007.80697955555 198358.7505604363 153117.80551466666 198327.4235860436 153129.7185031111 198307.6071730258 \" +\r\n            \"153156.42806399998 198289.044382894 153176.54033422223 198243.56858580053 153232.44982399998 198255.71988060133 153265.43627733333 198231.28281021243 \" +\r\n            \"153295.43720177776 198227.35873544624 153321.31663999998 198201.06817606132 153322.103072 198178.14530857146 153300.65095466666 198146.67929859663 153273.88313955555 \" +\r\n            \"198130.1522892202 153250.34843377778 198073.902692257 153150.8939128889 198011.88535863013 153104.21771733332 197916.3115905186 153074.5371911111 197887.55116436016 \" +\r\n            \"153043.7643982222 197876.33935404656 153004.76319644443 197839.39269206097 152985.72862933332 197768.56457142188 152966.22802844443 197725.5632664037 152923.19272177777 \" +\r\n            \"197702.07761146262 152874.27373866667 197713.64884825825 152831.96660977777 197686.16307103666 152814.63597866666 197615.0974658779 152828.07814044444 197560.76721890335 \" +\r\n            \"152818.20404977776 197450.48546038402 152772.79488355556 197402.06719819363 152748.51743644444 197390.75547055143 152711.58425955556 197386.69067398476 152676.76279822222 \" +\r\n            \"197408.22112605796 152651.16006755555 197401.66459449564 152636.15960533332 197386.2688480969 152641.37335822222 197359.74855394667 152637.9946133333 197334.27777298898 \" +\r\n            \"152624.02816355554 197307.57405175242 152643.49963733333 197293.3758429124 152638.25675733332 197261.75039441086 152625.717536 197247.60469098037 152660.20403555554 \" +\r\n            \"197193.2914057934 152631.07692444444 197183.47838363764 152620.47465599998 197162.00617320024 152652.49991466667 197088.53551166537 152632.18375466668 197057.628335556 \" +\r\n            \"152633.47991111112 197044.7673651058 152656.27187555554 197029.59783092403 152669.74316444446 196997.38784321552 152721.88069333334 197005.71514362044 152738.3666382222 \" +\r\n            \"196981.59717581255 152759.23621333332 196973.1144157852 152771.20745599997 196956.24339773264 152773.31917155554 196937.86934326656 152795.95093688887 196907.0026760305 \" +\r\n            \"152777.6591111111 196881.7495768101 152777.629984 196865.4055402264 152823.0391502222 196862.97974506163 152826.21400533334 196846.883618241 152843.93785244445 \" +\r\n            \"196826.97244072054 152807.45614577777 196773.07727660515 152802.50453688888 196736.00390115724 152776.87267911108 196714.30210798155 152746.09988622222 \" +\r\n            \"196659.95430896676 152742.41530666666 196630.38969873544 152721.34184177776 196622.50078493543 152727.2546453333 196587.29368005082 152789.033248 \" +\r\n            \"196540.53515779035 152814.72336 196534.37788484208 152877.97288177776 196493.95251821983 152899.8182151111 196440.8239960836 152960.09677155555 196404.9289066251 \" +\r\n            \"152966.19890133332 196389.54771132968 152960.88320355554 196383.2285144171 152940.1155733333 196397.7216187265 152929.58612266666 196395.96321026393 \" +\r\n            \"152942.8098311111 196362.548820818 153027.49690666667 196304.8791274562 153055.09484444442 196269.5258383946 153062.02709688887 196248.82759922426 153085.03751466665 \" +\r\n            \"196228.02923543914 153122.30565333334 196145.09204915608 153110.90238933332 196125.26424506764 153121.41727644444 196097.04686932848 153139.05374222223 \" +\r\n            \"196082.38374508935 153166.97207822223 196011.8142759236 153219.64845866666 195969.45756321467 153217.65325155554 195947.85696081643 153256.94572444443 \" +\r\n            \"195935.19349077513 153276.67934222223 195899.69798225805 153321.054496 195899.3099981021 153360.84212977777 195877.85261874957 153369.6093902222 195869.23759992985 \" +\r\n            \"153366.8860053333 195858.17691676927 153343.26391822222 195836.9648608046 153329.7343751111 195808.13947466557 153303.86950044445 195800.25744847112 153294.88378666667 \" +\r\n            \"195785.22975851013 153304.1753351111 195748.449022523 153297.47609955556 195735.2799214237 153269.25192888887 195750.25529640104 153249.29985777778 195744.58389796494 \" +\r\n            \"153224.94959288888 195753.77065849234 153215.52697244444 195749.76974144933 153207.3859448889 195721.6820612484 153197.11863822222 195712.18211451865 153164.01567644443 \" +\r\n            \"195736.79502076068 153124.9270933333 195709.98672847886 153074.4061191111 195720.8078629264 153068.68264177776 195714.61059436435 153077.65379199997 195688.0501967227 \" +\r\n            \"153053.74043377777 195677.32341673732 153044.44888533332 195647.95612845826 153008.98662755557 195633.51291924535 152978.301216 195646.94535209 152941.25153066666 \" +\r\n            \"195636.66218543367 152940.34859022222 195587.9369445385 152912.63414399998 195584.94204103196 152914.32351644442 195558.08196209 152882.13805866666 195534.60144164064 \" +\r\n            \"152881.91960533333 195523.39461163623 152894.5025173333 195513.9964482727 152889.8567431111 195498.83726859116 152808.97075555555 195392.96397636295 152830.07334755556 \" +\r\n            \"195386.55576123195 152831.67533866665 195371.848743127 152853.56436266666 195370.71886125716 152846.29714844443 195290.54923096654 152831.45688533332 195267.72056014295 \" +\r\n            \"152843.1951111111 195250.0357210536 152841.3892302222 195235.99526476662 152817.46130844444 195194.6643019697 152822.23815466667 195186.6266859799 152844.98642844445 \" +\r\n            \"195186.11944050534 152839.9183111111 195109.05281885294 152828.44222933333 195085.35150211386 152809.18920888889 195072.42517138156 152777.32414933335 195077.85361170128 \" +\r\n            \"152765.2800888889 195066.13725938916 152769.54721066667 195040.35742564185 152782.56702933332 195023.20699055865 152806.18911644444 195018.87017584877 152812.3931911111 \" +\r\n            \"194988.8013691284 152786.9652231111 194993.6277136385 152752.6534862222 194971.6438684184 152752.6534862222 194933.92036146 152746.72611911112 194926.84349358265 \" +\r\n            \"152726.94881066665 194928.2510793137 152712.6765262222 194914.44823529435 152680.505632 194917.90886476584 152666.85958044443 194875.29930505482 152658.29620977776 \" +\r\n            \"194877.82225798623 152647.94152177777 194899.43151335552 152620.59116444443 194880.13003080897 152604.70232533332 194884.54988356365 152592.54175644444 194904.08532574144 \" +\r\n            \"152565.61374222222 194885.13657793443 152541.32173155554 194894.5037585068 152533.19526755557 194881.3425723391 152542.5159431111 194868.3755912308 152539.41390577776 \" +\r\n            \"194854.82043097983 152522.7823253333 194846.01759158354 152520.14632177778 194827.960049461 152528.50580266665 194808.25615700232 152515.29665777777 194778.62598413276 \" +\r\n            \"152511.27711644443 194744.6228642636 152496.85919644445 194737.4373700444 152489.41721955553 194713.92009528104 152479.00427733333 194716.6617209905 152478.1595911111 \" +\r\n            \"194726.8052125441 152454.78508444442 194715.2909156634 152440.1487111111 194687.94999614742 152419.48302577776 194678.23430146716 152426.13857066666 194656.2340756726 \" +\r\n            \"152421.02676266665 194639.01124489633 152394.9871253333 194626.39141549094 145983.03226666665 194627.4692458285 145982.85750399999 193641.67142074497 145720.49505066665 \" +\r\n            \"193746.27912016035 145519.22671288886 193850.30539250904 144878.98368355556 193982.41676200583 144879.87206044444 199013.72328370204\";\r\n\r\n        let polygonPath = convertStringToFloatArray(polygonStringPath);\r\n\r\n        let transform = getTransform();\r\n        beforeEach(() => {\r\n            filledMapLabelLayout = new FilledMapLabelLayout();\r\n        });\r\n\r\n        it(\"Label is correctly laid out\", () => {\r\n\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n\r\n            let labels = filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n            expect(labels.length).toBe(1);\r\n            expect(labels[0].boundingBox.left).toBeCloseTo(603.4723273724817,3);\r\n            expect(labels[0].boundingBox.top).toBeCloseTo(319.6871085538696,3);\r\n            expect(labels[0].boundingBox.width).toBe(40);\r\n            expect(labels[0].boundingBox.height).toBe(10);\r\n            expect(labels[0].isVisible).toBe(true);\r\n        });\r\n\r\n        it(\"Label has correct text\", () => {\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n            let labels = filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n            expect(labels[0].text).toBe(\"text\");\r\n        });\r\n\r\n        it(\"Label uses inside fill color\", () => {\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n            let labels = filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n            expect(labels[0].fill).toBe(testInsideFillColor);\r\n        });\r\n\r\n        it(\"Polygon has the correct centroid\", () => {\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n            filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n\r\n            let centroid: any = {\r\n                x: 148781.8289518388,\r\n                y: 196749.2354017094,\r\n            };\r\n            expect((<LabelParentPolygon>labelDataPoints[0].parentShape).polygon.absoluteCentroid()).toEqual(centroid);\r\n        });\r\n\r\n        it(\"check if polygon has label\", () => {\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n            let labels = filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n            expect(labels.length).toBe(1);\r\n        });\r\n\r\n        it(\"check if polygon contains the label\", () => {\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n\r\n            filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n\r\n            let rect: IRect = {\r\n                height: 12,\r\n                left: 588.6197862146846,\r\n                top: 315.62123733746876,\r\n                width: 50.953125,\r\n            };\r\n            let inverseTransorm = transform.getInverse();\r\n            let absoluteLabelRect = inverseTransorm.applyToRect(rect);\r\n            let isFit = (<LabelParentPolygon>labelDataPoints[0].parentShape).polygon.contains(absoluteLabelRect);\r\n\r\n            expect(isFit).toBe(true);\r\n        });\r\n\r\n        it(\"Polygon has the correct absoluteBoundingRect\", () => {\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n\r\n            filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n\r\n            let absoluteBoundingRect: any = {\r\n                left: 144878.98368355556,\r\n                top: 193641.67142074497,\r\n                width: 8490.625706666644,\r\n                height: 5372.051862957072,\r\n            };\r\n\r\n            expect((<LabelParentPolygon>labelDataPoints[0].parentShape).polygon.absoluteBoundingRect()).toEqual(absoluteBoundingRect);\r\n        });\r\n\r\n        it(\"check if label is is in a conflict with polygon\", () => {\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n\r\n            filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n\r\n            let polygon = (<LabelParentPolygon>labelDataPoints[0].parentShape).polygon;\r\n            let rect: IRect = {\r\n                height: polygon.absoluteCentroid().y + 10,\r\n                left: polygon.absoluteCentroid().x + 20,\r\n                top: polygon.absoluteCentroid().y + 10,\r\n                width: polygon.absoluteCentroid().x + 20,\r\n            };\r\n            let isInConflict = polygon.conflicts(rect);\r\n\r\n            expect(isInConflict).toBe(true);\r\n        });\r\n\r\n        xit(\"check boundingbox size by label\", () => {\r\n\r\n            let labelSettings: dataLabelsSettings = dataLabelUtils.getDefaultMapLabelSettings();;\r\n\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text\", parentShape)\r\n            ];\r\n\r\n            labelDataPoints[0].text = \"text\";\r\n            let firstRowProperties: TextProperties = {\r\n                text: labelDataPoints[0].text,\r\n                fontFamily: NewDataLabelUtils.LabelTextProperties.fontFamily,\r\n                fontSize: NewDataLabelUtils.LabelTextProperties.fontSize,\r\n                fontWeight: NewDataLabelUtils.LabelTextProperties.fontWeight,\r\n            };\r\n            let FirstTextwidth = TextMeasurementService.measureSvgTextWidth(firstRowProperties);\r\n            let FirstTextHeight = TextMeasurementService.estimateSvgTextHeight(firstRowProperties);\r\n            labelDataPoints[0].textSize.width = FirstTextwidth;\r\n            labelDataPoints[0].textSize.height = FirstTextHeight;\r\n\r\n            let label = filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n            let firstRect: IRect = {\r\n                left: 614.4723273724817,\r\n                top: 317.1871085538696,\r\n                width: 18,\r\n                height: 15,\r\n            };\r\n            expect(label[0].boundingBox).toEqual(firstRect);\r\n            \r\n            //second round\r\n            labelDataPoints[0].secondRowText = \"catagory text\";\r\n            let secondRowProperties = {\r\n                text: labelDataPoints[0].secondRowText,\r\n                fontFamily: NewDataLabelUtils.LabelTextProperties.fontFamily,\r\n                fontSize: NewDataLabelUtils.LabelTextProperties.fontSize,\r\n                fontWeight: NewDataLabelUtils.LabelTextProperties.fontWeight,\r\n            };\r\n            let SecondTextwidth = TextMeasurementService.measureSvgTextWidth(secondRowProperties);\r\n\r\n            labelDataPoints[0].text = \"text\";\r\n            firstRowProperties = {\r\n                text: labelDataPoints[0].text,\r\n                fontFamily: NewDataLabelUtils.LabelTextProperties.fontFamily,\r\n                fontSize: NewDataLabelUtils.LabelTextProperties.fontSize,\r\n                fontWeight: NewDataLabelUtils.LabelTextProperties.fontWeight,\r\n            };\r\n            FirstTextwidth = TextMeasurementService.measureSvgTextWidth(firstRowProperties);\r\n            FirstTextHeight = TextMeasurementService.estimateSvgTextHeight(firstRowProperties);\r\n\r\n            labelDataPoints[0].textSize.width = Math.max(FirstTextwidth, SecondTextwidth);\r\n            labelDataPoints[0].textSize.height = FirstTextHeight * 2;\r\n\r\n            labelSettings.show = true;\r\n            labelSettings.showCategory = true;\r\n\r\n            label = filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n            let secondRect: IRect = {\r\n                left: 589.9723273724817,\r\n                top: 309.6871085538696,\r\n                width: 67,\r\n                height: 30,\r\n            };\r\n            expect(label[0].boundingBox).toEqual(secondRect);\r\n        });\r\n\r\n        describe(\"DataLabelPointPositioner tests\", () => {\r\n            let offset = 5;\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center],\r\n            };\r\n\r\n            let pointLabelDataPoint = createLabelDataPoint(\"text\", parentShape);\r\n            let polygon = (<LabelParentPolygon>pointLabelDataPoint.parentShape).polygon;\r\n\r\n            it(\"Above positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.Above];\r\n                expect(filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.Above, polygon.absoluteCentroid(), offset)).toEqual(createRect(148761.8289518388, 196734.2354017094, 40, 10));\r\n            });\r\n\r\n            it(\"Below positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.Below];\r\n                expect(filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.Below, polygon.absoluteCentroid(), offset)).toEqual(createRect(148761.8289518388, 196754.2354017094, 40, 10));\r\n            });\r\n\r\n            it(\"Left positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.Left];\r\n                expect(filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.Left, polygon.absoluteCentroid(), offset)).toEqual(createRect(148736.8289518388, 196744.2354017094, 40, 10));\r\n            });\r\n\r\n            it(\"Right positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.Right];\r\n                expect(filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.Right, polygon.absoluteCentroid(), offset)).toEqual(createRect(148786.8289518388, 196744.2354017094, 40, 10));\r\n            });\r\n\r\n            it(\"Center positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.Center];\r\n                expect(filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.Center, polygon.absoluteCentroid(), offset)).toEqual(createRect(148761.8289518388, 196744.2354017094, 40, 10));\r\n            });\r\n\r\n            it(\"Above Left positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.AboveLeft];\r\n                let labelRect = filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.AboveLeft, polygon.absoluteCentroid(), offset);\r\n                expect(labelRect.left).toBe(148737.57443421613);\r\n                expect(labelRect.top).toBe(196736.6087917653);\r\n                expect(labelRect.width).toBe(40);\r\n                expect(labelRect.height).toBe(10);\r\n            });\r\n\r\n            it(\"Below Left positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.BelowLeft];\r\n                let labelRect = filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.BelowLeft, polygon.absoluteCentroid(), offset);\r\n                expect(labelRect.left).toBe(148737.57443421613);\r\n                expect(labelRect.top).toBe(196751.8620116535);\r\n                expect(labelRect.width).toBe(40);\r\n                expect(labelRect.height).toBe(10);\r\n            });\r\n\r\n            it(\"Above Right positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.AboveRight];\r\n                let labelRect = filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.AboveRight, polygon.absoluteCentroid(), offset);\r\n                expect(labelRect.left).toBe(148786.08346946148);\r\n                expect(labelRect.top).toBe(196736.6087917653);\r\n                expect(labelRect.width).toBe(40);\r\n                expect(labelRect.height).toBe(10);\r\n            });\r\n\r\n            it(\"Below Right positioning\", () => {\r\n                parentShape.validPositions = [PolygonLabelPosition.BelowRight];\r\n                let labelRect = filledMapLabelLayout.getLabelPolygon(pointLabelDataPoint, PolygonLabelPosition.BelowRight, polygon.absoluteCentroid(), offset);\r\n                expect(labelRect.left).toBe(148786.08346946148);\r\n                expect(labelRect.top).toBe(196751.8620116535);\r\n                expect(labelRect.width).toBe(40);\r\n                expect(labelRect.height).toBe(10);\r\n            });\r\n        });\r\n\r\n        it(\"Labels do not redraw during pan or zoom but do move\", () => {\r\n            let parentShape: LabelParentPolygon = {\r\n                polygon: new Polygon(polygonPath),\r\n                validPositions: [PolygonLabelPosition.Center, PolygonLabelPosition.Above, PolygonLabelPosition.Below,\r\n                    PolygonLabelPosition.Left, PolygonLabelPosition.Right, PolygonLabelPosition.AboveLeft,\r\n                    PolygonLabelPosition.AboveRight, PolygonLabelPosition.BelowLeft, PolygonLabelPosition.BelowRight],\r\n            };\r\n\r\n            let labelDataPoints = [\r\n                createLabelDataPoint(\"text to enusure label doesn't fit\", parentShape)\r\n            ];\r\n\r\n\r\n            let prelabels = filledMapLabelLayout.layout(labelDataPoints, viewport, transform, true);\r\n            let prelabelsAbsoluteBoundingBoxCenter: IPoint = {\r\n                x: (<FilledMapLabel>prelabels[0]).absoluteBoundingBoxCenter.x,\r\n                y: (<FilledMapLabel>prelabels[0]).absoluteBoundingBoxCenter.y\r\n            };\r\n            let prelabelsBoundingBox: IRect = Rect.clone((<FilledMapLabel>prelabels[0]).boundingBox);\r\n\r\n            let alternateTransform = getAlternateTransform();\r\n            let postlabels = filledMapLabelLayout.layout(labelDataPoints, viewport, alternateTransform, false);\r\n\r\n            expect(prelabelsAbsoluteBoundingBoxCenter).toEqual((<FilledMapLabel>postlabels[0]).absoluteBoundingBoxCenter);\r\n            expect(prelabelsBoundingBox).not.toEqual((<FilledMapLabel>postlabels[0]).boundingBox);\r\n        });\r\n    });\r\n\r\n    function convertStringToFloatArray(path: string): Float64Array {\r\n        let stringArray = path.split(\" \");\r\n        let f64s = new Float64Array(stringArray.length);\r\n\r\n        for (let i: number = 0; i < stringArray.length; i++) {\r\n            f64s[i] = parseFloat(stringArray[i]);\r\n        }\r\n        return f64s;\r\n    }\r\n\r\n    function createLabelDataPoint(text: string, parentShape: LabelParentPolygon): LabelDataPoint {\r\n        return {\r\n            text: text,\r\n            secondRowText: \"category\" + text,\r\n            textSize: { width: text.length * 10, height: 10 },\r\n            isPreferred: true,\r\n            insideFill: testInsideFillColor,\r\n            outsideFill: testOutsideFillColor,\r\n            parentShape: parentShape,\r\n            parentType: LabelDataPointParentType.Polygon,\r\n            identity: undefined,\r\n        };\r\n    }\r\n\r\n    function getTransform(): Transform {\r\n        let base: any = {\r\n            height: 109890.95309252565,\r\n            left: 174763.16666666666,\r\n            top: 152253.54690747435,\r\n            width: 87381.33333333334,\r\n        };\r\n        let current: any = {\r\n            height: 1717.0461420707134,\r\n            left: 1029.4307291666669,\r\n            top: -370.55802416855295,\r\n            width: 1365.333333333333,\r\n        };\r\n\r\n        let transform = new Transform();\r\n        transform.translate(current.left, current.top);\r\n        transform.scale((current.width / base.width), (current.height / base.height));\r\n        transform.translate(-base.left, -base.top);\r\n        return transform;\r\n    }\r\n\r\n    function getAlternateTransform(): Transform {\r\n        let base: any = {\r\n            height: 109890.95309252565,\r\n            left: 174763.16666666666,\r\n            top: 152253.54690747435,\r\n            width: 87381.33333333334,\r\n        };\r\n        let current: any = {\r\n            height: 1717.0461420707134,\r\n            left: 1050.4307291666669,\r\n            top: -370.55802416855295,\r\n            width: 1365.333333333333,\r\n        };\r\n\r\n        let transform = new Transform();\r\n        transform.translate(current.left, current.top);\r\n        transform.scale((current.width / base.width), (current.height / base.height));\r\n        transform.translate(-base.left, -base.top);\r\n        return transform;\r\n    }\r\n\r\n    function createRect(left: number, top: number, width: number, height: number): IRect {\r\n        return {\r\n            left: left,\r\n            top: top,\r\n            width: width,\r\n            height: height,\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}