{"version":3,"sources":["visuals/controls/tablixControlTests.ts"],"names":["powerbitests","powerbitests.createTablixControl","powerbitests.createTablixControlWithOptions","powerbitests.createMockBinder","powerbitests.createMockNavigator","powerbitests.createMockColumnWidthManager"],"mappings":"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","file":"visuals/controls/tablixControlTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import Controls = powerbi.visuals.controls;\r\n    import InternalControls = powerbi.visuals.controls.internal;\r\n    import TablixLayoutManager = powerbi.visuals.controls.internal.TablixLayoutManager;\r\n\r\n    let colWidthChangedCallback = false;\r\n    let colWidthCallback = [50];\r\n    let parentElement;\r\n\r\n    describe(\"TablixGrid\", () => {\r\n        it(\"onStartRenderingSession clear\", () => {\r\n            let control = createTablixControl();\r\n            let grid = control.layoutManager.grid;\r\n            let gridPresenter = grid._presenter;\r\n            gridPresenter[\"_owner\"] = grid;\r\n            grid[\"_owner\"] = control;\r\n\r\n            grid.onStartRenderingIteration();\r\n\r\n            grid.getOrCreateColumn(0);\r\n            grid.getOrCreateColumn(1);\r\n            grid.getOrCreateRow(0);\r\n            grid.getOrCreateRow(1);\r\n            grid.getOrCreateFootersRow();\r\n\r\n            grid.onStartRenderingSession(true);\r\n\r\n            expect(grid[\"_rows\"]).toBe(null);\r\n            expect(grid[\"_columns\"]).toBe(null);\r\n            expect(grid[\"_footerRow\"]).toBe(null);\r\n        });\r\n\r\n        it(\"tablixGrid column resize\", function () {\r\n            let control = createTablixControl();\r\n            let grid = control.layoutManager.grid;\r\n            grid.onStartRenderingIteration();\r\n            let col0 = grid.getOrCreateColumn(0);\r\n            expect(col0.getContextualWidth()).toBe(50);\r\n            col0.resize(35);\r\n            expect(colWidthCallback[0]).toBe(35);\r\n        });\r\n\r\n        it(\"CalculateWidth AutoSize property off \", function () {\r\n            let control = createTablixControl();\r\n            let grid = control.layoutManager.grid;\r\n            let gridPresenter = grid._presenter;\r\n            gridPresenter[\"_owner\"] = grid;\r\n            grid[\"_owner\"] = control;\r\n            let layoutManager = control.layoutManager;\r\n            \r\n            // Mock setting of property to false\r\n            let columnLayoutManager = layoutManager.columnLayoutManager;\r\n            layoutManager.onStartRenderingIteration(false);\r\n            let col0 = grid.getOrCreateColumn(0);\r\n            spyOn(col0, \"calculateSize\").and.returnValue(35);\r\n            let col1 = grid.getOrCreateColumn(1);\r\n            spyOn(col1, \"calculateSize\").and.returnValue(50);\r\n            columnLayoutManager.calculateContextualWidths();\r\n            expect(layoutManager.columnWidthsToPersist.length).toBe(2);\r\n            expect(layoutManager.columnWidthsToPersist[0]).toBe(35);\r\n            expect(layoutManager.columnWidthsToPersist[1]).toBe(50);\r\n        });\r\n    });\r\n\r\n    describe(\"TablixLayoutManager\", () => {\r\n\r\n        it(\"onStartRenderingSession clear\", () => {\r\n            let layoutManager = InternalControls.CanvasTablixLayoutManager.createLayoutManager(createMockBinder(), createMockColumnWidthManager());\r\n\r\n            let grid = layoutManager.grid;\r\n            let gridSpy = spyOn(grid, \"onStartRenderingSession\");\r\n            layoutManager.rowLayoutManager[\"onStartRenderingSession\"] = () => { };\r\n            layoutManager.columnLayoutManager[\"onStartRenderingSession\"] = () => { };\r\n            layoutManager.onStartRenderingSession(null, null, true);\r\n            expect(gridSpy).toHaveBeenCalledWith(true);\r\n        });\r\n\r\n        it('RowLayoutManager getRealizedItemsCount noItems', () => {\r\n            let tableBinder = createMockBinder();\r\n            let layoutManager = InternalControls.CanvasTablixLayoutManager.createLayoutManager(tableBinder, createMockColumnWidthManager());\r\n            let rowLayoutManager = layoutManager.rowLayoutManager;\r\n            rowLayoutManager[\"_realizedRows\"] = null;\r\n            let count = rowLayoutManager.getRealizedItemsCount();\r\n            expect(count).toBe(0);\r\n        });\r\n\r\n        it('ColumnLayoutManager getRealizedItemsCount noItems', () => {\r\n            let tableBinder = createMockBinder();\r\n            let layoutManager = InternalControls.CanvasTablixLayoutManager.createLayoutManager(tableBinder, createMockColumnWidthManager());\r\n            let columnLayoutManager = layoutManager.columnLayoutManager;\r\n            columnLayoutManager[\"_realizedColumns\"] = null;\r\n            let count = columnLayoutManager.getRealizedItemsCount();\r\n            expect(count).toBe(0);\r\n        });\r\n\r\n        it('DimensionLayoutManager getRealizedItemsCount', () => {\r\n            let tableBinder = createMockBinder();\r\n            let layoutManager = InternalControls.CanvasTablixLayoutManager.createLayoutManager(tableBinder, createMockColumnWidthManager());\r\n            let rowLayoutManager = layoutManager.rowLayoutManager;\r\n            spyOn(rowLayoutManager, \"_getRealizedItems\").and.returnValue([1, 2, 3]);\r\n            let count = rowLayoutManager.getRealizedItemsCount();\r\n            expect(count).toBe(3);\r\n        });\r\n    });\r\n\r\n    describe(\"TablixControl\", () => {\r\n\r\n        let tablixControl: Controls.TablixControl;\r\n        let layoutManager: TablixLayoutManager;\r\n\r\n        beforeEach(() => {\r\n            tablixControl = createTablixControl();\r\n            layoutManager = tablixControl.layoutManager;\r\n        });\r\n\r\n        it(\"parentElement class name set to tablixContainer\", () => {\r\n            expect(parentElement.className).toBe('tablixContainer');\r\n        });\r\n\r\n        describe('with options', () => {\r\n            it(\"fontSize option sets font-size property on container\", () => {\r\n                tablixControl = createTablixControlWithOptions({\r\n                    interactive: true,\r\n                    enableTouchSupport: false,\r\n                    layoutKind: Controls.TablixLayoutKind.Canvas,\r\n                    fontSize: '24px',\r\n                });\r\n                layoutManager = tablixControl.layoutManager;\r\n\r\n                let actualFontSize = $(parentElement).find('.bi-tablix').css('font-size');\r\n                expect(actualFontSize).toBe('24px');\r\n            });\r\n        });\r\n\r\n        it(\"Render clear calls clearRows once\", () => {\r\n\r\n            // Force a few rendering iterations.\r\n            let counter: number = 3;\r\n            layoutManager[\"onEndRenderingIteration\"] = () => { return 0 === counter--; };\r\n\r\n            let spy = spyOn(layoutManager.grid, \"clearRows\");\r\n            tablixControl.refresh(true);\r\n\r\n            expect(spy.calls.all().length).toBe(1);\r\n        });\r\n\r\n        it(\"Render clear false no clearRows call\", () => {\r\n            let counter: number = 1;\r\n            layoutManager[\"onEndRenderingIteration\"] = () => { return 0 === counter--; };\r\n\r\n            let spy = spyOn(layoutManager.grid, \"clearRows\");\r\n            tablixControl.refresh(false);\r\n            expect(spy).not.toHaveBeenCalled();\r\n        });\r\n\r\n        it(\"DOMMouseScroll dispatches to row scrollbar\", () => {\r\n            let spy = spyOn(tablixControl.rowDimension.scrollbar, \"onFireFoxMouseWheel\");\r\n            spy.and.stub();\r\n            tablixControl.rowDimension.scrollbar[\"_visible\"] = true;\r\n            tablixControl.container.dispatchEvent(helpers.createMouseWheelEvent(\"DOMMouseScroll\", -100));\r\n\r\n            expect(spy).toHaveBeenCalled();\r\n        });\r\n\r\n        it(\"mousewheel dispatches to row scrollbar\", () => {\r\n            let spy = spyOn(tablixControl.rowDimension.scrollbar, \"onMouseWheel\");\r\n            spy.and.stub();\r\n            tablixControl.rowDimension.scrollbar[\"_visible\"] = true;\r\n            tablixControl.container.dispatchEvent(helpers.createMouseWheelEvent(\"mousewheel\", -100));\r\n\r\n            expect(spy).toHaveBeenCalled();\r\n        });\r\n\r\n        it(\"mousewheel dispatches to dimension scrollbar\", () => {\r\n            let spy = spyOn(tablixControl.columnDimension.scrollbar, \"onMouseWheel\");\r\n            spy.and.stub();\r\n            tablixControl.rowDimension.scrollbar[\"_visible\"] = false;\r\n            tablixControl.columnDimension.scrollbar[\"_visible\"] = true;\r\n            tablixControl.container.dispatchEvent(helpers.createMouseWheelEvent(\"mousewheel\", -100));\r\n\r\n            expect(spy).toHaveBeenCalled();\r\n        });\r\n    });\r\n\r\n    describe(\"Scrollbar\", () => {\r\n\r\n        let scrollbar;\r\n\r\n        beforeEach(() => {\r\n            scrollbar = new Controls.Scrollbar(document.createElement(\"div\"));\r\n        });\r\n\r\n        it(\"Uses mouse wheel range\", () => {\r\n            let scrollSpy = spyOn(scrollbar, \"scrollBy\");\r\n            scrollSpy.and.stub();\r\n            scrollbar.onMouseWheel(helpers.createMouseWheelEvent(\"mousewheel\", -10));\r\n\r\n            expect(scrollSpy).toHaveBeenCalledWith(1);\r\n        });\r\n\r\n        it(\"Detects end of scroll\", () => {\r\n            let callbackCalled = false;\r\n            let callback = () => { callbackCalled = true; };\r\n            scrollbar._onscroll.push(() => callback());\r\n            scrollbar.viewMin = 2;\r\n            scrollbar.viewSize = 8;\r\n            scrollbar.onMouseWheel(helpers.createMouseWheelEvent(\"mousewheel\", -240));\r\n\r\n            expect(callbackCalled).toBeFalsy();\r\n        });\r\n    });\r\n\r\n    function createTablixControl(): Controls.TablixControl {\r\n        let tableBinder = createMockBinder();\r\n        let layoutManager = InternalControls.CanvasTablixLayoutManager.createLayoutManager(tableBinder, createMockColumnWidthManager());\r\n\r\n        parentElement = document.createElement(\"div\");\r\n\r\n        let tablixOptions: Controls.TablixOptions = {\r\n            interactive: true,\r\n            enableTouchSupport: false,\r\n            layoutKind: Controls.TablixLayoutKind.Canvas\r\n        };\r\n        return new Controls.TablixControl(createMockNavigator(), layoutManager, tableBinder, parentElement, tablixOptions);\r\n    }\r\n\r\n    function createTablixControlWithOptions(options: Controls.TablixOptions): Controls.TablixControl {\r\n        let tableBinder = createMockBinder();\r\n        let layoutManager = InternalControls.CanvasTablixLayoutManager.createLayoutManager(tableBinder, createMockColumnWidthManager());\r\n\r\n        parentElement = document.createElement(\"div\");\r\n\r\n        let tablixOptions: Controls.TablixOptions = options;\r\n        return new Controls.TablixControl(createMockNavigator(), layoutManager, tableBinder, parentElement, tablixOptions);\r\n    }\r\n\r\n    function createMockBinder(): Controls.ITablixBinder {\r\n        return {\r\n            onStartRenderingSession: () => { },\r\n            onEndRenderingSession: () => { },\r\n            bindRowHeader: (item: any, cell: Controls.ITablixCell) => { },\r\n            unbindRowHeader: (item: any, cell: Controls.ITablixCell) => { },\r\n            bindColumnHeader: (item: any, cell: Controls.ITablixCell) => { },\r\n            unbindColumnHeader: (item: any, cell: Controls.ITablixCell) => { },\r\n            bindBodyCell: (item: any, cell: Controls.ITablixCell) => { },\r\n            unbindBodyCell: (item: any, cell: Controls.ITablixCell) => { },\r\n            bindCornerCell: (item: any, cell: Controls.ITablixCell) => { },\r\n            unbindCornerCell: (item: any, cell: Controls.ITablixCell) => { },\r\n            bindEmptySpaceHeaderCell: (cell: Controls.ITablixCell) => { },\r\n            unbindEmptySpaceHeaderCell: (cell: Controls.ITablixCell) => { },\r\n            bindEmptySpaceFooterCell: (cell: Controls.ITablixCell) => { },\r\n            unbindEmptySpaceFooterCell: (cell: Controls.ITablixCell) => { },\r\n            setTablixColumnSeparator: (cell: Controls.ITablixCell) => { },\r\n            setTablixRegionStyle: (cell: Controls.ITablixCell, fontColor: string, backgroundColor, outline: string, outlineWeight: number, outlineColor: string) => { },\r\n            getHeaderLabel: (item: any): string => { return \"label\"; },\r\n            getCellContent: (item: any): string => { return \"label\"; },\r\n            hasRowGroups: () => true\r\n        };\r\n    }\r\n\r\n    function createMockNavigator(): Controls.ITablixHierarchyNavigator {\r\n        return {\r\n            getDepth: (hierarchy: any): number=> 1,\r\n            getLeafCount: (hierarchy: any): number=> 1,\r\n            getLeafAt: (hierarchy: any, index: number): any=> 1,\r\n            getParent: (item: any): any=> { },\r\n            getIndex: (item: any): number=> 1,\r\n            isLeaf: (item: any): boolean=> true,\r\n            isRowHierarchyLeaf: (cornerItem: any): boolean=> true,\r\n            isColumnHierarchyLeaf: (cornerItem: any): boolean=> true,\r\n            isLastItem: (item: any, items: any): boolean=> true,\r\n            getChildren: (item: any): any=> { },\r\n            getCount: (items: any): number=> 1,\r\n            getAt: (items: any, index: number): any=> 1,\r\n            getLevel: (item: any): number=> 1,\r\n            getIntersection: (rowItem: any, columnItem: any): any=> { },\r\n            getCorner: (rowLevel: number, columnLevel: number): any=> { },\r\n            headerItemEquals: (item1: any, item2: any): boolean=> true,\r\n            bodyCellItemEquals: (item1: any, item2: any): boolean=> true,\r\n            cornerCellItemEquals: (item1: any, item2: any): boolean=> true\r\n        };\r\n    }\r\n\r\n    function createMockColumnWidthManager(): Controls.TablixColumnWidthManager {\r\n        let columnWidthManager = new Controls.TablixColumnWidthManager(null /* dataView*/, false);\r\n        columnWidthManager.columnWidthResizeCallback = () => {\r\n            colWidthChangedCallback = true;\r\n            colWidthCallback[0] = 35;\r\n        };\r\n\r\n        columnWidthManager.getColumnWidths = () => colWidthCallback;\r\n        return columnWidthManager;\r\n    }\r\n} "],"sourceRoot":"/source/"}