{"version":3,"sources":["customVisuals/asterPlotTests.ts"],"names":["powerbitests","powerbitests.customVisuals","powerbitests.customVisuals.AsterPlotBuilder","powerbitests.customVisuals.AsterPlotBuilder.constructor","powerbitests.customVisuals.AsterPlotBuilder.mainElement","powerbitests.customVisuals.AsterPlotBuilder.build"],"mappings":"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","file":"customVisuals/asterPlotTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests.customVisuals {\r\n    import VisualClass = powerbi.visuals.samples.AsterPlot;\r\n\r\n    describe(\"AsterPlot\", () => {\r\n        describe('capabilities', () => {\r\n            it(\"registered capabilities\", () => expect(VisualClass.capabilities).toBeDefined());\r\n        });\r\n\r\n        describe(\"DOM tests\", () => {\r\n            let visualBuilder: AsterPlotBuilder;\r\n            let dataViews: powerbi.DataView[];\r\n\r\n            beforeEach(() => {\r\n                visualBuilder = new AsterPlotBuilder();\r\n                dataViews = [new powerbitests.customVisuals.sampleDataViews.SalesByDayOfWeekData().getDataView()];\r\n            });\r\n\r\n            it(\"svg element created\", () => expect(visualBuilder.mainElement[0]).toBeInDOM());\r\n            it(\"update\", (done) => {\r\n                visualBuilder.update(dataViews);\r\n                setTimeout(() => {\r\n                    expect(visualBuilder.mainElement.find('.asterSlice').length)\r\n                        .toBe(dataViews[0].categorical.categories[0].values.length);\r\n                    done();\r\n                }, DefaultWaitForRender);\r\n            });\r\n        });\r\n    });\r\n\r\n    class AsterPlotBuilder extends VisualBuilderBase<VisualClass> {\r\n        constructor(height: number = 200, width: number = 300, isMinervaVisualPlugin: boolean = false) {\r\n            super(height, width, isMinervaVisualPlugin);\r\n            this.build();\r\n            this.init();\r\n        }\r\n\r\n        public get mainElement() {\r\n            return this.element.children(\"svg\");\r\n        }\r\n\r\n        private build(): void {\r\n            this.visual = new VisualClass();\r\n            //  Aster Plot has not been encluded to the visualPluginFactory yet\r\n            // if (this.isMinervaVisualPlugin) {\r\n            //     //this.visual = <any>powerbi.visuals.visualPluginFactory.create().getPlugin(\"asterPlot\");\r\n            // } else {\r\n            //     this.visual = new VisualClass();\r\n            // }\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}