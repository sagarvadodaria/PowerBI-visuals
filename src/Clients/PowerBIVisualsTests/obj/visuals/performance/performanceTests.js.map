{"version":3,"sources":["visuals/performance/performanceTests.ts"],"names":["powerbitests","powerbitests.runPerformanceTest"],"mappings":"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","file":"visuals/performance/performanceTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import VisualPlugin = powerbi.IVisualPlugin;\r\n    import VisualPluginFactory = powerbi.visuals.visualPluginFactory;\r\n    import Helpers = performanceTestsHelpers;\r\n    import VisualStyles = powerbi.visuals.visualStyles;\r\n    import Timer = Helpers.Timer;\r\n    mocks.setLocale();\r\n\r\n    const DEFAULT_MAX_TIME_FOR_RENDER = 1000;\r\n    const DEFAULT_ITERATIONS_COUNT = 10;\r\n    const MEASURE_PLUGIN_NAME = \"columnChart\";\r\n    const ESTIMATE_FOR_MEASURE_PLUGIN_NAME = \"scatterChart\";\r\n    const DEFAULT_HEIGHT = \"770\";\r\n    const DEFAULT_WIDTH = \"770\";\r\n    const EXCLUDED_VISUALS: string[] = [MEASURE_PLUGIN_NAME, \"sunburst\", \"basicShape\", \"bingNews\", \"bingSocialNews\", \"bingSocialTweets\", \"partitionMap\", \"categoricalFilter\", \"map\", \"filledMap\", \"heatMap\", undefined, \"consoleWriter\", \"playChart\", \"owlGauge\"];\r\n    // Exclude map, filled map, and heat map because they require more advanced mocking in order to run in test mode\r\n\r\n    describe(\"Performance measuring\", () => {\r\n        let visual: powerbi.IVisual, element: JQuery;\r\n\r\n        let pluginService = VisualPluginFactory.create();\r\n        let hostServices = mocks.createVisualHostServices();\r\n\r\n        let measurePlugin = pluginService.getPlugin(MEASURE_PLUGIN_NAME);\r\n        let estimationPlugin = pluginService.getPlugin(ESTIMATE_FOR_MEASURE_PLUGIN_NAME);\r\n        let plugins = pluginService.getVisuals().filter((plugin) => !EXCLUDED_VISUALS.some((item) => plugin.name === item));\r\n\r\n        let baseline: number = 0;\r\n        let estimationPluginTime: number = 0;\r\n\r\n        beforeEach(() => {\r\n            element = helpers.testDom(DEFAULT_HEIGHT, DEFAULT_WIDTH);\r\n            element.visible = () => { return true; };\r\n        });\r\n\r\n        it(\"performance test - \" + estimationPlugin.name, () => {\r\n            estimationPluginTime = runPerformanceTest(estimationPlugin);\r\n        });\r\n\r\n        it(\"performance test - \" + measurePlugin.name, () => {\r\n            baseline = runPerformanceTest(measurePlugin, DEFAULT_ITERATIONS_COUNT, estimationPluginTime);\r\n        });\r\n\r\n        plugins.forEach((plugin: VisualPlugin) => {\r\n            it(\"performance test - \" + plugin.name, () => {\r\n                runPerformanceTest(plugin, DEFAULT_ITERATIONS_COUNT, baseline);\r\n            });\r\n        });\r\n\r\n        function runPerformanceTest(plugin: VisualPlugin, iterations: number = DEFAULT_ITERATIONS_COUNT, expectedTime: number = DEFAULT_MAX_TIME_FOR_RENDER): number {\r\n            let timer = new Timer();\r\n\r\n            visual = VisualPluginFactory.create().getPlugin(plugin.name).create();\r\n            visual.init({\r\n                element: element,\r\n                host: hostServices,\r\n                style: VisualStyles.create(),\r\n                viewport: {\r\n                    height: element.height(),\r\n                    width: element.width()\r\n                },\r\n                interactivity: { isInteractiveLegend: true },\r\n                animation: { transitionImmediate: true }\r\n            });\r\n\r\n            timer.start();\r\n            for (let i = 0; i < iterations; i++) {\r\n                if (visual.onDataChanged) {\r\n                    visual.onDataChanged({ dataViews: [Helpers.getDataViewByVisual(plugin.name)] });\r\n                }\r\n                else if (visual.update) {\r\n                    visual.update({ dataViews: [Helpers.getDataViewByVisual(plugin.name)], viewport: { width: 100, height: 100 } });\r\n                }\r\n            }\r\n\r\n            let average = timer.stop() / iterations;\r\n            expect(average).toBeLessThan(Helpers.getExpectedTime(plugin.name, expectedTime));\r\n\r\n            return average;\r\n        }\r\n    });\r\n}"],"sourceRoot":"/source/"}