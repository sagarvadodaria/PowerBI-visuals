{"version":3,"sources":["visuals/common/dataRoleHelperTests.ts"],"names":["powerbitests","powerbitests.DataViewBuilder","powerbitests.DataViewBuilder.constructor","powerbitests.DataViewBuilder.categoriesValues","powerbitests.DataViewBuilder.values","powerbitests.DataViewBuilder.dataViewMetadata","powerbitests.DataViewBuilder.columns","powerbitests.DataViewBuilder.createDataViewMetadata","powerbitests.DataViewBuilder.updateCategoricalValues","powerbitests.DataViewBuilder.build"],"mappings":"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","file":"visuals/common/dataRoleHelperTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import DataRoleHelper = powerbi.data.DataRoleHelper;\r\n    import DataViewTransform = powerbi.data.DataViewTransform;\r\n\r\n    describe(\"dataRoleHelper tests\", () => {\r\n        let dataViewBuilder: DataViewBuilder;\r\n\r\n        beforeEach(() => {\r\n            dataViewBuilder = new DataViewBuilder();\r\n\r\n            dataViewBuilder.categoriesValues = [\"Montana\", \"California\", \"Arizona\"];\r\n            dataViewBuilder.values = [\r\n                [-100, 200, 700],\r\n                [1, 2, 3],\r\n                [4, 5, 6]\r\n            ];\r\n        });\r\n\r\n        it(\"getMeasureIndexOfRole with roles validation\", () => {\r\n            dataViewBuilder.columns = [\r\n                {displayName: \"col1\"},\r\n                {displayName: \"col2\", isMeasure: true, roles: {\"Size\": true}},\r\n                {displayName: \"col3\", isMeasure: true, roles: {\"X\": true}},\r\n                {displayName: \"col4\", isMeasure: true, roles: {\"Y\": true}}\r\n            ];\r\n\r\n            let dataView: powerbi.DataView = dataViewBuilder.build();\r\n\r\n            let grouped = dataView.categorical.values.grouped();\r\n\r\n            let result = DataRoleHelper.getMeasureIndexOfRole(grouped, \"InvalidRoleName\");\r\n            expect(result).toBe(-1);\r\n\r\n            result = powerbi.data.DataRoleHelper.getMeasureIndexOfRole(grouped, \"Size\");\r\n            expect(result).toBe(0);\r\n\r\n            result = powerbi.data.DataRoleHelper.getMeasureIndexOfRole(grouped, \"X\");\r\n            expect(result).toBe(1);\r\n\r\n            result = powerbi.data.DataRoleHelper.getMeasureIndexOfRole(grouped, \"Y\");\r\n            expect(result).toBe(2);\r\n        });\r\n\r\n        it(\"getMeasureIndexOfRole without roles validation\", () => {\r\n            dataViewBuilder.columns = [\r\n                { displayName: \"col1\" },\r\n                { displayName: \"col2\", isMeasure: true },\r\n                { displayName: \"col3\", isMeasure: true },\r\n                { displayName: \"col4\", isMeasure: true }\r\n            ];\r\n\r\n            let dataView: powerbi.DataView = dataViewBuilder.build();\r\n\r\n            let grouped = dataView.categorical.values.grouped();\r\n\r\n            let result = DataRoleHelper.getMeasureIndexOfRole(grouped, \"InvalidRoleName\");\r\n            expect(result).toBe(-1);\r\n\r\n            result = powerbi.data.DataRoleHelper.getMeasureIndexOfRole(grouped, \"Size\");\r\n            expect(result).toBe(-1);\r\n\r\n            result = powerbi.data.DataRoleHelper.getMeasureIndexOfRole(grouped, \"X\");\r\n            expect(result).toBe(-1);\r\n\r\n            result = powerbi.data.DataRoleHelper.getMeasureIndexOfRole(grouped, \"Y\");\r\n            expect(result).toBe(-1);\r\n        });\r\n\r\n        it(\"getMeasureIndexOfRole without roles validation with default\", () => {\r\n            dataViewBuilder.columns = [\r\n                {displayName: \"col1\"},\r\n                {displayName: \"col2\", isMeasure: true},\r\n                {displayName: \"col3\", isMeasure: true},\r\n                {displayName: \"col4\", isMeasure: true}\r\n            ];\r\n\r\n            let dataView: powerbi.DataView = dataViewBuilder.build();\r\n\r\n            let grouped = dataView.categorical.values.grouped();\r\n\r\n            let result = powerbi.data.DataRoleHelper.getMeasureIndexOfRole(grouped, \"Size\");\r\n            expect(result).toBe(-1);\r\n        });\r\n\r\n        it(\"getMeasureIndexOfRole without roles validation with default too few measures\", () => {\r\n            dataViewBuilder.values = [[-1, 2, 3]];\r\n\r\n            dataViewBuilder.columns = [\r\n                {displayName: \"col1\"},\r\n                {displayName: \"col2\", isMeasure: true}\r\n            ];\r\n\r\n            let dataView: powerbi.DataView = dataViewBuilder.build();\r\n\r\n            let grouped = dataView.categorical.values.grouped();\r\n\r\n            let result = powerbi.data.DataRoleHelper.getMeasureIndexOfRole(grouped, \"2nd measure\");\r\n            expect(result).toBe(-1);\r\n        });\r\n\r\n        it(\"hasRoleInDataView\", () => {\r\n            let dataViewMetadata: powerbi.DataViewMetadata = {\r\n                columns: [\r\n                    { displayName: \"col1\", roles: { \"Series\": true } },\r\n                    { displayName: \"col2\", isMeasure: true, roles: { \"Size\": true } },\r\n                ]\r\n            };\r\n            let dataView: powerbi.DataView = {\r\n                metadata: dataViewMetadata\r\n            };\r\n            expect(DataRoleHelper.hasRoleInDataView(dataView, \"Series\")).toBe(true);\r\n            expect(DataRoleHelper.hasRoleInDataView(dataView, \"Category\")).toBe(false);\r\n        });\r\n    });\r\n\r\n    class DataViewBuilder {\r\n        private _categoriesValues: any[] = [];\r\n\r\n        public get categoriesValues(): any[] {\r\n            return this._categoriesValues;\r\n        }\r\n\r\n        public set categoriesValues(value: any[]) {\r\n            this._categoriesValues = value;\r\n        }\r\n\r\n        private _values: any[] = [];\r\n\r\n        public get values(): any[] {\r\n            return this._values;\r\n        }\r\n\r\n        public set values(value: any[]) {\r\n            this._values = value;\r\n        }\r\n\r\n        private _dataViewMetadata;\r\n\r\n        public get dataViewMetadata() {\r\n            return this._dataViewMetadata;\r\n        }\r\n\r\n        private _columns: any[] = [];\r\n\r\n        public get columns(): any[] {\r\n            return this._columns;\r\n        }\r\n\r\n        public set columns(value: any[]) {\r\n            this._columns = value;\r\n            this.updateCategoricalValues();\r\n            this.createDataViewMetadata();\r\n        }\r\n\r\n        private createDataViewMetadata() {\r\n            this._dataViewMetadata = {\r\n                columns: this.columns\r\n            };\r\n        }\r\n\r\n        private categoricalValues: any[] = [];\r\n\r\n        private updateCategoricalValues() {\r\n            let categoricalValues: any[] = [];\r\n\r\n            for (let i = 1; i < this.columns.length && (i - 1) < this.values.length; i++) {\r\n                let categoricalValue = this.values[i - 1];\r\n                categoricalValue.source = this.columns[i];\r\n\r\n                categoricalValues.push(categoricalValue);\r\n            }\r\n\r\n            this.categoricalValues = categoricalValues;\r\n        }\r\n\r\n        public build(): powerbi.DataView {\r\n            return {\r\n                metadata: this.dataViewMetadata,\r\n                categorical: {\r\n                    categories: [{\r\n                        source: this.dataViewMetadata.columns[0],\r\n                        values: this.categoriesValues\r\n                    }],\r\n                    values: DataViewTransform.createValueColumns(this.categoricalValues)\r\n                }\r\n            };\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}