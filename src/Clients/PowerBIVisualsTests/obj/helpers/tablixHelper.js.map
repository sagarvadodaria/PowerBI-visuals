{"version":3,"sources":["helpers/tablixHelper.ts"],"names":["powerbitests","powerbitests.tablixHelper","powerbitests.tablixHelper.getTableCell","powerbitests.tablixHelper.renderNewTablix","powerbitests.tablixHelper.runTablixSortTest","powerbitests.tablixHelper.validateMatrix","powerbitests.tablixHelper.validateTable","powerbitests.tablixHelper.getTitleOfTablixItem","powerbitests.tablixHelper.validateSortIconClassNames","powerbitests.tablixHelper.validateClassNames","powerbitests.tablixHelper.validateFontSize","powerbitests.tablixHelper.validateCellHeights","powerbitests.tablixHelper.validateCellLeftSeparator","powerbitests.tablixHelper.validateCellBottomSeparator","powerbitests.tablixHelper.addError","powerbitests.tablixHelper.addNoMarginClass","powerbitests.tablixHelper.validateTableColumnHeaderTooltip","powerbitests.tablixHelper.validateTableRowFooterTooltip","powerbitests.tablixHelper.validateTableRowTooltip"],"mappings":"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AIA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,MAAMA,CAACA;wBAC5DA,WAAWA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;oBAE7CA,EAAEA,CAACA,CAACA,UAAUA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAC1CA,QAAQA,CAACA,WAAWA,EAAEA,eAAeA,GAAGA,UAAUA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAUA,GAAGA,CAACA,GAAGA,cAAcA,GAAGA,CAACA,GAAGA,iCAAiCA,GAAGA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA;oBACrKA,EAAEA,CAACA,CAACA,WAAWA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;wBAC3CA,QAAQA,CAACA,WAAWA,EAAEA,iBAAiBA,GAAGA,UAAUA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,UAAUA,GAAGA,CAACA,GAAGA,cAAcA,GAAGA,CAACA,GAAGA,iCAAiCA,GAAGA,cAAcA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA;oBAEvKA,EAAEA,CAACA,CAACA,KAAKA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,MAAMA,EAAEA,IAAIA,CAACA,CAACA;wBAC1BA,QAAQA,CAACA,WAAWA,EAAEA,gBAAgBA,GAAGA,KAAKA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA,MAAMA,EAAEA,GAAGA,UAAUA,GAAGA,CAACA,GAAGA,cAAcA,GAAGA,CAACA,GAAGA,yBAAyBA,CAACA,CAACA;gBACzIA,CAACA;YACLA,CAACA;YAEDA,MAAMA,CAACA,WAAWA,CAACA,CAACA,QAAQA,EAAEA,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","file":"helpers/tablixHelper.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests.tablixHelper {\r\n    import CssConstants = jsCommon.CssConstants;\r\n    import DataView = powerbi.DataView;\r\n    import ValueFormatter = powerbi.visuals.valueFormatter;\r\n    import TablixUtils = powerbi.visuals.controls.internal.TablixUtils;\r\n\r\n    export interface TableCellCoordinate {\r\n        row: number;\r\n        col: number;\r\n        expectedText?: string;\r\n    }\r\n\r\n    export interface TableCellInfo {\r\n        cellCoordinate: TableCellCoordinate;\r\n        clickTarget: JQuery;\r\n        text: string;\r\n    };\r\n\r\n    export interface RenderTableOptions {\r\n        visualType: string;\r\n        data: powerbi.DataView;\r\n        formatCallback?: (...args) => void;\r\n        viewport?: powerbi.IViewport;\r\n        redraw?: boolean;\r\n        isFixedSize?: boolean;\r\n        onCustomSortCallback?: (args: powerbi.CustomSortEventArgs) => void;\r\n    };\r\n\r\n    /** Gets the specified cell of a 'new table' visual using 0-based indices. */\r\n    export function getTableCell(tableBody: JQuery, coordinate: TableCellCoordinate): TableCellInfo {\r\n        var clickTargetSelector: string = '> tr:nth-child(' + (coordinate.row + 1) + ') > td:nth-child(' + (coordinate.col + 1) + ') > div';\r\n        var textDivSelector: string = '> div';\r\n        var clickTarget = $(clickTargetSelector, tableBody);\r\n        expect(clickTarget).toBeInDOM();\r\n        var textDiv = $(textDivSelector, clickTarget);\r\n        expect(textDiv).toBeInDOM();\r\n\r\n        return { cellCoordinate: coordinate, clickTarget: clickTarget, text: textDiv.text() };\r\n    }\r\n\r\n    /** Renders the table based on the options passed in. */\r\n    export function renderNewTablix(element: JQuery, options: RenderTableOptions): JQueryPromise<powerbi.IVisual> {\r\n        var viewport = options.viewport ? options.viewport : { height: element.height() + 200, width: element.width() + 200 };\r\n        var data = options.data;\r\n        var redraw = options.redraw ? options.redraw : false;\r\n        var style = powerbi.visuals.visualStyles.create();\r\n\r\n        element.width(viewport.width);\r\n        element.css(CssConstants.minWidthProperty, viewport.width);\r\n        element.css(CssConstants.maxWidthProperty, viewport.width);\r\n        element.css(CssConstants.positionProperty, CssConstants.absoluteValue);\r\n\r\n        var featureSwitches: powerbi.visuals.MinervaVisualFeatureSwitches = {\r\n            scrollableVisuals: true,\r\n        };\r\n        var visualPluginService = powerbi.visuals.visualPluginFactory.createMinerva(featureSwitches);\r\n        var sortCallback = options.onCustomSortCallback ? options.onCustomSortCallback : (args: powerbi.CustomSortEventArgs) => { };\r\n        var hostService: powerbi.IVisualHostServices = <any>{\r\n            getLocalizedString: (stringId: string) => stringId,\r\n            onCustomSort: sortCallback,\r\n            loadMoreData: () => { },\r\n            getViewMode: () => powerbi.ViewMode.View\r\n        };\r\n\r\n        if (options.formatCallback)\r\n            spyOn(powerbi.visuals.valueFormatter, 'formatValueColumn').and.callFake(options.formatCallback);\r\n\r\n        var v: powerbi.IVisual = visualPluginService.getPlugin(options.visualType).create();\r\n        v.init({\r\n            element: element,\r\n            host: hostService,\r\n            style: style,\r\n            viewport: viewport,\r\n            interactivity: {\r\n                selection: true,\r\n                overflow: options.isFixedSize ? 'hidden' : 'visible'\r\n            }\r\n        });\r\n\r\n        v.onDataChanged({ dataViews: [data] });\r\n\r\n        var promise = jsCommon.TimerPromiseFactory.instance.create(DefaultWaitForRender)\r\n            .then(() => {\r\n                if (redraw)\r\n                    v.onResizing({ height: viewport.height, width: viewport.width });\r\n\r\n                return v;\r\n            });\r\n\r\n        return promise;\r\n    }\r\n\r\n    /** Runs a table sort test by first creating the table based on the specified data, then\r\n        validating the generated headers before executing a set of clicks and validating\r\n        the recorded sort events. */\r\n    export function runTablixSortTest(\r\n        element: JQuery,\r\n        done: any,\r\n        visualType: string,\r\n        data: DataView,\r\n        expectedColumnHeaders?: tablixHelper.TableCellCoordinate[],\r\n        clicks?: tablixHelper.TableCellCoordinate[],\r\n        expectedSorts?: powerbi.SortableFieldDescriptor[][]): void {\r\n        var actualSorts: powerbi.SortableFieldDescriptor[][] = [];\r\n        var sortCallback = (args: powerbi.CustomSortEventArgs) => {\r\n            actualSorts.push(args.sortDescriptors);\r\n        };\r\n\r\n        var renderTablixPromise = renderNewTablix(\r\n            element,\r\n            {\r\n                visualType: visualType,\r\n                data: data,\r\n                onCustomSortCallback: sortCallback,\r\n            });\r\n\r\n        renderTablixPromise.then(\r\n            () => {\r\n                var tableBody = $('.tablixContainer > div.bi-tablix > div:nth-child(1) > table.unselectable > tbody');\r\n                expect(tableBody).toBeInDOM();\r\n\r\n                // Validate column headers\r\n                if (expectedColumnHeaders) {\r\n                    for (var i = 0, len = expectedColumnHeaders.length; i < len; i++) {\r\n                        var coordinate = expectedColumnHeaders[i];\r\n                        coordinate.expectedText = TablixUtils.replaceSpaceWithNBSP(coordinate.expectedText);\r\n                        var headerCell = getTableCell(tableBody, coordinate);\r\n                        if (coordinate.expectedText)\r\n                            expect(headerCell.text).toBe(coordinate.expectedText);\r\n                    }\r\n                }\r\n\r\n                // Execute the clicks\r\n                if (clicks) {\r\n                    for (var i = 0, len = clicks.length; i < len; i++) {\r\n                        var clickCoordinate = clicks[i];\r\n                        var clickCell = getTableCell(tableBody, clickCoordinate);\r\n                        if (clickCoordinate.expectedText)\r\n                            expect(clickCell.text).toBe(clickCoordinate.expectedText);\r\n                        clickCell.clickTarget.click();\r\n                    }\r\n                }\r\n\r\n                // Validate the expected sorts\r\n                if (expectedSorts) {\r\n                    expect(expectedSorts.length).toBe(actualSorts.length);\r\n\r\n                    for (var i = 0, len = expectedSorts.length; i < len; i++) {\r\n                        var expectedSort = expectedSorts[i];\r\n                        var actualSort = actualSorts[i];\r\n                        expect(expectedSort.length).toBe(actualSort.length);\r\n\r\n                        for (var j = 0, jlen = expectedSort.length; j < jlen; j++) {\r\n                            var expectedField = expectedSort[j];\r\n                            var actualField = actualSort[j];\r\n\r\n                            expect(expectedField.queryName).toBe(actualField.queryName);\r\n                            expect(expectedField.sortDirection).toBe(actualField.sortDirection);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                done();\r\n            });\r\n    }\r\n\r\n    export function validateMatrix(expectedValues: string[][], selector: string): void {\r\n        var rows = $(selector);\r\n\r\n        var result: string[][] = [];\r\n        var errorString: string = null;\r\n\r\n        var ilen = rows.length;\r\n        if (ilen !== expectedValues.length)\r\n            addError(errorString, \"Actual row count \" + ilen + \" does not match expected number of rows \" + expectedValues.length + \".\");\r\n\r\n        for (var i = 0; i < ilen; i++) {\r\n            result[i] = [];\r\n            var cells = rows.eq(i).find('td');\r\n            expect(cells.height()).not.toBe(0);\r\n\r\n            var jlen = cells.length;\r\n            if (jlen !== expectedValues[i].length)\r\n                addError(errorString, \"Actual column count \" + jlen + \" in row \" + i + \" does not match expected number of columns \" + expectedValues[i].length + \".\");\r\n\r\n            for (var j = 0; j < jlen; j++) {\r\n                result[i][j] = cells.eq(j).text();\r\n                expectedValues[i][j] = TablixUtils.replaceSpaceWithNBSP(expectedValues[i][j]);\r\n                if (result[i][j] !== expectedValues[i][j])\r\n                    addError(errorString, \"Actual value \" + result[i][j] + \" in row \" + i + \" and column \" + j + \" does not match expected value \" + expectedValues[i][j] + \".\");\r\n            }\r\n        }\r\n\r\n        expect(errorString).toBeNull();\r\n        expect(result).toEqual(expectedValues);\r\n    }\r\n\r\n    export function validateTable(expectedValues: string[][], selector: string): void {\r\n        var rows = $(selector);\r\n\r\n        var textResult: string[][] = [];\r\n        var titleResult: string[][] = [];\r\n        var errorString: string = null;\r\n\r\n        var ilen = rows.length;\r\n        if (ilen !== expectedValues.length)\r\n            addError(errorString, \"Actual row count \" + ilen + \" does not match expected number of rows \" + expectedValues.length + \".\");\r\n\r\n        for (var i = 0; i < ilen; i++) {\r\n            textResult[i] = [];\r\n            titleResult[i] = [];\r\n            var cells = rows.eq(i).find('td');\r\n\r\n            var jlen = cells.length;\r\n            if (jlen !== expectedValues[i].length)\r\n                addError(errorString, \"Actual column count \" + jlen + \" in row \" + i + \" does not match expected number of columns \" + expectedValues[i].length + \".\");\r\n\r\n            for (var j = 0; j < jlen; j++) {\r\n                textResult[i][j] = cells.eq(j).text();\r\n                titleResult[i][j] = getTitleOfTablixItem(cells.eq(j));\r\n\r\n                expectedValues[i][j] = TablixUtils.replaceSpaceWithNBSP(expectedValues[i][j]);\r\n\r\n                //this check only empty header cells\r\n                if (titleResult[i][j] === '' && expectedValues[i][j] === \"\\xa0\")\r\n                    titleResult[i][j] = expectedValues[i][j];\r\n\r\n                if (textResult[i][j] !== expectedValues[i][j])\r\n                    addError(errorString, \"Actual value \" + textResult[i][j] + \" in row \" + i + \" and column \" + j + \" does not match expected value \" + expectedValues[i][j] + \".\");\r\n                if (titleResult[i][j] !== expectedValues[i][j])\r\n                    addError(errorString, \"Actual tooltip \" + textResult[i][j] + \" in row \" + i + \" and column \" + j + \" does not match expected value \" + expectedValues[i][j] + \".\");\r\n\r\n                if (cells.eq(j).height() <= 1)\r\n                    addError(errorString, \"Actual height \" + cells.eq(j).height() + \" in row \" + i + \" and column \" + j + \" is expected to be > 1.\");\r\n            }\r\n        }\r\n\r\n        expect(errorString).toBeNull();\r\n        expect(textResult).toEqual(expectedValues);\r\n        expect(titleResult).toEqual(expectedValues);\r\n    }\r\n\r\n    function getTitleOfTablixItem(cells: JQuery): string {\r\n        let titleText = cells.find('div div').attr('title');\r\n        if (titleText) \r\n            return titleText;\r\n        \r\n        //The item is url type\r\n        titleText = cells.find('div div a').attr('title');\r\n        if (titleText) \r\n            return titleText;\r\n\r\n        //The item is table header\r\n        titleText = cells.find('div div:last').attr('title');\r\n        if (titleText) \r\n            return titleText;\r\n \r\n        return \"\";\r\n    }\r\n\r\n    export function validateSortIconClassNames(expectedValues: string[], selector: string): void {\r\n        let rows = $(selector);\r\n        let pictures = rows.eq(0).find('i');\r\n\r\n        let result: string[] = [];\r\n        let errorString: string = null;\r\n\r\n        let ilen = pictures.length;\r\n        if (ilen !== expectedValues.length)\r\n            addError(errorString, \"Actual column count \" + ilen + \" does not match expected number of columns \" + expectedValues.length + \".\");\r\n\r\n        for (let i = 0; i < ilen; i++) {\r\n            result[i] = pictures.eq(i).attr('class');\r\n            if (result[i] !== expectedValues[i])\r\n                addError(errorString, \"Actual class name \" + result[i] + \" in column does not match expected value \" + expectedValues[i] + \".\");\r\n        }\r\n\r\n        expect(errorString).toBeNull();\r\n        expect(result).toEqual(expectedValues);\r\n    }\r\n\r\n    export function validateClassNames(expectedValues: string[][], selector: string, noMarginClass: string): void {\r\n        var rows = $(selector);\r\n\r\n        var result: string[][] = [];\r\n        var errorString: string = null;\r\n\r\n        var ilen = rows.length;\r\n        if (ilen !== expectedValues.length)\r\n            addError(errorString, \"Actual row count \" + ilen + \" does not match expected number of rows \" + expectedValues.length + \".\");\r\n\r\n        for (var i = 0; i < ilen; i++) {\r\n            result[i] = [];\r\n            var cells = rows.eq(i).find('td');\r\n\r\n            var jlen = cells.length;\r\n            if (jlen !== expectedValues[i].length)\r\n                addError(errorString, \"Actual column count \" + jlen + \" in row \" + i + \" does not match expected number of columns \" + expectedValues[i].length + \".\");\r\n\r\n            for (var j = 0; j < jlen; j++) {\r\n                result[i][j] = cells.eq(j).attr('class');\r\n                expectedValues[i][j] = addNoMarginClass(expectedValues[i][j], noMarginClass);\r\n                if (result[i][j] !== expectedValues[i][j])\r\n                    addError(errorString, \"Actual class name \" + result[i][j] + \" in row \" + i + \" and column \" + j + \" does not match expected value \" + expectedValues[i][j] + \".\");\r\n            }\r\n        }\r\n\r\n        expect(errorString).toBeNull();\r\n        expect(result).toEqual(expectedValues);\r\n    }\r\n\r\n    /**\r\n     * Verify the font-size style property matches expected value\r\n     * @param actual: string - font-size property value\r\n     * @param expected: number - text size in terms of 'pt'\r\n     */\r\n    export function validateFontSize(actual: string, expected: number) {\r\n        let converter = jsCommon.PixelConverter.fromPoint;\r\n        let actualParsed = Math.round(parseFloat(actual));\r\n        let expectedParsed = Math.round(parseFloat(converter(expected)));\r\n\r\n        expect(actualParsed).toBe(expectedParsed);\r\n    }\r\n\r\n    /**\r\n     * Verify the heights of cells match expected value\r\n     * @param cells: JQuery - elements corresponding to individual tabel cells\r\n     * @param expected: number - height in terms of 'px'\r\n     */\r\n    export function validateCellHeights(cells: JQuery, expected: number) {\r\n        cells.each((index: number, elem: Element) => {\r\n            let height = parseInt($(elem).css('height').replace('px', ''), 10);\r\n\r\n            // To prevent tests from being fragile, compare the height within an acceptable range (+-5px)\r\n            expect(helpers.isCloseTo(height, expected, /*tolerance*/ 5)).toBeTruthy();\r\n        });\r\n    }\r\n\r\n    export function validateCellLeftSeparator(cells: JQuery, expectedWidth: number, expectedColor: string) {\r\n        let expectedPx = jsCommon.PixelConverter.toString(expectedWidth);\r\n        cells.each((index: number, elem: Element) => {\r\n            let borderLeftColor = $(elem).css('border-left-color');\r\n            let borderLeftStyle = $(elem).css('border-left-style');\r\n            let borderLeftWidth = $(elem).css('border-left-width');\r\n\r\n            //check if only border exists\r\n            if (borderLeftStyle !== \"none\") {\r\n                helpers.assertColorsMatch(borderLeftColor, expectedColor);\r\n                expect(borderLeftWidth).toBe(expectedPx);\r\n            }\r\n        });\r\n    }\r\n\r\n    export function validateCellBottomSeparator(cells: JQuery, expectedWidth: number, expectedColor: string) {\r\n        let expectedPx = jsCommon.PixelConverter.toString(expectedWidth);\r\n        cells.each((index: number, elem: Element) => {\r\n            let borderBottomColor = $(elem).css('border-bottom-color');\r\n            let borderBottomStyle = $(elem).css('border-bottom-style');\r\n            let borderBottomWidth = $(elem).css('border-bottom-width');\r\n\r\n            //check if only border exists\r\n            if (borderBottomStyle !== \"none\") {\r\n                helpers.assertColorsMatch(borderBottomColor, expectedColor);\r\n                expect(borderBottomWidth).toBe(expectedPx);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    function addError(errorString: string, message: string): string {\r\n        if (!errorString)\r\n            return message;\r\n\r\n        return errorString + \"\\r\\n\" + message;\r\n    }\r\n\r\n    function addNoMarginClass(classNames: string, noMarginClass: string): string {\r\n        if (!classNames || classNames.length === 0)\r\n            return noMarginClass;\r\n\r\n        return classNames + ' ' + noMarginClass;\r\n    }\r\n\r\n    export function validateTableColumnHeaderTooltip(selector: string, dataView: powerbi.DataView): void {\r\n        let tableItems = $(\"tr\").eq(0).find(`.${selector} div div:last-child`);\r\n        let values = dataView.table.columns;\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            expect(tableItems[i].textContent).toBe(values[i].displayName);\r\n            expect(tableItems[i].title).toBe(values[i].displayName);\r\n        }\r\n    }\r\n\r\n    export function validateTableRowFooterTooltip(selector: string, dataView: powerbi.DataView, index: number): void {\r\n        let tableItems = $(\"tr\").eq(index + 1).find(`.${selector} div div`);\r\n        let values = dataView.table.totals;\r\n        let numOfValue = values.length - 1;\r\n\r\n        for (let i = 1; i < numOfValue; i++) {\r\n            if (values[i]) {\r\n                let columnFormat: powerbi.DataViewMetadataColumn = dataView.table.columns[i - 1];\r\n                let formattedValue: string = values[i] ? values[i].toString() : '';\r\n\r\n                if (columnFormat) {\r\n                    formattedValue = ValueFormatter.formatValueColumn(values[i], columnFormat, TablixUtils.TablixFormatStringProp);\r\n                }\r\n\r\n                expect(tableItems[i - 1].textContent).toBe(formattedValue);\r\n                expect(tableItems[i - 1].title).toBe(formattedValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    export function validateTableRowTooltip(selector: string, dataView: powerbi.DataView, index: number): void {\r\n        let tableItems = $(\"tr\").eq(index + 1).find(`.${selector} div div`);\r\n        let values = dataView.table.rows[index];\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (values[i]) {\r\n                let columnFormat: powerbi.DataViewMetadataColumn = dataView.table.columns[i];\r\n                let formattedValue: string = values[i].toString();\r\n\r\n                if (columnFormat) {\r\n                    formattedValue = ValueFormatter.formatValueColumn(values[i], columnFormat, TablixUtils.TablixFormatStringProp);\r\n                }\r\n\r\n                expect(tableItems[i].textContent).toBe(formattedValue);\r\n                expect(tableItems[i].title).toBe(formattedValue);\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}