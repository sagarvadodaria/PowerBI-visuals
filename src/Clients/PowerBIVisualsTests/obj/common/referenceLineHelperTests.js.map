{"version":3,"sources":["common/referenceLineHelperTests.ts"],"names":["powerbitests","powerbitests.referenceLineObjects"],"mappings":"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","file":"common/referenceLineHelperTests.js","sourcesContent":["/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved. \r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *   \r\n *  The above copyright notice and this permission notice shall be included in \r\n *  all copies or substantial portions of the Software.\r\n *   \r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n\r\n\r\n\r\nmodule powerbitests {\r\n    import lineStyle = powerbi.visuals.lineStyle;\r\n    import referenceLinePosition = powerbi.visuals.referenceLinePosition;\r\n    import referenceLineDataLabelHorizontalPosition = powerbi.visuals.referenceLineDataLabelHorizontalPosition;\r\n    import referenceLineDataLabelVerticalPosition = powerbi.visuals.referenceLineDataLabelVerticalPosition;\r\n    import ObjectEnumerationBuilder = powerbi.visuals.ObjectEnumerationBuilder;\r\n    import ReferenceLineHelper = powerbi.visuals.ReferenceLineHelper;\r\n    import DataViewObject = powerbi.DataViewObject;\r\n    import DataViewObjectMap = powerbi.DataViewObjectMap;\r\n\r\n    describe('ReferenceLineHelper', () => {\r\n        describe('enumerateObjectInstances', () => {\r\n            // TODO: Remove this when we have support for user-defined objects in the format pane\r\n            it('with no reference lines generates a single reference line object', () => {\r\n                let enumerationBuilder = new ObjectEnumerationBuilder();\r\n                ReferenceLineHelper.enumerateObjectInstances(enumerationBuilder, [], 'red', 'xAxisReferenceLine');\r\n                let instances = enumerationBuilder.complete().instances;\r\n\r\n                expect(instances.length).toBe(1);\r\n                expect(instances[0]).toEqual({\r\n                    selector: {\r\n                        id: '0'\r\n                    },\r\n                    properties: {\r\n                        show: false,\r\n                        value: '',\r\n                        lineColor: { solid: { color: 'red' } },\r\n                        transparency: 50,\r\n                        style: lineStyle.dashed,\r\n                        position: referenceLinePosition.back,\r\n                        dataLabelShow: false,\r\n                    },\r\n                    objectName: 'xAxisReferenceLine',\r\n                });\r\n            });\r\n\r\n            it('enumerates all reference lines', () => {\r\n                let enumerationBuilder = new ObjectEnumerationBuilder();\r\n                let objects: DataViewObjectMap = [\r\n                    {\r\n                        id: '0',\r\n                        object: referenceLineObjects.redLine,\r\n                    }, {\r\n                        id: '1',\r\n                        object: referenceLineObjects.blueLine,\r\n                    }\r\n                ];\r\n                ReferenceLineHelper.enumerateObjectInstances(enumerationBuilder, objects, 'black', 'xAxisReferenceLine');\r\n                let instances = enumerationBuilder.complete().instances;\r\n\r\n                expect(instances.length).toBe(2);\r\n                expect(instances[0]).toEqual({\r\n                    selector: {\r\n                        id: '0'\r\n                    },\r\n                    properties: objects[0].object,\r\n                    objectName: 'xAxisReferenceLine',\r\n                });\r\n                expect(instances[1]).toEqual({\r\n                    selector: {\r\n                        id: '1'\r\n                    },\r\n                    properties: objects[1].object,\r\n                    objectName: 'xAxisReferenceLine',\r\n                });\r\n            });\r\n\r\n            it('default color is used if none is present', () => {\r\n                let enumerationBuilder = new ObjectEnumerationBuilder();\r\n\r\n                let object: DataViewObject = $.extend({}, referenceLineObjects.redLine);\r\n                object[ReferenceLineHelper.referenceLineProps.lineColor] = undefined;\r\n                object[ReferenceLineHelper.referenceLineProps.dataLabelColor] = undefined;\r\n\r\n                let objects: DataViewObjectMap = [\r\n                    {\r\n                        id: '0',\r\n                        object: object,\r\n                    }\r\n                ];\r\n\r\n                ReferenceLineHelper.enumerateObjectInstances(enumerationBuilder, objects, 'red', 'xAxisReferenceLine');\r\n                let instances = enumerationBuilder.complete().instances;\r\n\r\n                expect(instances[0].properties[ReferenceLineHelper.referenceLineProps.lineColor]).toEqual({ solid: { color: 'red' } });\r\n                expect(instances[0].properties[ReferenceLineHelper.referenceLineProps.dataLabelColor]).toEqual({ solid: { color: 'red' } });\r\n            });\r\n        });\r\n    });\r\n\r\n    module referenceLineObjects {\r\n        export const redLine: DataViewObject = {\r\n            show: true,\r\n            value: '1',\r\n            lineColor: { solid: { color: 'red' } },\r\n            transparency: 10,\r\n            style: lineStyle.dashed,\r\n            position: referenceLinePosition.back,\r\n            dataLabelShow: true,\r\n            dataLabelColor: { solid: { color: 'green' } },\r\n            dataLabelDecimalPoints: 3,\r\n            dataLabelHorizontalPosition: referenceLineDataLabelHorizontalPosition.left,\r\n            dataLabelVerticalPosition: referenceLineDataLabelVerticalPosition.above,\r\n        };\r\n\r\n        export const blueLine: DataViewObject = {\r\n            show: true,\r\n            value: '2',\r\n            lineColor: { solid: { color: 'blue' } },\r\n            transparency: 20,\r\n            style: lineStyle.dotted,\r\n            position: referenceLinePosition.front,\r\n            dataLabelShow: true,\r\n            dataLabelColor: { solid: { color: 'purple' } },\r\n            dataLabelDecimalPoints: 2,\r\n            dataLabelHorizontalPosition: referenceLineDataLabelHorizontalPosition.right,\r\n            dataLabelVerticalPosition: referenceLineDataLabelVerticalPosition.under,\r\n        };\r\n    }\r\n}"],"sourceRoot":"/source/"}